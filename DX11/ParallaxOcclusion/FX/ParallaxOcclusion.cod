//
// FX Version: fx_5_0
//
// 2 local buffer(s)
//
cbuffer cbPerFrame
{
    DirectionalLight gDirLights[3];     // Offset:    0, size:  192
    float3  gEyePosW;                   // Offset:  192, size:   12
    float   gFogStart;                  // Offset:  204, size:    4
    float   gFogRange;                  // Offset:  208, size:    4
    float4  gFogColor;                  // Offset:  224, size:   16
}

cbuffer cbPerObject
{
    float4x4 gWorld;                    // Offset:    0, size:   64
    float4x4 gWorldInvTranspose;        // Offset:   64, size:   64
    float4x4 gWorldViewProj;            // Offset:  128, size:   64
    float4x4 gTexTransform;             // Offset:  192, size:   64
    Material gMaterial;                 // Offset:  256, size:   64
    float   gHeightScale;               // Offset:  320, size:    4
    int     gMinSampleCount;            // Offset:  324, size:    4
    int     gMaxSampleCount;            // Offset:  328, size:    4
}

//
// 4 local object(s)
//
Texture2D gDiffuseMap;
Texture2D gNormalMap;
TextureCube gCubeMap;
SamplerState samLinear
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};

//
// 1 groups(s)
//
fxgroup
{
    //
    // 44 technique(s)
    //
    technique11 Light1
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //   float gHeightScale;                // Offset:  320 Size:     4 [unused]
                //   int gMinSampleCount;               // Offset:  324 Size:     4 [unused]
                //   int gMaxSampleCount;               // Offset:  328 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_temps 6
                
                #line 64 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                dp3 r3.x, v3.xyzx, cb0[0].xyzx  // vout<10:NaN:Inf>
                dp3 r3.y, v3.xyzx, cb0[1].xyzx  // vout<11:NaN:Inf>
                dp3 r3.z, v3.xyzx, cb0[2].xyzx  // vout<12:NaN:Inf>
                
                #line 69
                dp4 r4.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 72
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r5.x, r0.xyzw, cb0[12].xyzw  // vout<13:NaN:Inf>
                dp4 r5.y, r0.xyzw, cb0[13].xyzw  // vout<14:NaN:Inf>
                mov o0.xyzw, r4.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xyz, r3.xyzx  // VS<10:NaN:Inf,11:NaN:Inf,12:NaN:Inf>
                mov o4.xy, r5.xyxx  // VS<13:NaN:Inf,14:NaN:Inf>
                ret 
                // Approximately 25 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //   float gHeightScale;                // Offset:  320 Size:     4
                //   int gMinSampleCount;               // Offset:  324 Size:     4
                //   int gMaxSampleCount;               // Offset:  328 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gNormalMap                        texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[13], immediateIndexed
                dcl_constantbuffer cb1[21], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_output o0.xyzw
                dcl_temps 9
                
                #line 85 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 88
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 91
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 94
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                mov r2.xyz, -r1.xyzx  // viewDirW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 103
                mov r3.xyz, r0.zxyz  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r0.w, v3.zxyz, r3.xyzx
                mul r4.xyz, r3.yzxy, r0.wwww
                mov r4.xyz, -r4.xyzx
                add r4.xyz, r4.xyzx, v3.xyzx
                dp3 r0.w, r4.xyzx, r4.xyzx
                rsq r0.w, r0.w
                mul r4.xyz, r0.wwww, r4.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r4.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r6.xyz, r3.zxyz, r5.yzxy
                mul r5.xyz, r3.xyzx, r5.xyzx
                mov r5.xyz, -r5.xyzx
                add r5.xyz, r5.xyzx, r6.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 109
                dp3 r4.x, r2.xyzx, r4.xyzx  // viewDirTS<0:NaN:Inf>
                dp3 r4.y, r2.xyzx, r5.xyzx  // viewDirTS<1:NaN:Inf>
                dp3 r0.w, r2.xyzx, r0.xyzx  // viewDirTS<2:NaN:Inf>
                mov r2.xy, -r4.xyxx
                mul r2.xy, r2.xyxx, cb1[20].xxxx
                div r2.xy, r2.xyxx, r0.wwww  // maxParallaxOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 116
                itof r0.w, cb1[20].z
                itof r1.w, cb1[20].y
                dp3 r2.z, r1.xyzx, r0.xyzx
                mov r2.w, -r0.w
                add r1.w, r1.w, r2.w
                mul r1.w, r1.w, r2.z
                add r0.w, r0.w, r1.w
                ftoi r0.w, r0.w  // sampleCount<0>
                itof r1.w, r0.w
                div r1.w, l(1.000000), r1.w  // yStep<0:Inf>
                mul r2.xy, r1.wwww, r2.xyxx  // texStep<0:NaN:Inf,1:NaN:Inf>
                
                #line 125
                deriv_rtx_coarse r2.zw, v4.xxxy  // dx<0:Inf,1:Inf>
                deriv_rty_coarse r4.xy, v4.xyxx  // dy<0:Inf,1:Inf>
                
                #line 138
                mov r4.zw, l(0,0,0,0)  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r5.xy, l(0,0,0,0)  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r5.zw, l(0,0,0,0)  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r3.w, l(0)  // sampleIndex<0>
                mov r6.x, l(1.000000)  // currRayY<0:NaN:Inf>
                mov r6.y, l(1.000000)  // prevRayY<0:NaN:Inf>
                mov r6.z, l(0)  // prevHeight<0:Inf>
                loop 
                  iadd r6.w, r0.w, l(1)
                  ilt r7.x, r3.w, r6.w
                  breakc_z r7.x
                  add r7.xy, r4.zwzz, v4.xyxx
                  sample_d_indexable(texture2d)(float,float,float,float) r7.x, r7.xyxx, t0.wxyz, s0, r2.zwzz, r4.xyxx  // currHeight<0:Inf>
                
                #line 143
                  lt r7.y, r6.x, r7.x
                  if_nz r7.y
                
                #line 147
                    mov r7.y, -r6.y
                    add r7.z, r6.z, r7.y
                    mov r7.w, -r7.x
                    add r7.w, r6.z, r7.w
                    add r7.w, r6.x, r7.w
                    add r7.y, r7.y, r7.w
                    div r7.y, r7.z, r7.y  // t<0:NaN:Inf>
                    mul r7.yz, r2.xxyx, r7.yyyy
                    add r5.zw, r5.xxxy, r7.yyyz  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r3.w, r6.w  // sampleIndex<0>
                
                #line 143
                  else 
                
                #line 156
                    iadd r3.w, r3.w, l(1)  // sampleIndex<0>
                    mov r5.xy, r4.zwzz  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r6.y, r6.x  // prevRayY<0:NaN:Inf>
                    mov r6.z, r7.x  // prevHeight<0:Inf>
                    add r4.zw, r2.xxxy, r4.zzzw  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                    mov r7.x, -r1.w
                    add r6.x, r6.x, r7.x  // currRayY<0:NaN:Inf>
                
                #line 143
                  endif 
                
                #line 138
                endloop 
                
                #line 170
                add r2.xy, r5.zwzz, v4.xyxx  // parallaxTex<0:NaN:Inf,1:NaN:Inf>
                
                #line 196
                sample_indexable(texture2d)(float,float,float,float) r2.xyz, r2.xyxx, t0.xyzw, s0
                mov r2.xyz, r2.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                nop 
                mov r2.xyz, r2.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                mov r4.xyz, v3.xyzx  // tangentW<0,1,2>
                
                #line 206 "LightHelper.fx"
                mul r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
                add r2.xyz, r2.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // normalT<0:Inf,1:Inf,2:Inf>
                
                #line 209
                mov r3.xyz, r3.xyzx  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r0.w, r4.zxyz, r3.xyzx
                mul r5.xyz, r3.yzxy, r0.wwww
                mov r5.xyz, -r5.xyzx
                add r4.xyz, r4.xyzx, r5.xyzx
                dp3 r0.w, r4.xyzx, r4.xyzx
                rsq r0.w, r0.w
                mul r4.xyz, r0.wwww, r4.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r4.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r6.xyz, r3.zxyz, r5.yzxy
                mul r3.xyz, r3.xyzx, r5.xyzx
                mov r3.xyz, -r3.xyzx
                add r3.xyz, r3.xyzx, r6.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                mul r4.xyz, r2.xxxx, r4.xyzx
                mul r2.xyw, r2.yyyy, r3.xyxz
                add r2.xyw, r2.xyxw, r4.xyxz
                mul r0.xyz, r0.xyzx, r2.zzzz
                add r0.xyz, r0.xyzx, r2.xywx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // NormalSampleToWorldSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 197 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, r0.xyzx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r2.xyz, cb1[16].xyzx  // mat<0,1,2>
                mov r3.xyz, cb1[17].xyzx  // mat<4,5,6>
                mov r4.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                mov r5.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r6.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r7.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r8.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r8.xyz, -r8.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r2.xyz, r2.xyzx, r5.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r8.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r5.xyz, -r8.xyzx
                dp3 r2.w, r5.xyzx, r0.xyzx
                add r2.w, r2.w, r2.w
                mov r2.w, -r2.w
                mul r0.xyz, r0.xyzx, r2.wwww
                add r0.xyz, r5.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r4.w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                mul r0.yzw, r3.xxyz, r0.wwww
                mul r0.yzw, r6.xxyz, r0.yyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyz, r4.xyzx, r0.xxxx
                mul r1.xyz, r7.xyzx, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r0.xyz, r1.wwww, r0.yzwy, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r1.xyz, r1.wwww, r1.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r2.xyz, r2.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r0.xyz, r0.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                add r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 224
                add r0.xyz, r0.xyzx, r2.xyzx
                mul r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r0.xyz, r1.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 249
                mul r0.w, cb1[17].w, l(1.000000)  // litColor<3>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3>
                ret 
                // Approximately 148 instruction slots used
                            
            };
        }

    }

    technique11 Light2
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //   float gHeightScale;                // Offset:  320 Size:     4 [unused]
                //   int gMinSampleCount;               // Offset:  324 Size:     4 [unused]
                //   int gMaxSampleCount;               // Offset:  328 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_temps 6
                
                #line 64 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                dp3 r3.x, v3.xyzx, cb0[0].xyzx  // vout<10:NaN:Inf>
                dp3 r3.y, v3.xyzx, cb0[1].xyzx  // vout<11:NaN:Inf>
                dp3 r3.z, v3.xyzx, cb0[2].xyzx  // vout<12:NaN:Inf>
                
                #line 69
                dp4 r4.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 72
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r5.x, r0.xyzw, cb0[12].xyzw  // vout<13:NaN:Inf>
                dp4 r5.y, r0.xyzw, cb0[13].xyzw  // vout<14:NaN:Inf>
                mov o0.xyzw, r4.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xyz, r3.xyzx  // VS<10:NaN:Inf,11:NaN:Inf,12:NaN:Inf>
                mov o4.xy, r5.xyxx  // VS<13:NaN:Inf,14:NaN:Inf>
                ret 
                // Approximately 25 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //   float gHeightScale;                // Offset:  320 Size:     4
                //   int gMinSampleCount;               // Offset:  324 Size:     4
                //   int gMaxSampleCount;               // Offset:  328 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gNormalMap                        texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[13], immediateIndexed
                dcl_constantbuffer cb1[21], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_output o0.xyzw
                dcl_temps 12
                
                #line 85 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 88
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 91
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 94
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                mov r2.xyz, -r1.xyzx  // viewDirW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 103
                mov r3.xyz, r0.zxyz  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r0.w, v3.zxyz, r3.xyzx
                mul r4.xyz, r3.yzxy, r0.wwww
                mov r4.xyz, -r4.xyzx
                add r4.xyz, r4.xyzx, v3.xyzx
                dp3 r0.w, r4.xyzx, r4.xyzx
                rsq r0.w, r0.w
                mul r4.xyz, r0.wwww, r4.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r4.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r6.xyz, r3.zxyz, r5.yzxy
                mul r5.xyz, r3.xyzx, r5.xyzx
                mov r5.xyz, -r5.xyzx
                add r5.xyz, r5.xyzx, r6.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 109
                dp3 r4.x, r2.xyzx, r4.xyzx  // viewDirTS<0:NaN:Inf>
                dp3 r4.y, r2.xyzx, r5.xyzx  // viewDirTS<1:NaN:Inf>
                dp3 r0.w, r2.xyzx, r0.xyzx  // viewDirTS<2:NaN:Inf>
                mov r2.xy, -r4.xyxx
                mul r2.xy, r2.xyxx, cb1[20].xxxx
                div r2.xy, r2.xyxx, r0.wwww  // maxParallaxOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 116
                itof r0.w, cb1[20].z
                itof r1.w, cb1[20].y
                dp3 r2.z, r1.xyzx, r0.xyzx
                mov r2.w, -r0.w
                add r1.w, r1.w, r2.w
                mul r1.w, r1.w, r2.z
                add r0.w, r0.w, r1.w
                ftoi r0.w, r0.w  // sampleCount<0>
                itof r1.w, r0.w
                div r1.w, l(1.000000), r1.w  // yStep<0:Inf>
                mul r2.xy, r1.wwww, r2.xyxx  // texStep<0:NaN:Inf,1:NaN:Inf>
                
                #line 125
                deriv_rtx_coarse r2.zw, v4.xxxy  // dx<0:Inf,1:Inf>
                deriv_rty_coarse r4.xy, v4.xyxx  // dy<0:Inf,1:Inf>
                
                #line 138
                mov r4.zw, l(0,0,0,0)  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r5.xy, l(0,0,0,0)  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r5.zw, l(0,0,0,0)  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r3.w, l(0)  // sampleIndex<0>
                mov r6.x, l(1.000000)  // currRayY<0:NaN:Inf>
                mov r6.y, l(1.000000)  // prevRayY<0:NaN:Inf>
                mov r6.z, l(0)  // prevHeight<0:Inf>
                loop 
                  iadd r6.w, r0.w, l(1)
                  ilt r7.x, r3.w, r6.w
                  breakc_z r7.x
                  add r7.xy, r4.zwzz, v4.xyxx
                  sample_d_indexable(texture2d)(float,float,float,float) r7.x, r7.xyxx, t0.wxyz, s0, r2.zwzz, r4.xyxx  // currHeight<0:Inf>
                
                #line 143
                  lt r7.y, r6.x, r7.x
                  if_nz r7.y
                
                #line 147
                    mov r7.y, -r6.y
                    add r7.z, r6.z, r7.y
                    mov r7.w, -r7.x
                    add r7.w, r6.z, r7.w
                    add r7.w, r6.x, r7.w
                    add r7.y, r7.y, r7.w
                    div r7.y, r7.z, r7.y  // t<0:NaN:Inf>
                    mul r7.yz, r2.xxyx, r7.yyyy
                    add r5.zw, r5.xxxy, r7.yyyz  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r3.w, r6.w  // sampleIndex<0>
                
                #line 143
                  else 
                
                #line 156
                    iadd r3.w, r3.w, l(1)  // sampleIndex<0>
                    mov r5.xy, r4.zwzz  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r6.y, r6.x  // prevRayY<0:NaN:Inf>
                    mov r6.z, r7.x  // prevHeight<0:Inf>
                    add r4.zw, r2.xxxy, r4.zzzw  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                    mov r7.x, -r1.w
                    add r6.x, r6.x, r7.x  // currRayY<0:NaN:Inf>
                
                #line 143
                  endif 
                
                #line 138
                endloop 
                
                #line 170
                add r2.xy, r5.zwzz, v4.xyxx  // parallaxTex<0:NaN:Inf,1:NaN:Inf>
                
                #line 196
                sample_indexable(texture2d)(float,float,float,float) r2.xyz, r2.xyxx, t0.xyzw, s0
                mov r2.xyz, r2.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                nop 
                mov r2.xyz, r2.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                mov r4.xyz, v3.xyzx  // tangentW<0,1,2>
                
                #line 206 "LightHelper.fx"
                mul r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
                add r2.xyz, r2.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // normalT<0:Inf,1:Inf,2:Inf>
                
                #line 209
                mov r3.xyz, r3.xyzx  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r0.w, r4.zxyz, r3.xyzx
                mul r5.xyz, r3.yzxy, r0.wwww
                mov r5.xyz, -r5.xyzx
                add r4.xyz, r4.xyzx, r5.xyzx
                dp3 r0.w, r4.xyzx, r4.xyzx
                rsq r0.w, r0.w
                mul r4.xyz, r0.wwww, r4.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r4.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r6.xyz, r3.zxyz, r5.yzxy
                mul r3.xyz, r3.xyzx, r5.xyzx
                mov r3.xyz, -r3.xyzx
                add r3.xyz, r3.xyzx, r6.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                mul r4.xyz, r2.xxxx, r4.xyzx
                mul r2.xyw, r2.yyyy, r3.xyxz
                add r2.xyw, r2.xyxw, r4.xyxz
                mul r0.xyz, r0.xyzx, r2.zzzz
                add r0.xyz, r0.xyzx, r2.xywx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // NormalSampleToWorldSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 197 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, r0.xyzx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r2.xyz, cb1[16].xyzx  // mat<0,1,2>
                mov r3.xyz, cb1[17].xyzx  // mat<4,5,6>
                mov r4.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                mov r5.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r6.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r7.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r8.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r8.xyz, -r8.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r5.xyz, r2.xyzx, r5.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r8.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r8.xyz, -r8.xyzx
                dp3 r2.w, r8.xyzx, r0.xyzx
                add r2.w, r2.w, r2.w
                mov r2.w, -r2.w
                mul r9.xyz, r0.xyzx, r2.wwww
                add r8.xyz, r8.xyzx, r9.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r2.w, r8.xyzx, r1.xyzx
                max r2.w, r2.w, l(0.000000)
                log r2.w, r2.w
                mul r2.w, r2.w, r4.w
                exp r2.w, r2.w  // specFactor<0:NaN:Inf>
                mul r8.xyz, r3.xyzx, r0.wwww
                mul r6.xyz, r6.xyzx, r8.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r8.xyz, r4.xyzx, r2.wwww
                mul r7.xyz, r7.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r6.xyz, r1.wwww, r6.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r5.xyz, r5.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r6.xyz, r6.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.xyz, r7.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                add r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r8.xyz, cb0[4].xyzx  // L<0,1,2>
                mov r9.xyz, cb0[5].xyzx  // L<4,5,6>
                mov r10.xyz, cb0[6].xyzx  // L<8,9,10>
                mov r11.xyz, cb0[7].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r11.xyz, -r11.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r2.xyz, r2.xyzx, r8.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r11.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r8.xyz, -r11.xyzx
                dp3 r2.w, r8.xyzx, r0.xyzx
                add r2.w, r2.w, r2.w
                mov r2.w, -r2.w
                mul r0.xyz, r0.xyzx, r2.wwww
                add r0.xyz, r8.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r4.w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                mul r0.yzw, r3.xxyz, r0.wwww
                mul r0.yzw, r9.xxyz, r0.yyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyz, r4.xyzx, r0.xxxx
                mul r1.xyz, r10.xyzx, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r0.xyz, r1.wwww, r0.yzwy, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r1.xyz, r1.wwww, r1.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r2.xyz, r2.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r0.xyz, r0.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r2.xyz, r2.xyzx, r5.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r0.xyz, r0.xyzx, r6.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r1.xyz, r1.xyzx, r7.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 224
                add r0.xyz, r0.xyzx, r2.xyzx
                mul r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r0.xyz, r1.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 249
                mul r0.w, cb1[17].w, l(1.000000)  // litColor<3>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3>
                ret 
                // Approximately 180 instruction slots used
                            
            };
        }

    }

    technique11 Light3
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //   float gHeightScale;                // Offset:  320 Size:     4 [unused]
                //   int gMinSampleCount;               // Offset:  324 Size:     4 [unused]
                //   int gMaxSampleCount;               // Offset:  328 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_temps 6
                
                #line 64 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                dp3 r3.x, v3.xyzx, cb0[0].xyzx  // vout<10:NaN:Inf>
                dp3 r3.y, v3.xyzx, cb0[1].xyzx  // vout<11:NaN:Inf>
                dp3 r3.z, v3.xyzx, cb0[2].xyzx  // vout<12:NaN:Inf>
                
                #line 69
                dp4 r4.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 72
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r5.x, r0.xyzw, cb0[12].xyzw  // vout<13:NaN:Inf>
                dp4 r5.y, r0.xyzw, cb0[13].xyzw  // vout<14:NaN:Inf>
                mov o0.xyzw, r4.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xyz, r3.xyzx  // VS<10:NaN:Inf,11:NaN:Inf,12:NaN:Inf>
                mov o4.xy, r5.xyxx  // VS<13:NaN:Inf,14:NaN:Inf>
                ret 
                // Approximately 25 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //   float gHeightScale;                // Offset:  320 Size:     4
                //   int gMinSampleCount;               // Offset:  324 Size:     4
                //   int gMaxSampleCount;               // Offset:  328 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gNormalMap                        texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[13], immediateIndexed
                dcl_constantbuffer cb1[21], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_output o0.xyzw
                dcl_temps 13
                
                #line 85 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 88
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 91
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 94
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                mov r2.xyz, -r1.xyzx  // viewDirW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 103
                mov r3.xyz, r0.zxyz  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r0.w, v3.zxyz, r3.xyzx
                mul r4.xyz, r3.yzxy, r0.wwww
                mov r4.xyz, -r4.xyzx
                add r4.xyz, r4.xyzx, v3.xyzx
                dp3 r0.w, r4.xyzx, r4.xyzx
                rsq r0.w, r0.w
                mul r4.xyz, r0.wwww, r4.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r4.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r6.xyz, r3.zxyz, r5.yzxy
                mul r5.xyz, r3.xyzx, r5.xyzx
                mov r5.xyz, -r5.xyzx
                add r5.xyz, r5.xyzx, r6.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 109
                dp3 r4.x, r2.xyzx, r4.xyzx  // viewDirTS<0:NaN:Inf>
                dp3 r4.y, r2.xyzx, r5.xyzx  // viewDirTS<1:NaN:Inf>
                dp3 r0.w, r2.xyzx, r0.xyzx  // viewDirTS<2:NaN:Inf>
                mov r2.xy, -r4.xyxx
                mul r2.xy, r2.xyxx, cb1[20].xxxx
                div r2.xy, r2.xyxx, r0.wwww  // maxParallaxOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 116
                itof r0.w, cb1[20].z
                itof r1.w, cb1[20].y
                dp3 r2.z, r1.xyzx, r0.xyzx
                mov r2.w, -r0.w
                add r1.w, r1.w, r2.w
                mul r1.w, r1.w, r2.z
                add r0.w, r0.w, r1.w
                ftoi r0.w, r0.w  // sampleCount<0>
                itof r1.w, r0.w
                div r1.w, l(1.000000), r1.w  // yStep<0:Inf>
                mul r2.xy, r1.wwww, r2.xyxx  // texStep<0:NaN:Inf,1:NaN:Inf>
                
                #line 125
                deriv_rtx_coarse r2.zw, v4.xxxy  // dx<0:Inf,1:Inf>
                deriv_rty_coarse r4.xy, v4.xyxx  // dy<0:Inf,1:Inf>
                
                #line 138
                mov r4.zw, l(0,0,0,0)  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r5.xy, l(0,0,0,0)  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r5.zw, l(0,0,0,0)  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r3.w, l(0)  // sampleIndex<0>
                mov r6.x, l(1.000000)  // currRayY<0:NaN:Inf>
                mov r6.y, l(1.000000)  // prevRayY<0:NaN:Inf>
                mov r6.z, l(0)  // prevHeight<0:Inf>
                loop 
                  iadd r6.w, r0.w, l(1)
                  ilt r7.x, r3.w, r6.w
                  breakc_z r7.x
                  add r7.xy, r4.zwzz, v4.xyxx
                  sample_d_indexable(texture2d)(float,float,float,float) r7.x, r7.xyxx, t0.wxyz, s0, r2.zwzz, r4.xyxx  // currHeight<0:Inf>
                
                #line 143
                  lt r7.y, r6.x, r7.x
                  if_nz r7.y
                
                #line 147
                    mov r7.y, -r6.y
                    add r7.z, r6.z, r7.y
                    mov r7.w, -r7.x
                    add r7.w, r6.z, r7.w
                    add r7.w, r6.x, r7.w
                    add r7.y, r7.y, r7.w
                    div r7.y, r7.z, r7.y  // t<0:NaN:Inf>
                    mul r7.yz, r2.xxyx, r7.yyyy
                    add r5.zw, r5.xxxy, r7.yyyz  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r3.w, r6.w  // sampleIndex<0>
                
                #line 143
                  else 
                
                #line 156
                    iadd r3.w, r3.w, l(1)  // sampleIndex<0>
                    mov r5.xy, r4.zwzz  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r6.y, r6.x  // prevRayY<0:NaN:Inf>
                    mov r6.z, r7.x  // prevHeight<0:Inf>
                    add r4.zw, r2.xxxy, r4.zzzw  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                    mov r7.x, -r1.w
                    add r6.x, r6.x, r7.x  // currRayY<0:NaN:Inf>
                
                #line 143
                  endif 
                
                #line 138
                endloop 
                
                #line 170
                add r2.xy, r5.zwzz, v4.xyxx  // parallaxTex<0:NaN:Inf,1:NaN:Inf>
                
                #line 196
                sample_indexable(texture2d)(float,float,float,float) r2.xyz, r2.xyxx, t0.xyzw, s0
                mov r2.xyz, r2.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                nop 
                mov r2.xyz, r2.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                mov r4.xyz, v3.xyzx  // tangentW<0,1,2>
                
                #line 206 "LightHelper.fx"
                mul r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
                add r2.xyz, r2.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // normalT<0:Inf,1:Inf,2:Inf>
                
                #line 209
                mov r3.xyz, r3.xyzx  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r0.w, r4.zxyz, r3.xyzx
                mul r5.xyz, r3.yzxy, r0.wwww
                mov r5.xyz, -r5.xyzx
                add r4.xyz, r4.xyzx, r5.xyzx
                dp3 r0.w, r4.xyzx, r4.xyzx
                rsq r0.w, r0.w
                mul r4.xyz, r0.wwww, r4.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r4.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r6.xyz, r3.zxyz, r5.yzxy
                mul r3.xyz, r3.xyzx, r5.xyzx
                mov r3.xyz, -r3.xyzx
                add r3.xyz, r3.xyzx, r6.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                mul r4.xyz, r2.xxxx, r4.xyzx
                mul r2.xyw, r2.yyyy, r3.xyxz
                add r2.xyw, r2.xyxw, r4.xyxz
                mul r0.xyz, r0.xyzx, r2.zzzz
                add r0.xyz, r0.xyzx, r2.xywx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // NormalSampleToWorldSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 197 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, r0.xyzx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r2.xyz, cb1[16].xyzx  // mat<0,1,2>
                mov r3.xyz, cb1[17].xyzx  // mat<4,5,6>
                mov r4.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                mov r5.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r6.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r7.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r8.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r8.xyz, -r8.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r5.xyz, r2.xyzx, r5.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r8.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r8.xyz, -r8.xyzx
                dp3 r2.w, r8.xyzx, r0.xyzx
                add r2.w, r2.w, r2.w
                mov r2.w, -r2.w
                mul r9.xyz, r0.xyzx, r2.wwww
                add r8.xyz, r8.xyzx, r9.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r2.w, r8.xyzx, r1.xyzx
                max r2.w, r2.w, l(0.000000)
                log r2.w, r2.w
                mul r2.w, r2.w, r4.w
                exp r2.w, r2.w  // specFactor<0:NaN:Inf>
                mul r8.xyz, r3.xyzx, r0.wwww
                mul r6.xyz, r6.xyzx, r8.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r8.xyz, r4.xyzx, r2.wwww
                mul r7.xyz, r7.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r6.xyz, r1.wwww, r6.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r5.xyz, r5.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r6.xyz, r6.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.xyz, r7.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                add r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r8.xyz, cb0[4].xyzx  // L<0,1,2>
                mov r9.xyz, cb0[5].xyzx  // L<4,5,6>
                mov r10.xyz, cb0[6].xyzx  // L<8,9,10>
                mov r11.xyz, cb0[7].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r11.xyz, -r11.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r8.xyz, r2.xyzx, r8.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r11.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r11.xyz, -r11.xyzx
                dp3 r2.w, r11.xyzx, r0.xyzx
                add r2.w, r2.w, r2.w
                mov r2.w, -r2.w
                mul r12.xyz, r0.xyzx, r2.wwww
                add r11.xyz, r11.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r2.w, r11.xyzx, r1.xyzx
                max r2.w, r2.w, l(0.000000)
                log r2.w, r2.w
                mul r2.w, r2.w, r4.w
                exp r2.w, r2.w  // specFactor<0:NaN:Inf>
                mul r11.xyz, r3.xyzx, r0.wwww
                mul r9.xyz, r9.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r11.xyz, r4.xyzx, r2.wwww
                mul r10.xyz, r10.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r9.xyz, r1.wwww, r9.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r10.xyz, r1.wwww, r10.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r8.xyz, r8.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r9.xyz, r9.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r10.xyz, r10.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r5.xyz, r5.xyzx, r8.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r6.xyz, r6.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r7.xyz, r7.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r8.xyz, cb0[8].xyzx  // L<0,1,2>
                mov r9.xyz, cb0[9].xyzx  // L<4,5,6>
                mov r10.xyz, cb0[10].xyzx  // L<8,9,10>
                mov r11.xyz, cb0[11].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r11.xyz, -r11.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r2.xyz, r2.xyzx, r8.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r11.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r8.xyz, -r11.xyzx
                dp3 r2.w, r8.xyzx, r0.xyzx
                add r2.w, r2.w, r2.w
                mov r2.w, -r2.w
                mul r0.xyz, r0.xyzx, r2.wwww
                add r0.xyz, r8.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r4.w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                mul r0.yzw, r3.xxyz, r0.wwww
                mul r0.yzw, r9.xxyz, r0.yyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyz, r4.xyzx, r0.xxxx
                mul r1.xyz, r10.xyzx, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r0.xyz, r1.wwww, r0.yzwy, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r1.xyz, r1.wwww, r1.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r2.xyz, r2.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r0.xyz, r0.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r2.xyz, r2.xyzx, r5.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r0.xyz, r0.xyzx, r6.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r1.xyz, r1.xyzx, r7.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 224
                add r0.xyz, r0.xyzx, r2.xyzx
                mul r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r0.xyz, r1.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 249
                mul r0.w, cb1[17].w, l(1.000000)  // litColor<3>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3>
                ret 
                // Approximately 212 instruction slots used
                            
            };
        }

    }

    technique11 Light0Tex
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //   float gHeightScale;                // Offset:  320 Size:     4 [unused]
                //   int gMinSampleCount;               // Offset:  324 Size:     4 [unused]
                //   int gMaxSampleCount;               // Offset:  328 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_temps 6
                
                #line 64 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                dp3 r3.x, v3.xyzx, cb0[0].xyzx  // vout<10:NaN:Inf>
                dp3 r3.y, v3.xyzx, cb0[1].xyzx  // vout<11:NaN:Inf>
                dp3 r3.z, v3.xyzx, cb0[2].xyzx  // vout<12:NaN:Inf>
                
                #line 69
                dp4 r4.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 72
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r5.x, r0.xyzw, cb0[12].xyzw  // vout<13:NaN:Inf>
                dp4 r5.y, r0.xyzw, cb0[13].xyzw  // vout<14:NaN:Inf>
                mov o0.xyzw, r4.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xyz, r3.xyzx  // VS<10:NaN:Inf,11:NaN:Inf,12:NaN:Inf>
                mov o4.xy, r5.xyxx  // VS<13:NaN:Inf,14:NaN:Inf>
                ret 
                // Approximately 25 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192 [unused]
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //   float gHeightScale;                // Offset:  320 Size:     4
                //   int gMinSampleCount;               // Offset:  324 Size:     4
                //   int gMaxSampleCount;               // Offset:  328 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gNormalMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[13], immediateIndexed
                dcl_constantbuffer cb1[21], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_output o0.xyzw
                dcl_temps 7
                
                #line 85 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 88
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 91
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 94
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                mov r2.xyz, -r1.xyzx  // viewDirW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 103
                mov r3.xyz, r0.zxyz  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r0.w, v3.zxyz, r3.xyzx
                mul r4.xyz, r3.yzxy, r0.wwww
                mov r4.xyz, -r4.xyzx
                add r4.xyz, r4.xyzx, v3.xyzx
                dp3 r0.w, r4.xyzx, r4.xyzx
                rsq r0.w, r0.w
                mul r4.xyz, r0.wwww, r4.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r4.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r6.xyz, r3.zxyz, r5.yzxy
                mul r3.xyz, r3.xyzx, r5.xyzx
                mov r3.xyz, -r3.xyzx
                add r3.xyz, r3.xyzx, r6.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 109
                dp3 r4.x, r2.xyzx, r4.xyzx  // viewDirTS<0:NaN:Inf>
                dp3 r4.y, r2.xyzx, r3.xyzx  // viewDirTS<1:NaN:Inf>
                dp3 r0.w, r2.xyzx, r0.xyzx  // viewDirTS<2:NaN:Inf>
                mov r2.xy, -r4.xyxx
                mul r2.xy, r2.xyxx, cb1[20].xxxx
                div r2.xy, r2.xyxx, r0.wwww  // maxParallaxOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 116
                itof r0.w, cb1[20].z
                itof r1.w, cb1[20].y
                dp3 r0.x, r1.xyzx, r0.xyzx
                mov r0.y, -r0.w
                add r0.y, r0.y, r1.w
                mul r0.x, r0.y, r0.x
                add r0.x, r0.x, r0.w
                ftoi r0.x, r0.x  // sampleCount<0>
                itof r0.y, r0.x
                div r0.y, l(1.000000), r0.y  // yStep<0:Inf>
                mul r0.zw, r0.yyyy, r2.xxxy  // texStep<0:NaN:Inf,1:NaN:Inf>
                
                #line 125
                deriv_rtx_coarse r1.xy, v4.xyxx  // dx<0:Inf,1:Inf>
                deriv_rty_coarse r1.zw, v4.xxxy  // dy<0:Inf,1:Inf>
                
                #line 138
                mov r2.xy, l(0,0,0,0)  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r2.zw, l(0,0,0,0)  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r3.xy, l(0,0,0,0)  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r3.z, l(0)  // sampleIndex<0>
                mov r3.w, l(1.000000)  // currRayY<0:NaN:Inf>
                mov r4.x, l(1.000000)  // prevRayY<0:NaN:Inf>
                mov r4.y, l(0)  // prevHeight<0:Inf>
                loop 
                  iadd r4.z, r0.x, l(1)
                  ilt r4.w, r3.z, r4.z
                  breakc_z r4.w
                  add r5.xy, r2.xyxx, v4.xyxx
                  sample_d_indexable(texture2d)(float,float,float,float) r4.w, r5.xyxx, t1.xyzw, s0, r1.xyxx, r1.zwzz  // currHeight<0:Inf>
                
                #line 143
                  lt r5.x, r3.w, r4.w
                  if_nz r5.x
                
                #line 147
                    mov r5.x, -r4.x
                    add r5.y, r4.y, r5.x
                    mov r5.z, -r4.w
                    add r5.z, r4.y, r5.z
                    add r5.z, r3.w, r5.z
                    add r5.x, r5.x, r5.z
                    div r5.x, r5.y, r5.x  // t<0:NaN:Inf>
                    mul r5.xy, r0.zwzz, r5.xxxx
                    add r3.xy, r2.zwzz, r5.xyxx  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r3.z, r4.z  // sampleIndex<0>
                
                #line 143
                  else 
                
                #line 156
                    iadd r3.z, r3.z, l(1)  // sampleIndex<0>
                    mov r2.zw, r2.xxxy  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r4.x, r3.w  // prevRayY<0:NaN:Inf>
                    mov r4.y, r4.w  // prevHeight<0:Inf>
                    add r2.xy, r0.zwzz, r2.xyxx  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                    mov r4.w, -r0.y
                    add r3.w, r3.w, r4.w  // currRayY<0:NaN:Inf>
                
                #line 143
                  endif 
                
                #line 138
                endloop 
                
                #line 170
                add r0.xy, r3.xyxx, v4.xyxx  // parallaxTex<0:NaN:Inf,1:NaN:Inf>
                
                #line 181
                sample_indexable(texture2d)(float,float,float,float) r0.xyzw, r0.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 197
                nop 
                
                #line 203
                mov r0.xyz, r0.xyzx  // litColor<0:Inf,1:Inf,2:Inf>
                
                #line 249
                mul r0.w, r0.w, cb1[17].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:Inf,1:Inf,2:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 84 instruction slots used
                            
            };
        }

    }

    technique11 Light1Tex
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //   float gHeightScale;                // Offset:  320 Size:     4 [unused]
                //   int gMinSampleCount;               // Offset:  324 Size:     4 [unused]
                //   int gMaxSampleCount;               // Offset:  328 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_temps 6
                
                #line 64 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                dp3 r3.x, v3.xyzx, cb0[0].xyzx  // vout<10:NaN:Inf>
                dp3 r3.y, v3.xyzx, cb0[1].xyzx  // vout<11:NaN:Inf>
                dp3 r3.z, v3.xyzx, cb0[2].xyzx  // vout<12:NaN:Inf>
                
                #line 69
                dp4 r4.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 72
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r5.x, r0.xyzw, cb0[12].xyzw  // vout<13:NaN:Inf>
                dp4 r5.y, r0.xyzw, cb0[13].xyzw  // vout<14:NaN:Inf>
                mov o0.xyzw, r4.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xyz, r3.xyzx  // VS<10:NaN:Inf,11:NaN:Inf,12:NaN:Inf>
                mov o4.xy, r5.xyxx  // VS<13:NaN:Inf,14:NaN:Inf>
                ret 
                // Approximately 25 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //   float gHeightScale;                // Offset:  320 Size:     4
                //   int gMinSampleCount;               // Offset:  324 Size:     4
                //   int gMaxSampleCount;               // Offset:  328 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gNormalMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[13], immediateIndexed
                dcl_constantbuffer cb1[21], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_output o0.xyzw
                dcl_temps 10
                
                #line 85 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 88
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 91
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 94
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                mov r2.xyz, -r1.xyzx  // viewDirW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 103
                mov r3.xyz, r0.zxyz  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r0.w, v3.zxyz, r3.xyzx
                mul r4.xyz, r3.yzxy, r0.wwww
                mov r4.xyz, -r4.xyzx
                add r4.xyz, r4.xyzx, v3.xyzx
                dp3 r0.w, r4.xyzx, r4.xyzx
                rsq r0.w, r0.w
                mul r4.xyz, r0.wwww, r4.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r4.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r6.xyz, r3.zxyz, r5.yzxy
                mul r5.xyz, r3.xyzx, r5.xyzx
                mov r5.xyz, -r5.xyzx
                add r5.xyz, r5.xyzx, r6.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 109
                dp3 r4.x, r2.xyzx, r4.xyzx  // viewDirTS<0:NaN:Inf>
                dp3 r4.y, r2.xyzx, r5.xyzx  // viewDirTS<1:NaN:Inf>
                dp3 r0.w, r2.xyzx, r0.xyzx  // viewDirTS<2:NaN:Inf>
                mov r2.xy, -r4.xyxx
                mul r2.xy, r2.xyxx, cb1[20].xxxx
                div r2.xy, r2.xyxx, r0.wwww  // maxParallaxOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 116
                itof r0.w, cb1[20].z
                itof r1.w, cb1[20].y
                dp3 r2.z, r1.xyzx, r0.xyzx
                mov r2.w, -r0.w
                add r1.w, r1.w, r2.w
                mul r1.w, r1.w, r2.z
                add r0.w, r0.w, r1.w
                ftoi r0.w, r0.w  // sampleCount<0>
                itof r1.w, r0.w
                div r1.w, l(1.000000), r1.w  // yStep<0:Inf>
                mul r2.xy, r1.wwww, r2.xyxx  // texStep<0:NaN:Inf,1:NaN:Inf>
                
                #line 125
                deriv_rtx_coarse r2.zw, v4.xxxy  // dx<0:Inf,1:Inf>
                deriv_rty_coarse r4.xy, v4.xyxx  // dy<0:Inf,1:Inf>
                
                #line 138
                mov r4.zw, l(0,0,0,0)  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r5.xy, l(0,0,0,0)  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r5.zw, l(0,0,0,0)  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r3.w, l(0)  // sampleIndex<0>
                mov r6.x, l(1.000000)  // currRayY<0:NaN:Inf>
                mov r6.y, l(1.000000)  // prevRayY<0:NaN:Inf>
                mov r6.z, l(0)  // prevHeight<0:Inf>
                loop 
                  iadd r6.w, r0.w, l(1)
                  ilt r7.x, r3.w, r6.w
                  breakc_z r7.x
                  add r7.xy, r4.zwzz, v4.xyxx
                  sample_d_indexable(texture2d)(float,float,float,float) r7.x, r7.xyxx, t1.wxyz, s0, r2.zwzz, r4.xyxx  // currHeight<0:Inf>
                
                #line 143
                  lt r7.y, r6.x, r7.x
                  if_nz r7.y
                
                #line 147
                    mov r7.y, -r6.y
                    add r7.z, r6.z, r7.y
                    mov r7.w, -r7.x
                    add r7.w, r6.z, r7.w
                    add r7.w, r6.x, r7.w
                    add r7.y, r7.y, r7.w
                    div r7.y, r7.z, r7.y  // t<0:NaN:Inf>
                    mul r7.yz, r2.xxyx, r7.yyyy
                    add r5.zw, r5.xxxy, r7.yyyz  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r3.w, r6.w  // sampleIndex<0>
                
                #line 143
                  else 
                
                #line 156
                    iadd r3.w, r3.w, l(1)  // sampleIndex<0>
                    mov r5.xy, r4.zwzz  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r6.y, r6.x  // prevRayY<0:NaN:Inf>
                    mov r6.z, r7.x  // prevHeight<0:Inf>
                    add r4.zw, r2.xxxy, r4.zzzw  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                    mov r7.x, -r1.w
                    add r6.x, r6.x, r7.x  // currRayY<0:NaN:Inf>
                
                #line 143
                  endif 
                
                #line 138
                endloop 
                
                #line 170
                add r2.xy, r5.zwzz, v4.xyxx  // parallaxTex<0:NaN:Inf,1:NaN:Inf>
                
                #line 181
                sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r2.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 196
                sample_indexable(texture2d)(float,float,float,float) r2.xyz, r2.xyxx, t1.xyzw, s0
                mov r2.xyz, r2.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                nop 
                mov r2.xyz, r2.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                mov r5.xyz, v3.xyzx  // tangentW<0,1,2>
                
                #line 206 "LightHelper.fx"
                mul r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
                add r2.xyz, r2.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // normalT<0:Inf,1:Inf,2:Inf>
                
                #line 209
                mov r3.xyz, r3.xyzx  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r0.w, r5.zxyz, r3.xyzx
                mul r6.xyz, r3.yzxy, r0.wwww
                mov r6.xyz, -r6.xyzx
                add r5.xyz, r5.xyzx, r6.xyzx
                dp3 r0.w, r5.xyzx, r5.xyzx
                rsq r0.w, r0.w
                mul r5.xyz, r0.wwww, r5.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r6.xyz, r5.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r7.xyz, r3.zxyz, r6.yzxy
                mul r3.xyz, r3.xyzx, r6.xyzx
                mov r3.xyz, -r3.xyzx
                add r3.xyz, r3.xyzx, r7.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                mul r5.xyz, r2.xxxx, r5.xyzx
                mul r2.xyw, r2.yyyy, r3.xyxz
                add r2.xyw, r2.xyxw, r5.xyxz
                mul r0.xyz, r0.xyzx, r2.zzzz
                add r0.xyz, r0.xyzx, r2.xywx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // NormalSampleToWorldSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 197 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, r0.xyzx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r2.xyz, cb1[16].xyzx  // mat<0,1,2>
                mov r3.xyz, cb1[17].xyzx  // mat<4,5,6>
                mov r5.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r2.xyz, r2.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r9.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r6.xyz, -r9.xyzx
                dp3 r2.w, r6.xyzx, r0.xyzx
                add r2.w, r2.w, r2.w
                mov r2.w, -r2.w
                mul r0.xyz, r0.xyzx, r2.wwww
                add r0.xyz, r6.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r5.w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                mul r0.yzw, r3.xxyz, r0.wwww
                mul r0.yzw, r7.xxyz, r0.yyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyz, r5.xyzx, r0.xxxx
                mul r1.xyz, r8.xyzx, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r0.xyz, r1.wwww, r0.yzwy, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r1.xyz, r1.wwww, r1.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r2.xyz, r2.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r0.xyz, r0.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                add r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 224
                add r0.xyz, r0.xyzx, r2.xyzx
                mul r0.xyz, r0.xyzx, r4.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 249
                mul r0.w, r4.w, cb1[17].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 149 instruction slots used
                            
            };
        }

    }

    technique11 Light2Tex
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //   float gHeightScale;                // Offset:  320 Size:     4 [unused]
                //   int gMinSampleCount;               // Offset:  324 Size:     4 [unused]
                //   int gMaxSampleCount;               // Offset:  328 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_temps 6
                
                #line 64 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                dp3 r3.x, v3.xyzx, cb0[0].xyzx  // vout<10:NaN:Inf>
                dp3 r3.y, v3.xyzx, cb0[1].xyzx  // vout<11:NaN:Inf>
                dp3 r3.z, v3.xyzx, cb0[2].xyzx  // vout<12:NaN:Inf>
                
                #line 69
                dp4 r4.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 72
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r5.x, r0.xyzw, cb0[12].xyzw  // vout<13:NaN:Inf>
                dp4 r5.y, r0.xyzw, cb0[13].xyzw  // vout<14:NaN:Inf>
                mov o0.xyzw, r4.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xyz, r3.xyzx  // VS<10:NaN:Inf,11:NaN:Inf,12:NaN:Inf>
                mov o4.xy, r5.xyxx  // VS<13:NaN:Inf,14:NaN:Inf>
                ret 
                // Approximately 25 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //   float gHeightScale;                // Offset:  320 Size:     4
                //   int gMinSampleCount;               // Offset:  324 Size:     4
                //   int gMaxSampleCount;               // Offset:  328 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gNormalMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[13], immediateIndexed
                dcl_constantbuffer cb1[21], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_output o0.xyzw
                dcl_temps 13
                
                #line 85 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 88
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 91
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 94
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                mov r2.xyz, -r1.xyzx  // viewDirW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 103
                mov r3.xyz, r0.zxyz  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r0.w, v3.zxyz, r3.xyzx
                mul r4.xyz, r3.yzxy, r0.wwww
                mov r4.xyz, -r4.xyzx
                add r4.xyz, r4.xyzx, v3.xyzx
                dp3 r0.w, r4.xyzx, r4.xyzx
                rsq r0.w, r0.w
                mul r4.xyz, r0.wwww, r4.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r4.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r6.xyz, r3.zxyz, r5.yzxy
                mul r5.xyz, r3.xyzx, r5.xyzx
                mov r5.xyz, -r5.xyzx
                add r5.xyz, r5.xyzx, r6.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 109
                dp3 r4.x, r2.xyzx, r4.xyzx  // viewDirTS<0:NaN:Inf>
                dp3 r4.y, r2.xyzx, r5.xyzx  // viewDirTS<1:NaN:Inf>
                dp3 r0.w, r2.xyzx, r0.xyzx  // viewDirTS<2:NaN:Inf>
                mov r2.xy, -r4.xyxx
                mul r2.xy, r2.xyxx, cb1[20].xxxx
                div r2.xy, r2.xyxx, r0.wwww  // maxParallaxOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 116
                itof r0.w, cb1[20].z
                itof r1.w, cb1[20].y
                dp3 r2.z, r1.xyzx, r0.xyzx
                mov r2.w, -r0.w
                add r1.w, r1.w, r2.w
                mul r1.w, r1.w, r2.z
                add r0.w, r0.w, r1.w
                ftoi r0.w, r0.w  // sampleCount<0>
                itof r1.w, r0.w
                div r1.w, l(1.000000), r1.w  // yStep<0:Inf>
                mul r2.xy, r1.wwww, r2.xyxx  // texStep<0:NaN:Inf,1:NaN:Inf>
                
                #line 125
                deriv_rtx_coarse r2.zw, v4.xxxy  // dx<0:Inf,1:Inf>
                deriv_rty_coarse r4.xy, v4.xyxx  // dy<0:Inf,1:Inf>
                
                #line 138
                mov r4.zw, l(0,0,0,0)  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r5.xy, l(0,0,0,0)  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r5.zw, l(0,0,0,0)  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r3.w, l(0)  // sampleIndex<0>
                mov r6.x, l(1.000000)  // currRayY<0:NaN:Inf>
                mov r6.y, l(1.000000)  // prevRayY<0:NaN:Inf>
                mov r6.z, l(0)  // prevHeight<0:Inf>
                loop 
                  iadd r6.w, r0.w, l(1)
                  ilt r7.x, r3.w, r6.w
                  breakc_z r7.x
                  add r7.xy, r4.zwzz, v4.xyxx
                  sample_d_indexable(texture2d)(float,float,float,float) r7.x, r7.xyxx, t1.wxyz, s0, r2.zwzz, r4.xyxx  // currHeight<0:Inf>
                
                #line 143
                  lt r7.y, r6.x, r7.x
                  if_nz r7.y
                
                #line 147
                    mov r7.y, -r6.y
                    add r7.z, r6.z, r7.y
                    mov r7.w, -r7.x
                    add r7.w, r6.z, r7.w
                    add r7.w, r6.x, r7.w
                    add r7.y, r7.y, r7.w
                    div r7.y, r7.z, r7.y  // t<0:NaN:Inf>
                    mul r7.yz, r2.xxyx, r7.yyyy
                    add r5.zw, r5.xxxy, r7.yyyz  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r3.w, r6.w  // sampleIndex<0>
                
                #line 143
                  else 
                
                #line 156
                    iadd r3.w, r3.w, l(1)  // sampleIndex<0>
                    mov r5.xy, r4.zwzz  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r6.y, r6.x  // prevRayY<0:NaN:Inf>
                    mov r6.z, r7.x  // prevHeight<0:Inf>
                    add r4.zw, r2.xxxy, r4.zzzw  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                    mov r7.x, -r1.w
                    add r6.x, r6.x, r7.x  // currRayY<0:NaN:Inf>
                
                #line 143
                  endif 
                
                #line 138
                endloop 
                
                #line 170
                add r2.xy, r5.zwzz, v4.xyxx  // parallaxTex<0:NaN:Inf,1:NaN:Inf>
                
                #line 181
                sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r2.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 196
                sample_indexable(texture2d)(float,float,float,float) r2.xyz, r2.xyxx, t1.xyzw, s0
                mov r2.xyz, r2.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                nop 
                mov r2.xyz, r2.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                mov r5.xyz, v3.xyzx  // tangentW<0,1,2>
                
                #line 206 "LightHelper.fx"
                mul r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
                add r2.xyz, r2.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // normalT<0:Inf,1:Inf,2:Inf>
                
                #line 209
                mov r3.xyz, r3.xyzx  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r0.w, r5.zxyz, r3.xyzx
                mul r6.xyz, r3.yzxy, r0.wwww
                mov r6.xyz, -r6.xyzx
                add r5.xyz, r5.xyzx, r6.xyzx
                dp3 r0.w, r5.xyzx, r5.xyzx
                rsq r0.w, r0.w
                mul r5.xyz, r0.wwww, r5.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r6.xyz, r5.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r7.xyz, r3.zxyz, r6.yzxy
                mul r3.xyz, r3.xyzx, r6.xyzx
                mov r3.xyz, -r3.xyzx
                add r3.xyz, r3.xyzx, r7.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                mul r5.xyz, r2.xxxx, r5.xyzx
                mul r2.xyw, r2.yyyy, r3.xyxz
                add r2.xyw, r2.xyxw, r5.xyxz
                mul r0.xyz, r0.xyzx, r2.zzzz
                add r0.xyz, r0.xyzx, r2.xywx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // NormalSampleToWorldSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 197 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, r0.xyzx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r2.xyz, cb1[16].xyzx  // mat<0,1,2>
                mov r3.xyz, cb1[17].xyzx  // mat<4,5,6>
                mov r5.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r6.xyz, r2.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r9.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r9.xyz, -r9.xyzx
                dp3 r2.w, r9.xyzx, r0.xyzx
                add r2.w, r2.w, r2.w
                mov r2.w, -r2.w
                mul r10.xyz, r0.xyzx, r2.wwww
                add r9.xyz, r9.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r2.w, r9.xyzx, r1.xyzx
                max r2.w, r2.w, l(0.000000)
                log r2.w, r2.w
                mul r2.w, r2.w, r5.w
                exp r2.w, r2.w  // specFactor<0:NaN:Inf>
                mul r9.xyz, r3.xyzx, r0.wwww
                mul r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r9.xyz, r5.xyzx, r2.wwww
                mul r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                add r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r9.xyz, cb0[4].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[5].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[6].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[7].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r2.xyz, r2.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r9.xyz, -r12.xyzx
                dp3 r2.w, r9.xyzx, r0.xyzx
                add r2.w, r2.w, r2.w
                mov r2.w, -r2.w
                mul r0.xyz, r0.xyzx, r2.wwww
                add r0.xyz, r9.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r5.w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                mul r0.yzw, r3.xxyz, r0.wwww
                mul r0.yzw, r10.xxyz, r0.yyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyz, r5.xyzx, r0.xxxx
                mul r1.xyz, r11.xyzx, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r0.xyz, r1.wwww, r0.yzwy, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r1.xyz, r1.wwww, r1.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r2.xyz, r2.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r0.xyz, r0.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r2.xyz, r2.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r0.xyz, r0.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r1.xyz, r1.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 224
                add r0.xyz, r0.xyzx, r2.xyzx
                mul r0.xyz, r0.xyzx, r4.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 249
                mul r0.w, r4.w, cb1[17].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 181 instruction slots used
                            
            };
        }

    }

    technique11 Light3Tex
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //   float gHeightScale;                // Offset:  320 Size:     4 [unused]
                //   int gMinSampleCount;               // Offset:  324 Size:     4 [unused]
                //   int gMaxSampleCount;               // Offset:  328 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_temps 6
                
                #line 64 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                dp3 r3.x, v3.xyzx, cb0[0].xyzx  // vout<10:NaN:Inf>
                dp3 r3.y, v3.xyzx, cb0[1].xyzx  // vout<11:NaN:Inf>
                dp3 r3.z, v3.xyzx, cb0[2].xyzx  // vout<12:NaN:Inf>
                
                #line 69
                dp4 r4.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 72
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r5.x, r0.xyzw, cb0[12].xyzw  // vout<13:NaN:Inf>
                dp4 r5.y, r0.xyzw, cb0[13].xyzw  // vout<14:NaN:Inf>
                mov o0.xyzw, r4.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xyz, r3.xyzx  // VS<10:NaN:Inf,11:NaN:Inf,12:NaN:Inf>
                mov o4.xy, r5.xyxx  // VS<13:NaN:Inf,14:NaN:Inf>
                ret 
                // Approximately 25 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //   float gHeightScale;                // Offset:  320 Size:     4
                //   int gMinSampleCount;               // Offset:  324 Size:     4
                //   int gMaxSampleCount;               // Offset:  328 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gNormalMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[13], immediateIndexed
                dcl_constantbuffer cb1[21], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_output o0.xyzw
                dcl_temps 14
                
                #line 85 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 88
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 91
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 94
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                mov r2.xyz, -r1.xyzx  // viewDirW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 103
                mov r3.xyz, r0.zxyz  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r0.w, v3.zxyz, r3.xyzx
                mul r4.xyz, r3.yzxy, r0.wwww
                mov r4.xyz, -r4.xyzx
                add r4.xyz, r4.xyzx, v3.xyzx
                dp3 r0.w, r4.xyzx, r4.xyzx
                rsq r0.w, r0.w
                mul r4.xyz, r0.wwww, r4.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r4.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r6.xyz, r3.zxyz, r5.yzxy
                mul r5.xyz, r3.xyzx, r5.xyzx
                mov r5.xyz, -r5.xyzx
                add r5.xyz, r5.xyzx, r6.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 109
                dp3 r4.x, r2.xyzx, r4.xyzx  // viewDirTS<0:NaN:Inf>
                dp3 r4.y, r2.xyzx, r5.xyzx  // viewDirTS<1:NaN:Inf>
                dp3 r0.w, r2.xyzx, r0.xyzx  // viewDirTS<2:NaN:Inf>
                mov r2.xy, -r4.xyxx
                mul r2.xy, r2.xyxx, cb1[20].xxxx
                div r2.xy, r2.xyxx, r0.wwww  // maxParallaxOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 116
                itof r0.w, cb1[20].z
                itof r1.w, cb1[20].y
                dp3 r2.z, r1.xyzx, r0.xyzx
                mov r2.w, -r0.w
                add r1.w, r1.w, r2.w
                mul r1.w, r1.w, r2.z
                add r0.w, r0.w, r1.w
                ftoi r0.w, r0.w  // sampleCount<0>
                itof r1.w, r0.w
                div r1.w, l(1.000000), r1.w  // yStep<0:Inf>
                mul r2.xy, r1.wwww, r2.xyxx  // texStep<0:NaN:Inf,1:NaN:Inf>
                
                #line 125
                deriv_rtx_coarse r2.zw, v4.xxxy  // dx<0:Inf,1:Inf>
                deriv_rty_coarse r4.xy, v4.xyxx  // dy<0:Inf,1:Inf>
                
                #line 138
                mov r4.zw, l(0,0,0,0)  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r5.xy, l(0,0,0,0)  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r5.zw, l(0,0,0,0)  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r3.w, l(0)  // sampleIndex<0>
                mov r6.x, l(1.000000)  // currRayY<0:NaN:Inf>
                mov r6.y, l(1.000000)  // prevRayY<0:NaN:Inf>
                mov r6.z, l(0)  // prevHeight<0:Inf>
                loop 
                  iadd r6.w, r0.w, l(1)
                  ilt r7.x, r3.w, r6.w
                  breakc_z r7.x
                  add r7.xy, r4.zwzz, v4.xyxx
                  sample_d_indexable(texture2d)(float,float,float,float) r7.x, r7.xyxx, t1.wxyz, s0, r2.zwzz, r4.xyxx  // currHeight<0:Inf>
                
                #line 143
                  lt r7.y, r6.x, r7.x
                  if_nz r7.y
                
                #line 147
                    mov r7.y, -r6.y
                    add r7.z, r6.z, r7.y
                    mov r7.w, -r7.x
                    add r7.w, r6.z, r7.w
                    add r7.w, r6.x, r7.w
                    add r7.y, r7.y, r7.w
                    div r7.y, r7.z, r7.y  // t<0:NaN:Inf>
                    mul r7.yz, r2.xxyx, r7.yyyy
                    add r5.zw, r5.xxxy, r7.yyyz  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r3.w, r6.w  // sampleIndex<0>
                
                #line 143
                  else 
                
                #line 156
                    iadd r3.w, r3.w, l(1)  // sampleIndex<0>
                    mov r5.xy, r4.zwzz  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r6.y, r6.x  // prevRayY<0:NaN:Inf>
                    mov r6.z, r7.x  // prevHeight<0:Inf>
                    add r4.zw, r2.xxxy, r4.zzzw  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                    mov r7.x, -r1.w
                    add r6.x, r6.x, r7.x  // currRayY<0:NaN:Inf>
                
                #line 143
                  endif 
                
                #line 138
                endloop 
                
                #line 170
                add r2.xy, r5.zwzz, v4.xyxx  // parallaxTex<0:NaN:Inf,1:NaN:Inf>
                
                #line 181
                sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r2.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 196
                sample_indexable(texture2d)(float,float,float,float) r2.xyz, r2.xyxx, t1.xyzw, s0
                mov r2.xyz, r2.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                nop 
                mov r2.xyz, r2.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                mov r5.xyz, v3.xyzx  // tangentW<0,1,2>
                
                #line 206 "LightHelper.fx"
                mul r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
                add r2.xyz, r2.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // normalT<0:Inf,1:Inf,2:Inf>
                
                #line 209
                mov r3.xyz, r3.xyzx  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r0.w, r5.zxyz, r3.xyzx
                mul r6.xyz, r3.yzxy, r0.wwww
                mov r6.xyz, -r6.xyzx
                add r5.xyz, r5.xyzx, r6.xyzx
                dp3 r0.w, r5.xyzx, r5.xyzx
                rsq r0.w, r0.w
                mul r5.xyz, r0.wwww, r5.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r6.xyz, r5.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r7.xyz, r3.zxyz, r6.yzxy
                mul r3.xyz, r3.xyzx, r6.xyzx
                mov r3.xyz, -r3.xyzx
                add r3.xyz, r3.xyzx, r7.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                mul r5.xyz, r2.xxxx, r5.xyzx
                mul r2.xyw, r2.yyyy, r3.xyxz
                add r2.xyw, r2.xyxw, r5.xyxz
                mul r0.xyz, r0.xyzx, r2.zzzz
                add r0.xyz, r0.xyzx, r2.xywx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // NormalSampleToWorldSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 197 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, r0.xyzx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r2.xyz, cb1[16].xyzx  // mat<0,1,2>
                mov r3.xyz, cb1[17].xyzx  // mat<4,5,6>
                mov r5.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r6.xyz, r2.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r9.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r9.xyz, -r9.xyzx
                dp3 r2.w, r9.xyzx, r0.xyzx
                add r2.w, r2.w, r2.w
                mov r2.w, -r2.w
                mul r10.xyz, r0.xyzx, r2.wwww
                add r9.xyz, r9.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r2.w, r9.xyzx, r1.xyzx
                max r2.w, r2.w, l(0.000000)
                log r2.w, r2.w
                mul r2.w, r2.w, r5.w
                exp r2.w, r2.w  // specFactor<0:NaN:Inf>
                mul r9.xyz, r3.xyzx, r0.wwww
                mul r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r9.xyz, r5.xyzx, r2.wwww
                mul r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                add r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r9.xyz, cb0[4].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[5].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[6].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[7].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r9.xyz, r2.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r12.xyz, -r12.xyzx
                dp3 r2.w, r12.xyzx, r0.xyzx
                add r2.w, r2.w, r2.w
                mov r2.w, -r2.w
                mul r13.xyz, r0.xyzx, r2.wwww
                add r12.xyz, r12.xyzx, r13.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r2.w, r12.xyzx, r1.xyzx
                max r2.w, r2.w, l(0.000000)
                log r2.w, r2.w
                mul r2.w, r2.w, r5.w
                exp r2.w, r2.w  // specFactor<0:NaN:Inf>
                mul r12.xyz, r3.xyzx, r0.wwww
                mul r10.xyz, r10.xyzx, r12.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r12.xyz, r5.xyzx, r2.wwww
                mul r11.xyz, r11.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r10.xyz, r1.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r11.xyz, r1.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r7.xyz, r7.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r8.xyz, r8.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r9.xyz, cb0[8].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[9].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[10].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[11].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r2.xyz, r2.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r9.xyz, -r12.xyzx
                dp3 r2.w, r9.xyzx, r0.xyzx
                add r2.w, r2.w, r2.w
                mov r2.w, -r2.w
                mul r0.xyz, r0.xyzx, r2.wwww
                add r0.xyz, r9.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r5.w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                mul r0.yzw, r3.xxyz, r0.wwww
                mul r0.yzw, r10.xxyz, r0.yyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyz, r5.xyzx, r0.xxxx
                mul r1.xyz, r11.xyzx, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r0.xyz, r1.wwww, r0.yzwy, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r1.xyz, r1.wwww, r1.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r2.xyz, r2.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r0.xyz, r0.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r2.xyz, r2.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r0.xyz, r0.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r1.xyz, r1.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 224
                add r0.xyz, r0.xyzx, r2.xyzx
                mul r0.xyz, r0.xyzx, r4.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 249
                mul r0.w, r4.w, cb1[17].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 213 instruction slots used
                            
            };
        }

    }

    technique11 Light0TexAlphaClip
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //   float gHeightScale;                // Offset:  320 Size:     4 [unused]
                //   int gMinSampleCount;               // Offset:  324 Size:     4 [unused]
                //   int gMaxSampleCount;               // Offset:  328 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_temps 6
                
                #line 64 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                dp3 r3.x, v3.xyzx, cb0[0].xyzx  // vout<10:NaN:Inf>
                dp3 r3.y, v3.xyzx, cb0[1].xyzx  // vout<11:NaN:Inf>
                dp3 r3.z, v3.xyzx, cb0[2].xyzx  // vout<12:NaN:Inf>
                
                #line 69
                dp4 r4.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 72
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r5.x, r0.xyzw, cb0[12].xyzw  // vout<13:NaN:Inf>
                dp4 r5.y, r0.xyzw, cb0[13].xyzw  // vout<14:NaN:Inf>
                mov o0.xyzw, r4.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xyz, r3.xyzx  // VS<10:NaN:Inf,11:NaN:Inf,12:NaN:Inf>
                mov o4.xy, r5.xyxx  // VS<13:NaN:Inf,14:NaN:Inf>
                ret 
                // Approximately 25 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192 [unused]
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //   float gHeightScale;                // Offset:  320 Size:     4
                //   int gMinSampleCount;               // Offset:  324 Size:     4
                //   int gMaxSampleCount;               // Offset:  328 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gNormalMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[13], immediateIndexed
                dcl_constantbuffer cb1[21], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_output o0.xyzw
                dcl_temps 7
                
                #line 85 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 88
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 91
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 94
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                mov r2.xyz, -r1.xyzx  // viewDirW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 103
                mov r3.xyz, r0.zxyz  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r0.w, v3.zxyz, r3.xyzx
                mul r4.xyz, r3.yzxy, r0.wwww
                mov r4.xyz, -r4.xyzx
                add r4.xyz, r4.xyzx, v3.xyzx
                dp3 r0.w, r4.xyzx, r4.xyzx
                rsq r0.w, r0.w
                mul r4.xyz, r0.wwww, r4.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r4.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r6.xyz, r3.zxyz, r5.yzxy
                mul r3.xyz, r3.xyzx, r5.xyzx
                mov r3.xyz, -r3.xyzx
                add r3.xyz, r3.xyzx, r6.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 109
                dp3 r4.x, r2.xyzx, r4.xyzx  // viewDirTS<0:NaN:Inf>
                dp3 r4.y, r2.xyzx, r3.xyzx  // viewDirTS<1:NaN:Inf>
                dp3 r0.w, r2.xyzx, r0.xyzx  // viewDirTS<2:NaN:Inf>
                mov r2.xy, -r4.xyxx
                mul r2.xy, r2.xyxx, cb1[20].xxxx
                div r2.xy, r2.xyxx, r0.wwww  // maxParallaxOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 116
                itof r0.w, cb1[20].z
                itof r1.w, cb1[20].y
                dp3 r0.x, r1.xyzx, r0.xyzx
                mov r0.y, -r0.w
                add r0.y, r0.y, r1.w
                mul r0.x, r0.y, r0.x
                add r0.x, r0.x, r0.w
                ftoi r0.x, r0.x  // sampleCount<0>
                itof r0.y, r0.x
                div r0.y, l(1.000000), r0.y  // yStep<0:Inf>
                mul r0.zw, r0.yyyy, r2.xxxy  // texStep<0:NaN:Inf,1:NaN:Inf>
                
                #line 125
                deriv_rtx_coarse r1.xy, v4.xyxx  // dx<0:Inf,1:Inf>
                deriv_rty_coarse r1.zw, v4.xxxy  // dy<0:Inf,1:Inf>
                
                #line 138
                mov r2.xy, l(0,0,0,0)  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r2.zw, l(0,0,0,0)  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r3.xy, l(0,0,0,0)  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r3.z, l(0)  // sampleIndex<0>
                mov r3.w, l(1.000000)  // currRayY<0:NaN:Inf>
                mov r4.x, l(1.000000)  // prevRayY<0:NaN:Inf>
                mov r4.y, l(0)  // prevHeight<0:Inf>
                loop 
                  iadd r4.z, r0.x, l(1)
                  ilt r4.w, r3.z, r4.z
                  breakc_z r4.w
                  add r5.xy, r2.xyxx, v4.xyxx
                  sample_d_indexable(texture2d)(float,float,float,float) r4.w, r5.xyxx, t1.xyzw, s0, r1.xyxx, r1.zwzz  // currHeight<0:Inf>
                
                #line 143
                  lt r5.x, r3.w, r4.w
                  if_nz r5.x
                
                #line 147
                    mov r5.x, -r4.x
                    add r5.y, r4.y, r5.x
                    mov r5.z, -r4.w
                    add r5.z, r4.y, r5.z
                    add r5.z, r3.w, r5.z
                    add r5.x, r5.x, r5.z
                    div r5.x, r5.y, r5.x  // t<0:NaN:Inf>
                    mul r5.xy, r0.zwzz, r5.xxxx
                    add r3.xy, r2.zwzz, r5.xyxx  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r3.z, r4.z  // sampleIndex<0>
                
                #line 143
                  else 
                
                #line 156
                    iadd r3.z, r3.z, l(1)  // sampleIndex<0>
                    mov r2.zw, r2.xxxy  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r4.x, r3.w  // prevRayY<0:NaN:Inf>
                    mov r4.y, r4.w  // prevHeight<0:Inf>
                    add r2.xy, r0.zwzz, r2.xyxx  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                    mov r4.w, -r0.y
                    add r3.w, r3.w, r4.w  // currRayY<0:NaN:Inf>
                
                #line 143
                  endif 
                
                #line 138
                endloop 
                
                #line 170
                add r0.xy, r3.xyxx, v4.xyxx  // parallaxTex<0:NaN:Inf,1:NaN:Inf>
                
                #line 181
                sample_indexable(texture2d)(float,float,float,float) r0.xyzw, r0.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 188
                add r1.x, r0.w, l(-0.100000)
                lt r1.x, r1.x, l(0.000000)
                and r1.x, r1.x, l(-1)
                discard r1.x
                
                #line 197
                nop 
                
                #line 203
                mov r0.xyz, r0.xyzx  // litColor<0:Inf,1:Inf,2:Inf>
                
                #line 249
                mul r0.w, r0.w, cb1[17].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:Inf,1:Inf,2:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 88 instruction slots used
                            
            };
        }

    }

    technique11 Light1TexAlphaClip
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //   float gHeightScale;                // Offset:  320 Size:     4 [unused]
                //   int gMinSampleCount;               // Offset:  324 Size:     4 [unused]
                //   int gMaxSampleCount;               // Offset:  328 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_temps 6
                
                #line 64 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                dp3 r3.x, v3.xyzx, cb0[0].xyzx  // vout<10:NaN:Inf>
                dp3 r3.y, v3.xyzx, cb0[1].xyzx  // vout<11:NaN:Inf>
                dp3 r3.z, v3.xyzx, cb0[2].xyzx  // vout<12:NaN:Inf>
                
                #line 69
                dp4 r4.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 72
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r5.x, r0.xyzw, cb0[12].xyzw  // vout<13:NaN:Inf>
                dp4 r5.y, r0.xyzw, cb0[13].xyzw  // vout<14:NaN:Inf>
                mov o0.xyzw, r4.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xyz, r3.xyzx  // VS<10:NaN:Inf,11:NaN:Inf,12:NaN:Inf>
                mov o4.xy, r5.xyxx  // VS<13:NaN:Inf,14:NaN:Inf>
                ret 
                // Approximately 25 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //   float gHeightScale;                // Offset:  320 Size:     4
                //   int gMinSampleCount;               // Offset:  324 Size:     4
                //   int gMaxSampleCount;               // Offset:  328 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gNormalMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[13], immediateIndexed
                dcl_constantbuffer cb1[21], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_output o0.xyzw
                dcl_temps 10
                
                #line 85 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 88
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 91
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 94
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                mov r2.xyz, -r1.xyzx  // viewDirW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 103
                mov r3.xyz, r0.zxyz  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r0.w, v3.zxyz, r3.xyzx
                mul r4.xyz, r3.yzxy, r0.wwww
                mov r4.xyz, -r4.xyzx
                add r4.xyz, r4.xyzx, v3.xyzx
                dp3 r0.w, r4.xyzx, r4.xyzx
                rsq r0.w, r0.w
                mul r4.xyz, r0.wwww, r4.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r4.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r6.xyz, r3.zxyz, r5.yzxy
                mul r5.xyz, r3.xyzx, r5.xyzx
                mov r5.xyz, -r5.xyzx
                add r5.xyz, r5.xyzx, r6.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 109
                dp3 r4.x, r2.xyzx, r4.xyzx  // viewDirTS<0:NaN:Inf>
                dp3 r4.y, r2.xyzx, r5.xyzx  // viewDirTS<1:NaN:Inf>
                dp3 r0.w, r2.xyzx, r0.xyzx  // viewDirTS<2:NaN:Inf>
                mov r2.xy, -r4.xyxx
                mul r2.xy, r2.xyxx, cb1[20].xxxx
                div r2.xy, r2.xyxx, r0.wwww  // maxParallaxOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 116
                itof r0.w, cb1[20].z
                itof r1.w, cb1[20].y
                dp3 r2.z, r1.xyzx, r0.xyzx
                mov r2.w, -r0.w
                add r1.w, r1.w, r2.w
                mul r1.w, r1.w, r2.z
                add r0.w, r0.w, r1.w
                ftoi r0.w, r0.w  // sampleCount<0>
                itof r1.w, r0.w
                div r1.w, l(1.000000), r1.w  // yStep<0:Inf>
                mul r2.xy, r1.wwww, r2.xyxx  // texStep<0:NaN:Inf,1:NaN:Inf>
                
                #line 125
                deriv_rtx_coarse r2.zw, v4.xxxy  // dx<0:Inf,1:Inf>
                deriv_rty_coarse r4.xy, v4.xyxx  // dy<0:Inf,1:Inf>
                
                #line 138
                mov r4.zw, l(0,0,0,0)  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r5.xy, l(0,0,0,0)  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r5.zw, l(0,0,0,0)  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r3.w, l(0)  // sampleIndex<0>
                mov r6.x, l(1.000000)  // currRayY<0:NaN:Inf>
                mov r6.y, l(1.000000)  // prevRayY<0:NaN:Inf>
                mov r6.z, l(0)  // prevHeight<0:Inf>
                loop 
                  iadd r6.w, r0.w, l(1)
                  ilt r7.x, r3.w, r6.w
                  breakc_z r7.x
                  add r7.xy, r4.zwzz, v4.xyxx
                  sample_d_indexable(texture2d)(float,float,float,float) r7.x, r7.xyxx, t1.wxyz, s0, r2.zwzz, r4.xyxx  // currHeight<0:Inf>
                
                #line 143
                  lt r7.y, r6.x, r7.x
                  if_nz r7.y
                
                #line 147
                    mov r7.y, -r6.y
                    add r7.z, r6.z, r7.y
                    mov r7.w, -r7.x
                    add r7.w, r6.z, r7.w
                    add r7.w, r6.x, r7.w
                    add r7.y, r7.y, r7.w
                    div r7.y, r7.z, r7.y  // t<0:NaN:Inf>
                    mul r7.yz, r2.xxyx, r7.yyyy
                    add r5.zw, r5.xxxy, r7.yyyz  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r3.w, r6.w  // sampleIndex<0>
                
                #line 143
                  else 
                
                #line 156
                    iadd r3.w, r3.w, l(1)  // sampleIndex<0>
                    mov r5.xy, r4.zwzz  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r6.y, r6.x  // prevRayY<0:NaN:Inf>
                    mov r6.z, r7.x  // prevHeight<0:Inf>
                    add r4.zw, r2.xxxy, r4.zzzw  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                    mov r7.x, -r1.w
                    add r6.x, r6.x, r7.x  // currRayY<0:NaN:Inf>
                
                #line 143
                  endif 
                
                #line 138
                endloop 
                
                #line 170
                add r2.xy, r5.zwzz, v4.xyxx  // parallaxTex<0:NaN:Inf,1:NaN:Inf>
                
                #line 181
                sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r2.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 188
                add r0.w, r4.w, l(-0.100000)
                lt r0.w, r0.w, l(0.000000)
                and r0.w, r0.w, l(-1)
                discard r0.w
                
                #line 196
                sample_indexable(texture2d)(float,float,float,float) r2.xyz, r2.xyxx, t1.xyzw, s0
                mov r2.xyz, r2.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                nop 
                mov r2.xyz, r2.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                mov r5.xyz, v3.xyzx  // tangentW<0,1,2>
                
                #line 206 "LightHelper.fx"
                mul r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
                add r2.xyz, r2.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // normalT<0:Inf,1:Inf,2:Inf>
                
                #line 209
                mov r3.xyz, r3.xyzx  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r0.w, r5.zxyz, r3.xyzx
                mul r6.xyz, r3.yzxy, r0.wwww
                mov r6.xyz, -r6.xyzx
                add r5.xyz, r5.xyzx, r6.xyzx
                dp3 r0.w, r5.xyzx, r5.xyzx
                rsq r0.w, r0.w
                mul r5.xyz, r0.wwww, r5.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r6.xyz, r5.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r7.xyz, r3.zxyz, r6.yzxy
                mul r3.xyz, r3.xyzx, r6.xyzx
                mov r3.xyz, -r3.xyzx
                add r3.xyz, r3.xyzx, r7.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                mul r5.xyz, r2.xxxx, r5.xyzx
                mul r2.xyw, r2.yyyy, r3.xyxz
                add r2.xyw, r2.xyxw, r5.xyxz
                mul r0.xyz, r0.xyzx, r2.zzzz
                add r0.xyz, r0.xyzx, r2.xywx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // NormalSampleToWorldSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 197 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, r0.xyzx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r2.xyz, cb1[16].xyzx  // mat<0,1,2>
                mov r3.xyz, cb1[17].xyzx  // mat<4,5,6>
                mov r5.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r2.xyz, r2.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r9.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r6.xyz, -r9.xyzx
                dp3 r2.w, r6.xyzx, r0.xyzx
                add r2.w, r2.w, r2.w
                mov r2.w, -r2.w
                mul r0.xyz, r0.xyzx, r2.wwww
                add r0.xyz, r6.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r5.w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                mul r0.yzw, r3.xxyz, r0.wwww
                mul r0.yzw, r7.xxyz, r0.yyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyz, r5.xyzx, r0.xxxx
                mul r1.xyz, r8.xyzx, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r0.xyz, r1.wwww, r0.yzwy, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r1.xyz, r1.wwww, r1.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r2.xyz, r2.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r0.xyz, r0.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                add r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 224
                add r0.xyz, r0.xyzx, r2.xyzx
                mul r0.xyz, r0.xyzx, r4.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 249
                mul r0.w, r4.w, cb1[17].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 153 instruction slots used
                            
            };
        }

    }

    technique11 Light2TexAlphaClip
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //   float gHeightScale;                // Offset:  320 Size:     4 [unused]
                //   int gMinSampleCount;               // Offset:  324 Size:     4 [unused]
                //   int gMaxSampleCount;               // Offset:  328 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_temps 6
                
                #line 64 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                dp3 r3.x, v3.xyzx, cb0[0].xyzx  // vout<10:NaN:Inf>
                dp3 r3.y, v3.xyzx, cb0[1].xyzx  // vout<11:NaN:Inf>
                dp3 r3.z, v3.xyzx, cb0[2].xyzx  // vout<12:NaN:Inf>
                
                #line 69
                dp4 r4.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 72
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r5.x, r0.xyzw, cb0[12].xyzw  // vout<13:NaN:Inf>
                dp4 r5.y, r0.xyzw, cb0[13].xyzw  // vout<14:NaN:Inf>
                mov o0.xyzw, r4.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xyz, r3.xyzx  // VS<10:NaN:Inf,11:NaN:Inf,12:NaN:Inf>
                mov o4.xy, r5.xyxx  // VS<13:NaN:Inf,14:NaN:Inf>
                ret 
                // Approximately 25 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //   float gHeightScale;                // Offset:  320 Size:     4
                //   int gMinSampleCount;               // Offset:  324 Size:     4
                //   int gMaxSampleCount;               // Offset:  328 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gNormalMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[13], immediateIndexed
                dcl_constantbuffer cb1[21], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_output o0.xyzw
                dcl_temps 13
                
                #line 85 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 88
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 91
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 94
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                mov r2.xyz, -r1.xyzx  // viewDirW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 103
                mov r3.xyz, r0.zxyz  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r0.w, v3.zxyz, r3.xyzx
                mul r4.xyz, r3.yzxy, r0.wwww
                mov r4.xyz, -r4.xyzx
                add r4.xyz, r4.xyzx, v3.xyzx
                dp3 r0.w, r4.xyzx, r4.xyzx
                rsq r0.w, r0.w
                mul r4.xyz, r0.wwww, r4.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r4.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r6.xyz, r3.zxyz, r5.yzxy
                mul r5.xyz, r3.xyzx, r5.xyzx
                mov r5.xyz, -r5.xyzx
                add r5.xyz, r5.xyzx, r6.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 109
                dp3 r4.x, r2.xyzx, r4.xyzx  // viewDirTS<0:NaN:Inf>
                dp3 r4.y, r2.xyzx, r5.xyzx  // viewDirTS<1:NaN:Inf>
                dp3 r0.w, r2.xyzx, r0.xyzx  // viewDirTS<2:NaN:Inf>
                mov r2.xy, -r4.xyxx
                mul r2.xy, r2.xyxx, cb1[20].xxxx
                div r2.xy, r2.xyxx, r0.wwww  // maxParallaxOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 116
                itof r0.w, cb1[20].z
                itof r1.w, cb1[20].y
                dp3 r2.z, r1.xyzx, r0.xyzx
                mov r2.w, -r0.w
                add r1.w, r1.w, r2.w
                mul r1.w, r1.w, r2.z
                add r0.w, r0.w, r1.w
                ftoi r0.w, r0.w  // sampleCount<0>
                itof r1.w, r0.w
                div r1.w, l(1.000000), r1.w  // yStep<0:Inf>
                mul r2.xy, r1.wwww, r2.xyxx  // texStep<0:NaN:Inf,1:NaN:Inf>
                
                #line 125
                deriv_rtx_coarse r2.zw, v4.xxxy  // dx<0:Inf,1:Inf>
                deriv_rty_coarse r4.xy, v4.xyxx  // dy<0:Inf,1:Inf>
                
                #line 138
                mov r4.zw, l(0,0,0,0)  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r5.xy, l(0,0,0,0)  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r5.zw, l(0,0,0,0)  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r3.w, l(0)  // sampleIndex<0>
                mov r6.x, l(1.000000)  // currRayY<0:NaN:Inf>
                mov r6.y, l(1.000000)  // prevRayY<0:NaN:Inf>
                mov r6.z, l(0)  // prevHeight<0:Inf>
                loop 
                  iadd r6.w, r0.w, l(1)
                  ilt r7.x, r3.w, r6.w
                  breakc_z r7.x
                  add r7.xy, r4.zwzz, v4.xyxx
                  sample_d_indexable(texture2d)(float,float,float,float) r7.x, r7.xyxx, t1.wxyz, s0, r2.zwzz, r4.xyxx  // currHeight<0:Inf>
                
                #line 143
                  lt r7.y, r6.x, r7.x
                  if_nz r7.y
                
                #line 147
                    mov r7.y, -r6.y
                    add r7.z, r6.z, r7.y
                    mov r7.w, -r7.x
                    add r7.w, r6.z, r7.w
                    add r7.w, r6.x, r7.w
                    add r7.y, r7.y, r7.w
                    div r7.y, r7.z, r7.y  // t<0:NaN:Inf>
                    mul r7.yz, r2.xxyx, r7.yyyy
                    add r5.zw, r5.xxxy, r7.yyyz  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r3.w, r6.w  // sampleIndex<0>
                
                #line 143
                  else 
                
                #line 156
                    iadd r3.w, r3.w, l(1)  // sampleIndex<0>
                    mov r5.xy, r4.zwzz  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r6.y, r6.x  // prevRayY<0:NaN:Inf>
                    mov r6.z, r7.x  // prevHeight<0:Inf>
                    add r4.zw, r2.xxxy, r4.zzzw  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                    mov r7.x, -r1.w
                    add r6.x, r6.x, r7.x  // currRayY<0:NaN:Inf>
                
                #line 143
                  endif 
                
                #line 138
                endloop 
                
                #line 170
                add r2.xy, r5.zwzz, v4.xyxx  // parallaxTex<0:NaN:Inf,1:NaN:Inf>
                
                #line 181
                sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r2.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 188
                add r0.w, r4.w, l(-0.100000)
                lt r0.w, r0.w, l(0.000000)
                and r0.w, r0.w, l(-1)
                discard r0.w
                
                #line 196
                sample_indexable(texture2d)(float,float,float,float) r2.xyz, r2.xyxx, t1.xyzw, s0
                mov r2.xyz, r2.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                nop 
                mov r2.xyz, r2.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                mov r5.xyz, v3.xyzx  // tangentW<0,1,2>
                
                #line 206 "LightHelper.fx"
                mul r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
                add r2.xyz, r2.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // normalT<0:Inf,1:Inf,2:Inf>
                
                #line 209
                mov r3.xyz, r3.xyzx  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r0.w, r5.zxyz, r3.xyzx
                mul r6.xyz, r3.yzxy, r0.wwww
                mov r6.xyz, -r6.xyzx
                add r5.xyz, r5.xyzx, r6.xyzx
                dp3 r0.w, r5.xyzx, r5.xyzx
                rsq r0.w, r0.w
                mul r5.xyz, r0.wwww, r5.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r6.xyz, r5.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r7.xyz, r3.zxyz, r6.yzxy
                mul r3.xyz, r3.xyzx, r6.xyzx
                mov r3.xyz, -r3.xyzx
                add r3.xyz, r3.xyzx, r7.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                mul r5.xyz, r2.xxxx, r5.xyzx
                mul r2.xyw, r2.yyyy, r3.xyxz
                add r2.xyw, r2.xyxw, r5.xyxz
                mul r0.xyz, r0.xyzx, r2.zzzz
                add r0.xyz, r0.xyzx, r2.xywx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // NormalSampleToWorldSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 197 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, r0.xyzx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r2.xyz, cb1[16].xyzx  // mat<0,1,2>
                mov r3.xyz, cb1[17].xyzx  // mat<4,5,6>
                mov r5.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r6.xyz, r2.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r9.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r9.xyz, -r9.xyzx
                dp3 r2.w, r9.xyzx, r0.xyzx
                add r2.w, r2.w, r2.w
                mov r2.w, -r2.w
                mul r10.xyz, r0.xyzx, r2.wwww
                add r9.xyz, r9.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r2.w, r9.xyzx, r1.xyzx
                max r2.w, r2.w, l(0.000000)
                log r2.w, r2.w
                mul r2.w, r2.w, r5.w
                exp r2.w, r2.w  // specFactor<0:NaN:Inf>
                mul r9.xyz, r3.xyzx, r0.wwww
                mul r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r9.xyz, r5.xyzx, r2.wwww
                mul r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                add r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r9.xyz, cb0[4].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[5].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[6].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[7].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r2.xyz, r2.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r9.xyz, -r12.xyzx
                dp3 r2.w, r9.xyzx, r0.xyzx
                add r2.w, r2.w, r2.w
                mov r2.w, -r2.w
                mul r0.xyz, r0.xyzx, r2.wwww
                add r0.xyz, r9.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r5.w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                mul r0.yzw, r3.xxyz, r0.wwww
                mul r0.yzw, r10.xxyz, r0.yyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyz, r5.xyzx, r0.xxxx
                mul r1.xyz, r11.xyzx, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r0.xyz, r1.wwww, r0.yzwy, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r1.xyz, r1.wwww, r1.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r2.xyz, r2.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r0.xyz, r0.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r2.xyz, r2.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r0.xyz, r0.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r1.xyz, r1.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 224
                add r0.xyz, r0.xyzx, r2.xyzx
                mul r0.xyz, r0.xyzx, r4.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 249
                mul r0.w, r4.w, cb1[17].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 185 instruction slots used
                            
            };
        }

    }

    technique11 Light3TexAlphaClip
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //   float gHeightScale;                // Offset:  320 Size:     4 [unused]
                //   int gMinSampleCount;               // Offset:  324 Size:     4 [unused]
                //   int gMaxSampleCount;               // Offset:  328 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_temps 6
                
                #line 64 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                dp3 r3.x, v3.xyzx, cb0[0].xyzx  // vout<10:NaN:Inf>
                dp3 r3.y, v3.xyzx, cb0[1].xyzx  // vout<11:NaN:Inf>
                dp3 r3.z, v3.xyzx, cb0[2].xyzx  // vout<12:NaN:Inf>
                
                #line 69
                dp4 r4.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 72
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r5.x, r0.xyzw, cb0[12].xyzw  // vout<13:NaN:Inf>
                dp4 r5.y, r0.xyzw, cb0[13].xyzw  // vout<14:NaN:Inf>
                mov o0.xyzw, r4.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xyz, r3.xyzx  // VS<10:NaN:Inf,11:NaN:Inf,12:NaN:Inf>
                mov o4.xy, r5.xyxx  // VS<13:NaN:Inf,14:NaN:Inf>
                ret 
                // Approximately 25 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //   float gHeightScale;                // Offset:  320 Size:     4
                //   int gMinSampleCount;               // Offset:  324 Size:     4
                //   int gMaxSampleCount;               // Offset:  328 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gNormalMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[13], immediateIndexed
                dcl_constantbuffer cb1[21], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_output o0.xyzw
                dcl_temps 14
                
                #line 85 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 88
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 91
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 94
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                mov r2.xyz, -r1.xyzx  // viewDirW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 103
                mov r3.xyz, r0.zxyz  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r0.w, v3.zxyz, r3.xyzx
                mul r4.xyz, r3.yzxy, r0.wwww
                mov r4.xyz, -r4.xyzx
                add r4.xyz, r4.xyzx, v3.xyzx
                dp3 r0.w, r4.xyzx, r4.xyzx
                rsq r0.w, r0.w
                mul r4.xyz, r0.wwww, r4.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r4.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r6.xyz, r3.zxyz, r5.yzxy
                mul r5.xyz, r3.xyzx, r5.xyzx
                mov r5.xyz, -r5.xyzx
                add r5.xyz, r5.xyzx, r6.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 109
                dp3 r4.x, r2.xyzx, r4.xyzx  // viewDirTS<0:NaN:Inf>
                dp3 r4.y, r2.xyzx, r5.xyzx  // viewDirTS<1:NaN:Inf>
                dp3 r0.w, r2.xyzx, r0.xyzx  // viewDirTS<2:NaN:Inf>
                mov r2.xy, -r4.xyxx
                mul r2.xy, r2.xyxx, cb1[20].xxxx
                div r2.xy, r2.xyxx, r0.wwww  // maxParallaxOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 116
                itof r0.w, cb1[20].z
                itof r1.w, cb1[20].y
                dp3 r2.z, r1.xyzx, r0.xyzx
                mov r2.w, -r0.w
                add r1.w, r1.w, r2.w
                mul r1.w, r1.w, r2.z
                add r0.w, r0.w, r1.w
                ftoi r0.w, r0.w  // sampleCount<0>
                itof r1.w, r0.w
                div r1.w, l(1.000000), r1.w  // yStep<0:Inf>
                mul r2.xy, r1.wwww, r2.xyxx  // texStep<0:NaN:Inf,1:NaN:Inf>
                
                #line 125
                deriv_rtx_coarse r2.zw, v4.xxxy  // dx<0:Inf,1:Inf>
                deriv_rty_coarse r4.xy, v4.xyxx  // dy<0:Inf,1:Inf>
                
                #line 138
                mov r4.zw, l(0,0,0,0)  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r5.xy, l(0,0,0,0)  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r5.zw, l(0,0,0,0)  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r3.w, l(0)  // sampleIndex<0>
                mov r6.x, l(1.000000)  // currRayY<0:NaN:Inf>
                mov r6.y, l(1.000000)  // prevRayY<0:NaN:Inf>
                mov r6.z, l(0)  // prevHeight<0:Inf>
                loop 
                  iadd r6.w, r0.w, l(1)
                  ilt r7.x, r3.w, r6.w
                  breakc_z r7.x
                  add r7.xy, r4.zwzz, v4.xyxx
                  sample_d_indexable(texture2d)(float,float,float,float) r7.x, r7.xyxx, t1.wxyz, s0, r2.zwzz, r4.xyxx  // currHeight<0:Inf>
                
                #line 143
                  lt r7.y, r6.x, r7.x
                  if_nz r7.y
                
                #line 147
                    mov r7.y, -r6.y
                    add r7.z, r6.z, r7.y
                    mov r7.w, -r7.x
                    add r7.w, r6.z, r7.w
                    add r7.w, r6.x, r7.w
                    add r7.y, r7.y, r7.w
                    div r7.y, r7.z, r7.y  // t<0:NaN:Inf>
                    mul r7.yz, r2.xxyx, r7.yyyy
                    add r5.zw, r5.xxxy, r7.yyyz  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r3.w, r6.w  // sampleIndex<0>
                
                #line 143
                  else 
                
                #line 156
                    iadd r3.w, r3.w, l(1)  // sampleIndex<0>
                    mov r5.xy, r4.zwzz  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r6.y, r6.x  // prevRayY<0:NaN:Inf>
                    mov r6.z, r7.x  // prevHeight<0:Inf>
                    add r4.zw, r2.xxxy, r4.zzzw  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                    mov r7.x, -r1.w
                    add r6.x, r6.x, r7.x  // currRayY<0:NaN:Inf>
                
                #line 143
                  endif 
                
                #line 138
                endloop 
                
                #line 170
                add r2.xy, r5.zwzz, v4.xyxx  // parallaxTex<0:NaN:Inf,1:NaN:Inf>
                
                #line 181
                sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r2.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 188
                add r0.w, r4.w, l(-0.100000)
                lt r0.w, r0.w, l(0.000000)
                and r0.w, r0.w, l(-1)
                discard r0.w
                
                #line 196
                sample_indexable(texture2d)(float,float,float,float) r2.xyz, r2.xyxx, t1.xyzw, s0
                mov r2.xyz, r2.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                nop 
                mov r2.xyz, r2.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                mov r5.xyz, v3.xyzx  // tangentW<0,1,2>
                
                #line 206 "LightHelper.fx"
                mul r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
                add r2.xyz, r2.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // normalT<0:Inf,1:Inf,2:Inf>
                
                #line 209
                mov r3.xyz, r3.xyzx  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r0.w, r5.zxyz, r3.xyzx
                mul r6.xyz, r3.yzxy, r0.wwww
                mov r6.xyz, -r6.xyzx
                add r5.xyz, r5.xyzx, r6.xyzx
                dp3 r0.w, r5.xyzx, r5.xyzx
                rsq r0.w, r0.w
                mul r5.xyz, r0.wwww, r5.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r6.xyz, r5.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r7.xyz, r3.zxyz, r6.yzxy
                mul r3.xyz, r3.xyzx, r6.xyzx
                mov r3.xyz, -r3.xyzx
                add r3.xyz, r3.xyzx, r7.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                mul r5.xyz, r2.xxxx, r5.xyzx
                mul r2.xyw, r2.yyyy, r3.xyxz
                add r2.xyw, r2.xyxw, r5.xyxz
                mul r0.xyz, r0.xyzx, r2.zzzz
                add r0.xyz, r0.xyzx, r2.xywx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // NormalSampleToWorldSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 197 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, r0.xyzx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r2.xyz, cb1[16].xyzx  // mat<0,1,2>
                mov r3.xyz, cb1[17].xyzx  // mat<4,5,6>
                mov r5.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r6.xyz, r2.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r9.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r9.xyz, -r9.xyzx
                dp3 r2.w, r9.xyzx, r0.xyzx
                add r2.w, r2.w, r2.w
                mov r2.w, -r2.w
                mul r10.xyz, r0.xyzx, r2.wwww
                add r9.xyz, r9.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r2.w, r9.xyzx, r1.xyzx
                max r2.w, r2.w, l(0.000000)
                log r2.w, r2.w
                mul r2.w, r2.w, r5.w
                exp r2.w, r2.w  // specFactor<0:NaN:Inf>
                mul r9.xyz, r3.xyzx, r0.wwww
                mul r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r9.xyz, r5.xyzx, r2.wwww
                mul r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                add r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r9.xyz, cb0[4].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[5].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[6].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[7].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r9.xyz, r2.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r12.xyz, -r12.xyzx
                dp3 r2.w, r12.xyzx, r0.xyzx
                add r2.w, r2.w, r2.w
                mov r2.w, -r2.w
                mul r13.xyz, r0.xyzx, r2.wwww
                add r12.xyz, r12.xyzx, r13.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r2.w, r12.xyzx, r1.xyzx
                max r2.w, r2.w, l(0.000000)
                log r2.w, r2.w
                mul r2.w, r2.w, r5.w
                exp r2.w, r2.w  // specFactor<0:NaN:Inf>
                mul r12.xyz, r3.xyzx, r0.wwww
                mul r10.xyz, r10.xyzx, r12.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r12.xyz, r5.xyzx, r2.wwww
                mul r11.xyz, r11.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r10.xyz, r1.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r11.xyz, r1.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r7.xyz, r7.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r8.xyz, r8.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r9.xyz, cb0[8].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[9].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[10].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[11].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r2.xyz, r2.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r9.xyz, -r12.xyzx
                dp3 r2.w, r9.xyzx, r0.xyzx
                add r2.w, r2.w, r2.w
                mov r2.w, -r2.w
                mul r0.xyz, r0.xyzx, r2.wwww
                add r0.xyz, r9.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r5.w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                mul r0.yzw, r3.xxyz, r0.wwww
                mul r0.yzw, r10.xxyz, r0.yyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyz, r5.xyzx, r0.xxxx
                mul r1.xyz, r11.xyzx, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r0.xyz, r1.wwww, r0.yzwy, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r1.xyz, r1.wwww, r1.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r2.xyz, r2.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r0.xyz, r0.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r2.xyz, r2.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r0.xyz, r0.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r1.xyz, r1.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 224
                add r0.xyz, r0.xyzx, r2.xyzx
                mul r0.xyz, r0.xyzx, r4.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 249
                mul r0.w, r4.w, cb1[17].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 217 instruction slots used
                            
            };
        }

    }

    technique11 Light1Fog
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //   float gHeightScale;                // Offset:  320 Size:     4 [unused]
                //   int gMinSampleCount;               // Offset:  324 Size:     4 [unused]
                //   int gMaxSampleCount;               // Offset:  328 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_temps 6
                
                #line 64 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                dp3 r3.x, v3.xyzx, cb0[0].xyzx  // vout<10:NaN:Inf>
                dp3 r3.y, v3.xyzx, cb0[1].xyzx  // vout<11:NaN:Inf>
                dp3 r3.z, v3.xyzx, cb0[2].xyzx  // vout<12:NaN:Inf>
                
                #line 69
                dp4 r4.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 72
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r5.x, r0.xyzw, cb0[12].xyzw  // vout<13:NaN:Inf>
                dp4 r5.y, r0.xyzw, cb0[13].xyzw  // vout<14:NaN:Inf>
                mov o0.xyzw, r4.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xyz, r3.xyzx  // VS<10:NaN:Inf,11:NaN:Inf,12:NaN:Inf>
                mov o4.xy, r5.xyxx  // VS<13:NaN:Inf,14:NaN:Inf>
                ret 
                // Approximately 25 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4
                //   float gFogRange;                   // Offset:  208 Size:     4
                //   float4 gFogColor;                  // Offset:  224 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //   float gHeightScale;                // Offset:  320 Size:     4
                //   int gMinSampleCount;               // Offset:  324 Size:     4
                //   int gMaxSampleCount;               // Offset:  328 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gNormalMap                        texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[15], immediateIndexed
                dcl_constantbuffer cb1[21], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_output o0.xyzw
                dcl_temps 9
                
                #line 85 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 88
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 91
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 94
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                mov r2.xyz, -r1.xyzx  // viewDirW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 103
                mov r3.xyz, r0.zxyz  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r1.w, v3.zxyz, r3.xyzx
                mul r4.xyz, r3.yzxy, r1.wwww
                mov r4.xyz, -r4.xyzx
                add r4.xyz, r4.xyzx, v3.xyzx
                dp3 r1.w, r4.xyzx, r4.xyzx
                rsq r1.w, r1.w
                mul r4.xyz, r1.wwww, r4.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r4.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r6.xyz, r3.zxyz, r5.yzxy
                mul r5.xyz, r3.xyzx, r5.xyzx
                mov r5.xyz, -r5.xyzx
                add r5.xyz, r5.xyzx, r6.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 109
                dp3 r4.x, r2.xyzx, r4.xyzx  // viewDirTS<0:NaN:Inf>
                dp3 r4.y, r2.xyzx, r5.xyzx  // viewDirTS<1:NaN:Inf>
                dp3 r1.w, r2.xyzx, r0.xyzx  // viewDirTS<2:NaN:Inf>
                mov r2.xy, -r4.xyxx
                mul r2.xy, r2.xyxx, cb1[20].xxxx
                div r2.xy, r2.xyxx, r1.wwww  // maxParallaxOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 116
                itof r1.w, cb1[20].z
                itof r2.z, cb1[20].y
                dp3 r2.w, r1.xyzx, r0.xyzx
                mov r3.w, -r1.w
                add r2.z, r2.z, r3.w
                mul r2.z, r2.z, r2.w
                add r1.w, r1.w, r2.z
                ftoi r1.w, r1.w  // sampleCount<0>
                itof r2.z, r1.w
                div r2.z, l(1.000000), r2.z  // yStep<0:Inf>
                mul r2.xy, r2.zzzz, r2.xyxx  // texStep<0:NaN:Inf,1:NaN:Inf>
                
                #line 125
                deriv_rtx_coarse r4.xy, v4.xyxx  // dx<0:Inf,1:Inf>
                deriv_rty_coarse r4.zw, v4.xxxy  // dy<0:Inf,1:Inf>
                
                #line 138
                mov r5.xy, l(0,0,0,0)  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r5.zw, l(0,0,0,0)  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r6.xy, l(0,0,0,0)  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r2.w, l(0)  // sampleIndex<0>
                mov r3.w, l(1.000000)  // currRayY<0:NaN:Inf>
                mov r6.z, l(1.000000)  // prevRayY<0:NaN:Inf>
                mov r6.w, l(0)  // prevHeight<0:Inf>
                loop 
                  iadd r7.x, r1.w, l(1)
                  ilt r7.y, r2.w, r7.x
                  breakc_z r7.y
                  add r7.yz, r5.xxyx, v4.xxyx
                  sample_d_indexable(texture2d)(float,float,float,float) r7.y, r7.yzyy, t0.xwyz, s0, r4.xyxx, r4.zwzz  // currHeight<0:Inf>
                
                #line 143
                  lt r7.z, r3.w, r7.y
                  if_nz r7.z
                
                #line 147
                    mov r7.z, -r6.z
                    add r7.w, r6.w, r7.z
                    mov r8.x, -r7.y
                    add r8.x, r6.w, r8.x
                    add r8.x, r3.w, r8.x
                    add r7.z, r7.z, r8.x
                    div r7.z, r7.w, r7.z  // t<0:NaN:Inf>
                    mul r7.zw, r2.xxxy, r7.zzzz
                    add r6.xy, r5.zwzz, r7.zwzz  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r2.w, r7.x  // sampleIndex<0>
                
                #line 143
                  else 
                
                #line 156
                    iadd r2.w, r2.w, l(1)  // sampleIndex<0>
                    mov r5.zw, r5.xxxy  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r6.z, r3.w  // prevRayY<0:NaN:Inf>
                    mov r6.w, r7.y  // prevHeight<0:Inf>
                    add r5.xy, r2.xyxx, r5.xyxx  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                    mov r7.y, -r2.z
                    add r3.w, r3.w, r7.y  // currRayY<0:NaN:Inf>
                
                #line 143
                  endif 
                
                #line 138
                endloop 
                
                #line 170
                add r2.xy, r6.xyxx, v4.xyxx  // parallaxTex<0:NaN:Inf,1:NaN:Inf>
                
                #line 196
                sample_indexable(texture2d)(float,float,float,float) r2.xyz, r2.xyxx, t0.xyzw, s0
                mov r2.xyz, r2.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                nop 
                mov r2.xyz, r2.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                mov r4.xyz, v3.xyzx  // tangentW<0,1,2>
                
                #line 206 "LightHelper.fx"
                mul r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
                add r2.xyz, r2.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // normalT<0:Inf,1:Inf,2:Inf>
                
                #line 209
                mov r3.xyz, r3.xyzx  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r1.w, r4.zxyz, r3.xyzx
                mul r5.xyz, r3.yzxy, r1.wwww
                mov r5.xyz, -r5.xyzx
                add r4.xyz, r4.xyzx, r5.xyzx
                dp3 r1.w, r4.xyzx, r4.xyzx
                rsq r1.w, r1.w
                mul r4.xyz, r1.wwww, r4.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r4.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r6.xyz, r3.zxyz, r5.yzxy
                mul r3.xyz, r3.xyzx, r5.xyzx
                mov r3.xyz, -r3.xyzx
                add r3.xyz, r3.xyzx, r6.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                mul r4.xyz, r2.xxxx, r4.xyzx
                mul r2.xyw, r2.yyyy, r3.xyxz
                add r2.xyw, r2.xyxw, r4.xyxz
                mul r0.xyz, r0.xyzx, r2.zzzz
                add r0.xyz, r0.xyzx, r2.xywx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // NormalSampleToWorldSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 197 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, r0.xyzx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r2.xyz, cb1[16].xyzx  // mat<0,1,2>
                mov r3.xyz, cb1[17].xyzx  // mat<4,5,6>
                mov r4.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                mov r5.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r6.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r7.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r8.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r8.xyz, -r8.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r2.xyz, r2.xyzx, r5.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r8.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r5.xyz, -r8.xyzx
                dp3 r3.w, r5.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r0.xyz, r0.xyzx, r3.wwww
                add r0.xyz, r5.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r4.w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                mul r1.xyz, r3.xyzx, r1.wwww
                mul r1.xyz, r6.xyzx, r1.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r0.xyz, r4.xyzx, r0.xxxx
                mul r0.xyz, r7.xyzx, r0.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r1.xyz, r2.wwww, r1.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r0.xyz, r2.wwww, r0.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r2.xyz, r2.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r1.xyz, r1.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                add r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 224
                add r1.xyz, r1.xyzx, r2.xyzx
                mul r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 242
                mov r1.x, -cb0[12].w
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[13].x
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 245
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[14].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 249
                mul r0.w, cb1[17].w, l(1.000000)  // litColor<3>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3>
                ret 
                // Approximately 157 instruction slots used
                            
            };
        }

    }

    technique11 Light2Fog
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //   float gHeightScale;                // Offset:  320 Size:     4 [unused]
                //   int gMinSampleCount;               // Offset:  324 Size:     4 [unused]
                //   int gMaxSampleCount;               // Offset:  328 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_temps 6
                
                #line 64 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                dp3 r3.x, v3.xyzx, cb0[0].xyzx  // vout<10:NaN:Inf>
                dp3 r3.y, v3.xyzx, cb0[1].xyzx  // vout<11:NaN:Inf>
                dp3 r3.z, v3.xyzx, cb0[2].xyzx  // vout<12:NaN:Inf>
                
                #line 69
                dp4 r4.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 72
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r5.x, r0.xyzw, cb0[12].xyzw  // vout<13:NaN:Inf>
                dp4 r5.y, r0.xyzw, cb0[13].xyzw  // vout<14:NaN:Inf>
                mov o0.xyzw, r4.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xyz, r3.xyzx  // VS<10:NaN:Inf,11:NaN:Inf,12:NaN:Inf>
                mov o4.xy, r5.xyxx  // VS<13:NaN:Inf,14:NaN:Inf>
                ret 
                // Approximately 25 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4
                //   float gFogRange;                   // Offset:  208 Size:     4
                //   float4 gFogColor;                  // Offset:  224 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //   float gHeightScale;                // Offset:  320 Size:     4
                //   int gMinSampleCount;               // Offset:  324 Size:     4
                //   int gMaxSampleCount;               // Offset:  328 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gNormalMap                        texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[15], immediateIndexed
                dcl_constantbuffer cb1[21], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_output o0.xyzw
                dcl_temps 12
                
                #line 85 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 88
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 91
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 94
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                mov r2.xyz, -r1.xyzx  // viewDirW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 103
                mov r3.xyz, r0.zxyz  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r1.w, v3.zxyz, r3.xyzx
                mul r4.xyz, r3.yzxy, r1.wwww
                mov r4.xyz, -r4.xyzx
                add r4.xyz, r4.xyzx, v3.xyzx
                dp3 r1.w, r4.xyzx, r4.xyzx
                rsq r1.w, r1.w
                mul r4.xyz, r1.wwww, r4.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r4.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r6.xyz, r3.zxyz, r5.yzxy
                mul r5.xyz, r3.xyzx, r5.xyzx
                mov r5.xyz, -r5.xyzx
                add r5.xyz, r5.xyzx, r6.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 109
                dp3 r4.x, r2.xyzx, r4.xyzx  // viewDirTS<0:NaN:Inf>
                dp3 r4.y, r2.xyzx, r5.xyzx  // viewDirTS<1:NaN:Inf>
                dp3 r1.w, r2.xyzx, r0.xyzx  // viewDirTS<2:NaN:Inf>
                mov r2.xy, -r4.xyxx
                mul r2.xy, r2.xyxx, cb1[20].xxxx
                div r2.xy, r2.xyxx, r1.wwww  // maxParallaxOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 116
                itof r1.w, cb1[20].z
                itof r2.z, cb1[20].y
                dp3 r2.w, r1.xyzx, r0.xyzx
                mov r3.w, -r1.w
                add r2.z, r2.z, r3.w
                mul r2.z, r2.z, r2.w
                add r1.w, r1.w, r2.z
                ftoi r1.w, r1.w  // sampleCount<0>
                itof r2.z, r1.w
                div r2.z, l(1.000000), r2.z  // yStep<0:Inf>
                mul r2.xy, r2.zzzz, r2.xyxx  // texStep<0:NaN:Inf,1:NaN:Inf>
                
                #line 125
                deriv_rtx_coarse r4.xy, v4.xyxx  // dx<0:Inf,1:Inf>
                deriv_rty_coarse r4.zw, v4.xxxy  // dy<0:Inf,1:Inf>
                
                #line 138
                mov r5.xy, l(0,0,0,0)  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r5.zw, l(0,0,0,0)  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r6.xy, l(0,0,0,0)  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r2.w, l(0)  // sampleIndex<0>
                mov r3.w, l(1.000000)  // currRayY<0:NaN:Inf>
                mov r6.z, l(1.000000)  // prevRayY<0:NaN:Inf>
                mov r6.w, l(0)  // prevHeight<0:Inf>
                loop 
                  iadd r7.x, r1.w, l(1)
                  ilt r7.y, r2.w, r7.x
                  breakc_z r7.y
                  add r7.yz, r5.xxyx, v4.xxyx
                  sample_d_indexable(texture2d)(float,float,float,float) r7.y, r7.yzyy, t0.xwyz, s0, r4.xyxx, r4.zwzz  // currHeight<0:Inf>
                
                #line 143
                  lt r7.z, r3.w, r7.y
                  if_nz r7.z
                
                #line 147
                    mov r7.z, -r6.z
                    add r7.w, r6.w, r7.z
                    mov r8.x, -r7.y
                    add r8.x, r6.w, r8.x
                    add r8.x, r3.w, r8.x
                    add r7.z, r7.z, r8.x
                    div r7.z, r7.w, r7.z  // t<0:NaN:Inf>
                    mul r7.zw, r2.xxxy, r7.zzzz
                    add r6.xy, r5.zwzz, r7.zwzz  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r2.w, r7.x  // sampleIndex<0>
                
                #line 143
                  else 
                
                #line 156
                    iadd r2.w, r2.w, l(1)  // sampleIndex<0>
                    mov r5.zw, r5.xxxy  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r6.z, r3.w  // prevRayY<0:NaN:Inf>
                    mov r6.w, r7.y  // prevHeight<0:Inf>
                    add r5.xy, r2.xyxx, r5.xyxx  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                    mov r7.y, -r2.z
                    add r3.w, r3.w, r7.y  // currRayY<0:NaN:Inf>
                
                #line 143
                  endif 
                
                #line 138
                endloop 
                
                #line 170
                add r2.xy, r6.xyxx, v4.xyxx  // parallaxTex<0:NaN:Inf,1:NaN:Inf>
                
                #line 196
                sample_indexable(texture2d)(float,float,float,float) r2.xyz, r2.xyxx, t0.xyzw, s0
                mov r2.xyz, r2.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                nop 
                mov r2.xyz, r2.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                mov r4.xyz, v3.xyzx  // tangentW<0,1,2>
                
                #line 206 "LightHelper.fx"
                mul r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
                add r2.xyz, r2.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // normalT<0:Inf,1:Inf,2:Inf>
                
                #line 209
                mov r3.xyz, r3.xyzx  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r1.w, r4.zxyz, r3.xyzx
                mul r5.xyz, r3.yzxy, r1.wwww
                mov r5.xyz, -r5.xyzx
                add r4.xyz, r4.xyzx, r5.xyzx
                dp3 r1.w, r4.xyzx, r4.xyzx
                rsq r1.w, r1.w
                mul r4.xyz, r1.wwww, r4.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r4.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r6.xyz, r3.zxyz, r5.yzxy
                mul r3.xyz, r3.xyzx, r5.xyzx
                mov r3.xyz, -r3.xyzx
                add r3.xyz, r3.xyzx, r6.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                mul r4.xyz, r2.xxxx, r4.xyzx
                mul r2.xyw, r2.yyyy, r3.xyxz
                add r2.xyw, r2.xyxw, r4.xyxz
                mul r0.xyz, r0.xyzx, r2.zzzz
                add r0.xyz, r0.xyzx, r2.xywx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // NormalSampleToWorldSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 197 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, r0.xyzx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r2.xyz, cb1[16].xyzx  // mat<0,1,2>
                mov r3.xyz, cb1[17].xyzx  // mat<4,5,6>
                mov r4.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                mov r5.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r6.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r7.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r8.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r8.xyz, -r8.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r5.xyz, r2.xyzx, r5.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r8.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r8.xyz, -r8.xyzx
                dp3 r3.w, r8.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r9.xyz, r0.xyzx, r3.wwww
                add r8.xyz, r8.xyzx, r9.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r3.w, r8.xyzx, r1.xyzx
                max r3.w, r3.w, l(0.000000)
                log r3.w, r3.w
                mul r3.w, r3.w, r4.w
                exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                mul r8.xyz, r3.xyzx, r1.wwww
                mul r6.xyz, r6.xyzx, r8.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r8.xyz, r4.xyzx, r3.wwww
                mul r7.xyz, r7.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r6.xyz, r2.wwww, r6.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r7.xyz, r2.wwww, r7.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r5.xyz, r5.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r6.xyz, r6.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.xyz, r7.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                add r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r8.xyz, cb0[4].xyzx  // L<0,1,2>
                mov r9.xyz, cb0[5].xyzx  // L<4,5,6>
                mov r10.xyz, cb0[6].xyzx  // L<8,9,10>
                mov r11.xyz, cb0[7].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r11.xyz, -r11.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r2.xyz, r2.xyzx, r8.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r11.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r8.xyz, -r11.xyzx
                dp3 r3.w, r8.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r0.xyz, r0.xyzx, r3.wwww
                add r0.xyz, r8.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r4.w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                mul r1.xyz, r3.xyzx, r1.wwww
                mul r1.xyz, r9.xyzx, r1.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r0.xyz, r4.xyzx, r0.xxxx
                mul r0.xyz, r10.xyzx, r0.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r1.xyz, r2.wwww, r1.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r0.xyz, r2.wwww, r0.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r2.xyz, r2.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r1.xyz, r1.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r2.xyz, r2.xyzx, r5.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r1.xyz, r1.xyzx, r6.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r0.xyz, r0.xyzx, r7.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 224
                add r1.xyz, r1.xyzx, r2.xyzx
                mul r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 242
                mov r1.x, -cb0[12].w
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[13].x
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 245
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[14].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 249
                mul r0.w, cb1[17].w, l(1.000000)  // litColor<3>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3>
                ret 
                // Approximately 189 instruction slots used
                            
            };
        }

    }

    technique11 Light3Fog
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //   float gHeightScale;                // Offset:  320 Size:     4 [unused]
                //   int gMinSampleCount;               // Offset:  324 Size:     4 [unused]
                //   int gMaxSampleCount;               // Offset:  328 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_temps 6
                
                #line 64 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                dp3 r3.x, v3.xyzx, cb0[0].xyzx  // vout<10:NaN:Inf>
                dp3 r3.y, v3.xyzx, cb0[1].xyzx  // vout<11:NaN:Inf>
                dp3 r3.z, v3.xyzx, cb0[2].xyzx  // vout<12:NaN:Inf>
                
                #line 69
                dp4 r4.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 72
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r5.x, r0.xyzw, cb0[12].xyzw  // vout<13:NaN:Inf>
                dp4 r5.y, r0.xyzw, cb0[13].xyzw  // vout<14:NaN:Inf>
                mov o0.xyzw, r4.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xyz, r3.xyzx  // VS<10:NaN:Inf,11:NaN:Inf,12:NaN:Inf>
                mov o4.xy, r5.xyxx  // VS<13:NaN:Inf,14:NaN:Inf>
                ret 
                // Approximately 25 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4
                //   float gFogRange;                   // Offset:  208 Size:     4
                //   float4 gFogColor;                  // Offset:  224 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //   float gHeightScale;                // Offset:  320 Size:     4
                //   int gMinSampleCount;               // Offset:  324 Size:     4
                //   int gMaxSampleCount;               // Offset:  328 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gNormalMap                        texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[15], immediateIndexed
                dcl_constantbuffer cb1[21], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_output o0.xyzw
                dcl_temps 13
                
                #line 85 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 88
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 91
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 94
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                mov r2.xyz, -r1.xyzx  // viewDirW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 103
                mov r3.xyz, r0.zxyz  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r1.w, v3.zxyz, r3.xyzx
                mul r4.xyz, r3.yzxy, r1.wwww
                mov r4.xyz, -r4.xyzx
                add r4.xyz, r4.xyzx, v3.xyzx
                dp3 r1.w, r4.xyzx, r4.xyzx
                rsq r1.w, r1.w
                mul r4.xyz, r1.wwww, r4.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r4.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r6.xyz, r3.zxyz, r5.yzxy
                mul r5.xyz, r3.xyzx, r5.xyzx
                mov r5.xyz, -r5.xyzx
                add r5.xyz, r5.xyzx, r6.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 109
                dp3 r4.x, r2.xyzx, r4.xyzx  // viewDirTS<0:NaN:Inf>
                dp3 r4.y, r2.xyzx, r5.xyzx  // viewDirTS<1:NaN:Inf>
                dp3 r1.w, r2.xyzx, r0.xyzx  // viewDirTS<2:NaN:Inf>
                mov r2.xy, -r4.xyxx
                mul r2.xy, r2.xyxx, cb1[20].xxxx
                div r2.xy, r2.xyxx, r1.wwww  // maxParallaxOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 116
                itof r1.w, cb1[20].z
                itof r2.z, cb1[20].y
                dp3 r2.w, r1.xyzx, r0.xyzx
                mov r3.w, -r1.w
                add r2.z, r2.z, r3.w
                mul r2.z, r2.z, r2.w
                add r1.w, r1.w, r2.z
                ftoi r1.w, r1.w  // sampleCount<0>
                itof r2.z, r1.w
                div r2.z, l(1.000000), r2.z  // yStep<0:Inf>
                mul r2.xy, r2.zzzz, r2.xyxx  // texStep<0:NaN:Inf,1:NaN:Inf>
                
                #line 125
                deriv_rtx_coarse r4.xy, v4.xyxx  // dx<0:Inf,1:Inf>
                deriv_rty_coarse r4.zw, v4.xxxy  // dy<0:Inf,1:Inf>
                
                #line 138
                mov r5.xy, l(0,0,0,0)  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r5.zw, l(0,0,0,0)  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r6.xy, l(0,0,0,0)  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r2.w, l(0)  // sampleIndex<0>
                mov r3.w, l(1.000000)  // currRayY<0:NaN:Inf>
                mov r6.z, l(1.000000)  // prevRayY<0:NaN:Inf>
                mov r6.w, l(0)  // prevHeight<0:Inf>
                loop 
                  iadd r7.x, r1.w, l(1)
                  ilt r7.y, r2.w, r7.x
                  breakc_z r7.y
                  add r7.yz, r5.xxyx, v4.xxyx
                  sample_d_indexable(texture2d)(float,float,float,float) r7.y, r7.yzyy, t0.xwyz, s0, r4.xyxx, r4.zwzz  // currHeight<0:Inf>
                
                #line 143
                  lt r7.z, r3.w, r7.y
                  if_nz r7.z
                
                #line 147
                    mov r7.z, -r6.z
                    add r7.w, r6.w, r7.z
                    mov r8.x, -r7.y
                    add r8.x, r6.w, r8.x
                    add r8.x, r3.w, r8.x
                    add r7.z, r7.z, r8.x
                    div r7.z, r7.w, r7.z  // t<0:NaN:Inf>
                    mul r7.zw, r2.xxxy, r7.zzzz
                    add r6.xy, r5.zwzz, r7.zwzz  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r2.w, r7.x  // sampleIndex<0>
                
                #line 143
                  else 
                
                #line 156
                    iadd r2.w, r2.w, l(1)  // sampleIndex<0>
                    mov r5.zw, r5.xxxy  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r6.z, r3.w  // prevRayY<0:NaN:Inf>
                    mov r6.w, r7.y  // prevHeight<0:Inf>
                    add r5.xy, r2.xyxx, r5.xyxx  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                    mov r7.y, -r2.z
                    add r3.w, r3.w, r7.y  // currRayY<0:NaN:Inf>
                
                #line 143
                  endif 
                
                #line 138
                endloop 
                
                #line 170
                add r2.xy, r6.xyxx, v4.xyxx  // parallaxTex<0:NaN:Inf,1:NaN:Inf>
                
                #line 196
                sample_indexable(texture2d)(float,float,float,float) r2.xyz, r2.xyxx, t0.xyzw, s0
                mov r2.xyz, r2.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                nop 
                mov r2.xyz, r2.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                mov r4.xyz, v3.xyzx  // tangentW<0,1,2>
                
                #line 206 "LightHelper.fx"
                mul r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
                add r2.xyz, r2.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // normalT<0:Inf,1:Inf,2:Inf>
                
                #line 209
                mov r3.xyz, r3.xyzx  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r1.w, r4.zxyz, r3.xyzx
                mul r5.xyz, r3.yzxy, r1.wwww
                mov r5.xyz, -r5.xyzx
                add r4.xyz, r4.xyzx, r5.xyzx
                dp3 r1.w, r4.xyzx, r4.xyzx
                rsq r1.w, r1.w
                mul r4.xyz, r1.wwww, r4.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r4.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r6.xyz, r3.zxyz, r5.yzxy
                mul r3.xyz, r3.xyzx, r5.xyzx
                mov r3.xyz, -r3.xyzx
                add r3.xyz, r3.xyzx, r6.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                mul r4.xyz, r2.xxxx, r4.xyzx
                mul r2.xyw, r2.yyyy, r3.xyxz
                add r2.xyw, r2.xyxw, r4.xyxz
                mul r0.xyz, r0.xyzx, r2.zzzz
                add r0.xyz, r0.xyzx, r2.xywx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // NormalSampleToWorldSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 197 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, r0.xyzx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r2.xyz, cb1[16].xyzx  // mat<0,1,2>
                mov r3.xyz, cb1[17].xyzx  // mat<4,5,6>
                mov r4.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                mov r5.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r6.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r7.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r8.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r8.xyz, -r8.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r5.xyz, r2.xyzx, r5.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r8.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r8.xyz, -r8.xyzx
                dp3 r3.w, r8.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r9.xyz, r0.xyzx, r3.wwww
                add r8.xyz, r8.xyzx, r9.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r3.w, r8.xyzx, r1.xyzx
                max r3.w, r3.w, l(0.000000)
                log r3.w, r3.w
                mul r3.w, r3.w, r4.w
                exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                mul r8.xyz, r3.xyzx, r1.wwww
                mul r6.xyz, r6.xyzx, r8.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r8.xyz, r4.xyzx, r3.wwww
                mul r7.xyz, r7.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r6.xyz, r2.wwww, r6.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r7.xyz, r2.wwww, r7.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r5.xyz, r5.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r6.xyz, r6.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.xyz, r7.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                add r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r8.xyz, cb0[4].xyzx  // L<0,1,2>
                mov r9.xyz, cb0[5].xyzx  // L<4,5,6>
                mov r10.xyz, cb0[6].xyzx  // L<8,9,10>
                mov r11.xyz, cb0[7].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r11.xyz, -r11.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r8.xyz, r2.xyzx, r8.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r11.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r11.xyz, -r11.xyzx
                dp3 r3.w, r11.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r12.xyz, r0.xyzx, r3.wwww
                add r11.xyz, r11.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r3.w, r11.xyzx, r1.xyzx
                max r3.w, r3.w, l(0.000000)
                log r3.w, r3.w
                mul r3.w, r3.w, r4.w
                exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                mul r11.xyz, r3.xyzx, r1.wwww
                mul r9.xyz, r9.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r11.xyz, r4.xyzx, r3.wwww
                mul r10.xyz, r10.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r9.xyz, r2.wwww, r9.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r10.xyz, r2.wwww, r10.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r8.xyz, r8.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r9.xyz, r9.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r10.xyz, r10.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r5.xyz, r5.xyzx, r8.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r6.xyz, r6.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r7.xyz, r7.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r8.xyz, cb0[8].xyzx  // L<0,1,2>
                mov r9.xyz, cb0[9].xyzx  // L<4,5,6>
                mov r10.xyz, cb0[10].xyzx  // L<8,9,10>
                mov r11.xyz, cb0[11].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r11.xyz, -r11.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r2.xyz, r2.xyzx, r8.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r11.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r8.xyz, -r11.xyzx
                dp3 r3.w, r8.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r0.xyz, r0.xyzx, r3.wwww
                add r0.xyz, r8.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r4.w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                mul r1.xyz, r3.xyzx, r1.wwww
                mul r1.xyz, r9.xyzx, r1.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r0.xyz, r4.xyzx, r0.xxxx
                mul r0.xyz, r10.xyzx, r0.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r1.xyz, r2.wwww, r1.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r0.xyz, r2.wwww, r0.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r2.xyz, r2.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r1.xyz, r1.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r2.xyz, r2.xyzx, r5.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r1.xyz, r1.xyzx, r6.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r0.xyz, r0.xyzx, r7.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 224
                add r1.xyz, r1.xyzx, r2.xyzx
                mul r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 242
                mov r1.x, -cb0[12].w
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[13].x
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 245
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[14].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 249
                mul r0.w, cb1[17].w, l(1.000000)  // litColor<3>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3>
                ret 
                // Approximately 221 instruction slots used
                            
            };
        }

    }

    technique11 Light0TexFog
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //   float gHeightScale;                // Offset:  320 Size:     4 [unused]
                //   int gMinSampleCount;               // Offset:  324 Size:     4 [unused]
                //   int gMaxSampleCount;               // Offset:  328 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_temps 6
                
                #line 64 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                dp3 r3.x, v3.xyzx, cb0[0].xyzx  // vout<10:NaN:Inf>
                dp3 r3.y, v3.xyzx, cb0[1].xyzx  // vout<11:NaN:Inf>
                dp3 r3.z, v3.xyzx, cb0[2].xyzx  // vout<12:NaN:Inf>
                
                #line 69
                dp4 r4.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 72
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r5.x, r0.xyzw, cb0[12].xyzw  // vout<13:NaN:Inf>
                dp4 r5.y, r0.xyzw, cb0[13].xyzw  // vout<14:NaN:Inf>
                mov o0.xyzw, r4.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xyz, r3.xyzx  // VS<10:NaN:Inf,11:NaN:Inf,12:NaN:Inf>
                mov o4.xy, r5.xyxx  // VS<13:NaN:Inf,14:NaN:Inf>
                ret 
                // Approximately 25 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192 [unused]
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4
                //   float gFogRange;                   // Offset:  208 Size:     4
                //   float4 gFogColor;                  // Offset:  224 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //   float gHeightScale;                // Offset:  320 Size:     4
                //   int gMinSampleCount;               // Offset:  324 Size:     4
                //   int gMaxSampleCount;               // Offset:  328 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gNormalMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[15], immediateIndexed
                dcl_constantbuffer cb1[21], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_output o0.xyzw
                dcl_temps 7
                
                #line 85 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 88
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 91
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 94
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                mov r2.xyz, -r1.xyzx  // viewDirW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 103
                mov r3.xyz, r0.zxyz  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r1.w, v3.zxyz, r3.xyzx
                mul r4.xyz, r3.yzxy, r1.wwww
                mov r4.xyz, -r4.xyzx
                add r4.xyz, r4.xyzx, v3.xyzx
                dp3 r1.w, r4.xyzx, r4.xyzx
                rsq r1.w, r1.w
                mul r4.xyz, r1.wwww, r4.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r4.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r6.xyz, r3.zxyz, r5.yzxy
                mul r3.xyz, r3.xyzx, r5.xyzx
                mov r3.xyz, -r3.xyzx
                add r3.xyz, r3.xyzx, r6.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 109
                dp3 r4.x, r2.xyzx, r4.xyzx  // viewDirTS<0:NaN:Inf>
                dp3 r4.y, r2.xyzx, r3.xyzx  // viewDirTS<1:NaN:Inf>
                dp3 r1.w, r2.xyzx, r0.xyzx  // viewDirTS<2:NaN:Inf>
                mov r2.xy, -r4.xyxx
                mul r2.xy, r2.xyxx, cb1[20].xxxx
                div r2.xy, r2.xyxx, r1.wwww  // maxParallaxOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 116
                itof r1.w, cb1[20].z
                itof r2.z, cb1[20].y
                dp3 r0.x, r1.xyzx, r0.xyzx
                mov r0.y, -r1.w
                add r0.y, r0.y, r2.z
                mul r0.x, r0.y, r0.x
                add r0.x, r0.x, r1.w
                ftoi r0.x, r0.x  // sampleCount<0>
                itof r0.y, r0.x
                div r0.y, l(1.000000), r0.y  // yStep<0:Inf>
                mul r1.xy, r0.yyyy, r2.xyxx  // texStep<0:NaN:Inf,1:NaN:Inf>
                
                #line 125
                deriv_rtx_coarse r1.zw, v4.xxxy  // dx<0:Inf,1:Inf>
                deriv_rty_coarse r2.xy, v4.xyxx  // dy<0:Inf,1:Inf>
                
                #line 138
                mov r2.zw, l(0,0,0,0)  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r3.xy, l(0,0,0,0)  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r3.zw, l(0,0,0,0)  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r0.z, l(0)  // sampleIndex<0>
                mov r4.x, l(1.000000)  // currRayY<0:NaN:Inf>
                mov r4.y, l(1.000000)  // prevRayY<0:NaN:Inf>
                mov r4.z, l(0)  // prevHeight<0:Inf>
                loop 
                  iadd r4.w, r0.x, l(1)
                  ilt r5.x, r0.z, r4.w
                  breakc_z r5.x
                  add r5.xy, r2.zwzz, v4.xyxx
                  sample_d_indexable(texture2d)(float,float,float,float) r5.x, r5.xyxx, t1.wxyz, s0, r1.zwzz, r2.xyxx  // currHeight<0:Inf>
                
                #line 143
                  lt r5.y, r4.x, r5.x
                  if_nz r5.y
                
                #line 147
                    mov r5.y, -r4.y
                    add r5.z, r4.z, r5.y
                    mov r5.w, -r5.x
                    add r5.w, r4.z, r5.w
                    add r5.w, r4.x, r5.w
                    add r5.y, r5.y, r5.w
                    div r5.y, r5.z, r5.y  // t<0:NaN:Inf>
                    mul r5.yz, r1.xxyx, r5.yyyy
                    add r3.zw, r3.xxxy, r5.yyyz  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r0.z, r4.w  // sampleIndex<0>
                
                #line 143
                  else 
                
                #line 156
                    iadd r0.z, r0.z, l(1)  // sampleIndex<0>
                    mov r3.xy, r2.zwzz  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r4.y, r4.x  // prevRayY<0:NaN:Inf>
                    mov r4.z, r5.x  // prevHeight<0:Inf>
                    add r2.zw, r1.xxxy, r2.zzzw  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                    mov r5.x, -r0.y
                    add r4.x, r4.x, r5.x  // currRayY<0:NaN:Inf>
                
                #line 143
                  endif 
                
                #line 138
                endloop 
                
                #line 170
                add r0.xy, r3.zwzz, v4.xyxx  // parallaxTex<0:NaN:Inf,1:NaN:Inf>
                
                #line 181
                sample_indexable(texture2d)(float,float,float,float) r1.xyzw, r0.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 197
                nop 
                
                #line 203
                mov r1.xyz, r1.xyzx  // litColor<0:Inf,1:Inf,2:Inf>
                
                #line 242
                mov r0.x, -cb0[12].w
                add r0.x, r0.x, r0.w
                div r0.x, r0.x, cb0[13].x
                max r0.x, r0.x, l(0.000000)
                min r0.x, r0.x, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 245
                mov r0.yzw, -r1.xxyz
                add r0.yzw, r0.yyzw, cb0[14].xxyz
                mul r0.xyz, r0.yzwy, r0.xxxx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 249
                mul r0.w, r1.w, cb1[17].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 93 instruction slots used
                            
            };
        }

    }

    technique11 Light1TexFog
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //   float gHeightScale;                // Offset:  320 Size:     4 [unused]
                //   int gMinSampleCount;               // Offset:  324 Size:     4 [unused]
                //   int gMaxSampleCount;               // Offset:  328 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_temps 6
                
                #line 64 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                dp3 r3.x, v3.xyzx, cb0[0].xyzx  // vout<10:NaN:Inf>
                dp3 r3.y, v3.xyzx, cb0[1].xyzx  // vout<11:NaN:Inf>
                dp3 r3.z, v3.xyzx, cb0[2].xyzx  // vout<12:NaN:Inf>
                
                #line 69
                dp4 r4.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 72
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r5.x, r0.xyzw, cb0[12].xyzw  // vout<13:NaN:Inf>
                dp4 r5.y, r0.xyzw, cb0[13].xyzw  // vout<14:NaN:Inf>
                mov o0.xyzw, r4.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xyz, r3.xyzx  // VS<10:NaN:Inf,11:NaN:Inf,12:NaN:Inf>
                mov o4.xy, r5.xyxx  // VS<13:NaN:Inf,14:NaN:Inf>
                ret 
                // Approximately 25 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4
                //   float gFogRange;                   // Offset:  208 Size:     4
                //   float4 gFogColor;                  // Offset:  224 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //   float gHeightScale;                // Offset:  320 Size:     4
                //   int gMinSampleCount;               // Offset:  324 Size:     4
                //   int gMaxSampleCount;               // Offset:  328 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gNormalMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[15], immediateIndexed
                dcl_constantbuffer cb1[21], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_output o0.xyzw
                dcl_temps 10
                
                #line 85 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 88
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 91
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 94
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                mov r2.xyz, -r1.xyzx  // viewDirW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 103
                mov r3.xyz, r0.zxyz  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r1.w, v3.zxyz, r3.xyzx
                mul r4.xyz, r3.yzxy, r1.wwww
                mov r4.xyz, -r4.xyzx
                add r4.xyz, r4.xyzx, v3.xyzx
                dp3 r1.w, r4.xyzx, r4.xyzx
                rsq r1.w, r1.w
                mul r4.xyz, r1.wwww, r4.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r4.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r6.xyz, r3.zxyz, r5.yzxy
                mul r5.xyz, r3.xyzx, r5.xyzx
                mov r5.xyz, -r5.xyzx
                add r5.xyz, r5.xyzx, r6.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 109
                dp3 r4.x, r2.xyzx, r4.xyzx  // viewDirTS<0:NaN:Inf>
                dp3 r4.y, r2.xyzx, r5.xyzx  // viewDirTS<1:NaN:Inf>
                dp3 r1.w, r2.xyzx, r0.xyzx  // viewDirTS<2:NaN:Inf>
                mov r2.xy, -r4.xyxx
                mul r2.xy, r2.xyxx, cb1[20].xxxx
                div r2.xy, r2.xyxx, r1.wwww  // maxParallaxOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 116
                itof r1.w, cb1[20].z
                itof r2.z, cb1[20].y
                dp3 r2.w, r1.xyzx, r0.xyzx
                mov r3.w, -r1.w
                add r2.z, r2.z, r3.w
                mul r2.z, r2.z, r2.w
                add r1.w, r1.w, r2.z
                ftoi r1.w, r1.w  // sampleCount<0>
                itof r2.z, r1.w
                div r2.z, l(1.000000), r2.z  // yStep<0:Inf>
                mul r2.xy, r2.zzzz, r2.xyxx  // texStep<0:NaN:Inf,1:NaN:Inf>
                
                #line 125
                deriv_rtx_coarse r4.xy, v4.xyxx  // dx<0:Inf,1:Inf>
                deriv_rty_coarse r4.zw, v4.xxxy  // dy<0:Inf,1:Inf>
                
                #line 138
                mov r5.xy, l(0,0,0,0)  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r5.zw, l(0,0,0,0)  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r6.xy, l(0,0,0,0)  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r2.w, l(0)  // sampleIndex<0>
                mov r3.w, l(1.000000)  // currRayY<0:NaN:Inf>
                mov r6.z, l(1.000000)  // prevRayY<0:NaN:Inf>
                mov r6.w, l(0)  // prevHeight<0:Inf>
                loop 
                  iadd r7.x, r1.w, l(1)
                  ilt r7.y, r2.w, r7.x
                  breakc_z r7.y
                  add r7.yz, r5.xxyx, v4.xxyx
                  sample_d_indexable(texture2d)(float,float,float,float) r7.y, r7.yzyy, t1.xwyz, s0, r4.xyxx, r4.zwzz  // currHeight<0:Inf>
                
                #line 143
                  lt r7.z, r3.w, r7.y
                  if_nz r7.z
                
                #line 147
                    mov r7.z, -r6.z
                    add r7.w, r6.w, r7.z
                    mov r8.x, -r7.y
                    add r8.x, r6.w, r8.x
                    add r8.x, r3.w, r8.x
                    add r7.z, r7.z, r8.x
                    div r7.z, r7.w, r7.z  // t<0:NaN:Inf>
                    mul r7.zw, r2.xxxy, r7.zzzz
                    add r6.xy, r5.zwzz, r7.zwzz  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r2.w, r7.x  // sampleIndex<0>
                
                #line 143
                  else 
                
                #line 156
                    iadd r2.w, r2.w, l(1)  // sampleIndex<0>
                    mov r5.zw, r5.xxxy  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r6.z, r3.w  // prevRayY<0:NaN:Inf>
                    mov r6.w, r7.y  // prevHeight<0:Inf>
                    add r5.xy, r2.xyxx, r5.xyxx  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                    mov r7.y, -r2.z
                    add r3.w, r3.w, r7.y  // currRayY<0:NaN:Inf>
                
                #line 143
                  endif 
                
                #line 138
                endloop 
                
                #line 170
                add r2.xy, r6.xyxx, v4.xyxx  // parallaxTex<0:NaN:Inf,1:NaN:Inf>
                
                #line 181
                sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r2.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 196
                sample_indexable(texture2d)(float,float,float,float) r2.xyz, r2.xyxx, t1.xyzw, s0
                mov r2.xyz, r2.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                nop 
                mov r2.xyz, r2.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                mov r5.xyz, v3.xyzx  // tangentW<0,1,2>
                
                #line 206 "LightHelper.fx"
                mul r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
                add r2.xyz, r2.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // normalT<0:Inf,1:Inf,2:Inf>
                
                #line 209
                mov r3.xyz, r3.xyzx  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r1.w, r5.zxyz, r3.xyzx
                mul r6.xyz, r3.yzxy, r1.wwww
                mov r6.xyz, -r6.xyzx
                add r5.xyz, r5.xyzx, r6.xyzx
                dp3 r1.w, r5.xyzx, r5.xyzx
                rsq r1.w, r1.w
                mul r5.xyz, r1.wwww, r5.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r6.xyz, r5.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r7.xyz, r3.zxyz, r6.yzxy
                mul r3.xyz, r3.xyzx, r6.xyzx
                mov r3.xyz, -r3.xyzx
                add r3.xyz, r3.xyzx, r7.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                mul r5.xyz, r2.xxxx, r5.xyzx
                mul r2.xyw, r2.yyyy, r3.xyxz
                add r2.xyw, r2.xyxw, r5.xyxz
                mul r0.xyz, r0.xyzx, r2.zzzz
                add r0.xyz, r0.xyzx, r2.xywx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // NormalSampleToWorldSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 197 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, r0.xyzx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r2.xyz, cb1[16].xyzx  // mat<0,1,2>
                mov r3.xyz, cb1[17].xyzx  // mat<4,5,6>
                mov r5.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r2.xyz, r2.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r9.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r6.xyz, -r9.xyzx
                dp3 r3.w, r6.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r0.xyz, r0.xyzx, r3.wwww
                add r0.xyz, r6.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r5.w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                mul r1.xyz, r3.xyzx, r1.wwww
                mul r1.xyz, r7.xyzx, r1.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r0.xyz, r5.xyzx, r0.xxxx
                mul r0.xyz, r8.xyzx, r0.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r1.xyz, r2.wwww, r1.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r0.xyz, r2.wwww, r0.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r2.xyz, r2.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r1.xyz, r1.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                add r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 224
                add r1.xyz, r1.xyzx, r2.xyzx
                mul r1.xyz, r1.xyzx, r4.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 242
                mov r1.x, -cb0[12].w
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[13].x
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 245
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[14].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 249
                mul r0.w, r4.w, cb1[17].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 158 instruction slots used
                            
            };
        }

    }

    technique11 Light2TexFog
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //   float gHeightScale;                // Offset:  320 Size:     4 [unused]
                //   int gMinSampleCount;               // Offset:  324 Size:     4 [unused]
                //   int gMaxSampleCount;               // Offset:  328 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_temps 6
                
                #line 64 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                dp3 r3.x, v3.xyzx, cb0[0].xyzx  // vout<10:NaN:Inf>
                dp3 r3.y, v3.xyzx, cb0[1].xyzx  // vout<11:NaN:Inf>
                dp3 r3.z, v3.xyzx, cb0[2].xyzx  // vout<12:NaN:Inf>
                
                #line 69
                dp4 r4.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 72
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r5.x, r0.xyzw, cb0[12].xyzw  // vout<13:NaN:Inf>
                dp4 r5.y, r0.xyzw, cb0[13].xyzw  // vout<14:NaN:Inf>
                mov o0.xyzw, r4.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xyz, r3.xyzx  // VS<10:NaN:Inf,11:NaN:Inf,12:NaN:Inf>
                mov o4.xy, r5.xyxx  // VS<13:NaN:Inf,14:NaN:Inf>
                ret 
                // Approximately 25 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4
                //   float gFogRange;                   // Offset:  208 Size:     4
                //   float4 gFogColor;                  // Offset:  224 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //   float gHeightScale;                // Offset:  320 Size:     4
                //   int gMinSampleCount;               // Offset:  324 Size:     4
                //   int gMaxSampleCount;               // Offset:  328 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gNormalMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[15], immediateIndexed
                dcl_constantbuffer cb1[21], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_output o0.xyzw
                dcl_temps 13
                
                #line 85 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 88
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 91
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 94
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                mov r2.xyz, -r1.xyzx  // viewDirW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 103
                mov r3.xyz, r0.zxyz  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r1.w, v3.zxyz, r3.xyzx
                mul r4.xyz, r3.yzxy, r1.wwww
                mov r4.xyz, -r4.xyzx
                add r4.xyz, r4.xyzx, v3.xyzx
                dp3 r1.w, r4.xyzx, r4.xyzx
                rsq r1.w, r1.w
                mul r4.xyz, r1.wwww, r4.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r4.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r6.xyz, r3.zxyz, r5.yzxy
                mul r5.xyz, r3.xyzx, r5.xyzx
                mov r5.xyz, -r5.xyzx
                add r5.xyz, r5.xyzx, r6.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 109
                dp3 r4.x, r2.xyzx, r4.xyzx  // viewDirTS<0:NaN:Inf>
                dp3 r4.y, r2.xyzx, r5.xyzx  // viewDirTS<1:NaN:Inf>
                dp3 r1.w, r2.xyzx, r0.xyzx  // viewDirTS<2:NaN:Inf>
                mov r2.xy, -r4.xyxx
                mul r2.xy, r2.xyxx, cb1[20].xxxx
                div r2.xy, r2.xyxx, r1.wwww  // maxParallaxOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 116
                itof r1.w, cb1[20].z
                itof r2.z, cb1[20].y
                dp3 r2.w, r1.xyzx, r0.xyzx
                mov r3.w, -r1.w
                add r2.z, r2.z, r3.w
                mul r2.z, r2.z, r2.w
                add r1.w, r1.w, r2.z
                ftoi r1.w, r1.w  // sampleCount<0>
                itof r2.z, r1.w
                div r2.z, l(1.000000), r2.z  // yStep<0:Inf>
                mul r2.xy, r2.zzzz, r2.xyxx  // texStep<0:NaN:Inf,1:NaN:Inf>
                
                #line 125
                deriv_rtx_coarse r4.xy, v4.xyxx  // dx<0:Inf,1:Inf>
                deriv_rty_coarse r4.zw, v4.xxxy  // dy<0:Inf,1:Inf>
                
                #line 138
                mov r5.xy, l(0,0,0,0)  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r5.zw, l(0,0,0,0)  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r6.xy, l(0,0,0,0)  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r2.w, l(0)  // sampleIndex<0>
                mov r3.w, l(1.000000)  // currRayY<0:NaN:Inf>
                mov r6.z, l(1.000000)  // prevRayY<0:NaN:Inf>
                mov r6.w, l(0)  // prevHeight<0:Inf>
                loop 
                  iadd r7.x, r1.w, l(1)
                  ilt r7.y, r2.w, r7.x
                  breakc_z r7.y
                  add r7.yz, r5.xxyx, v4.xxyx
                  sample_d_indexable(texture2d)(float,float,float,float) r7.y, r7.yzyy, t1.xwyz, s0, r4.xyxx, r4.zwzz  // currHeight<0:Inf>
                
                #line 143
                  lt r7.z, r3.w, r7.y
                  if_nz r7.z
                
                #line 147
                    mov r7.z, -r6.z
                    add r7.w, r6.w, r7.z
                    mov r8.x, -r7.y
                    add r8.x, r6.w, r8.x
                    add r8.x, r3.w, r8.x
                    add r7.z, r7.z, r8.x
                    div r7.z, r7.w, r7.z  // t<0:NaN:Inf>
                    mul r7.zw, r2.xxxy, r7.zzzz
                    add r6.xy, r5.zwzz, r7.zwzz  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r2.w, r7.x  // sampleIndex<0>
                
                #line 143
                  else 
                
                #line 156
                    iadd r2.w, r2.w, l(1)  // sampleIndex<0>
                    mov r5.zw, r5.xxxy  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r6.z, r3.w  // prevRayY<0:NaN:Inf>
                    mov r6.w, r7.y  // prevHeight<0:Inf>
                    add r5.xy, r2.xyxx, r5.xyxx  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                    mov r7.y, -r2.z
                    add r3.w, r3.w, r7.y  // currRayY<0:NaN:Inf>
                
                #line 143
                  endif 
                
                #line 138
                endloop 
                
                #line 170
                add r2.xy, r6.xyxx, v4.xyxx  // parallaxTex<0:NaN:Inf,1:NaN:Inf>
                
                #line 181
                sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r2.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 196
                sample_indexable(texture2d)(float,float,float,float) r2.xyz, r2.xyxx, t1.xyzw, s0
                mov r2.xyz, r2.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                nop 
                mov r2.xyz, r2.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                mov r5.xyz, v3.xyzx  // tangentW<0,1,2>
                
                #line 206 "LightHelper.fx"
                mul r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
                add r2.xyz, r2.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // normalT<0:Inf,1:Inf,2:Inf>
                
                #line 209
                mov r3.xyz, r3.xyzx  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r1.w, r5.zxyz, r3.xyzx
                mul r6.xyz, r3.yzxy, r1.wwww
                mov r6.xyz, -r6.xyzx
                add r5.xyz, r5.xyzx, r6.xyzx
                dp3 r1.w, r5.xyzx, r5.xyzx
                rsq r1.w, r1.w
                mul r5.xyz, r1.wwww, r5.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r6.xyz, r5.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r7.xyz, r3.zxyz, r6.yzxy
                mul r3.xyz, r3.xyzx, r6.xyzx
                mov r3.xyz, -r3.xyzx
                add r3.xyz, r3.xyzx, r7.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                mul r5.xyz, r2.xxxx, r5.xyzx
                mul r2.xyw, r2.yyyy, r3.xyxz
                add r2.xyw, r2.xyxw, r5.xyxz
                mul r0.xyz, r0.xyzx, r2.zzzz
                add r0.xyz, r0.xyzx, r2.xywx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // NormalSampleToWorldSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 197 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, r0.xyzx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r2.xyz, cb1[16].xyzx  // mat<0,1,2>
                mov r3.xyz, cb1[17].xyzx  // mat<4,5,6>
                mov r5.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r6.xyz, r2.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r9.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r9.xyz, -r9.xyzx
                dp3 r3.w, r9.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r10.xyz, r0.xyzx, r3.wwww
                add r9.xyz, r9.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r3.w, r9.xyzx, r1.xyzx
                max r3.w, r3.w, l(0.000000)
                log r3.w, r3.w
                mul r3.w, r3.w, r5.w
                exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                mul r9.xyz, r3.xyzx, r1.wwww
                mul r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r9.xyz, r5.xyzx, r3.wwww
                mul r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r7.xyz, r2.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r8.xyz, r2.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                add r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r9.xyz, cb0[4].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[5].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[6].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[7].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r2.xyz, r2.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r9.xyz, -r12.xyzx
                dp3 r3.w, r9.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r0.xyz, r0.xyzx, r3.wwww
                add r0.xyz, r9.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r5.w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                mul r1.xyz, r3.xyzx, r1.wwww
                mul r1.xyz, r10.xyzx, r1.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r0.xyz, r5.xyzx, r0.xxxx
                mul r0.xyz, r11.xyzx, r0.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r1.xyz, r2.wwww, r1.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r0.xyz, r2.wwww, r0.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r2.xyz, r2.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r1.xyz, r1.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r2.xyz, r2.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r1.xyz, r1.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r0.xyz, r0.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 224
                add r1.xyz, r1.xyzx, r2.xyzx
                mul r1.xyz, r1.xyzx, r4.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 242
                mov r1.x, -cb0[12].w
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[13].x
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 245
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[14].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 249
                mul r0.w, r4.w, cb1[17].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 190 instruction slots used
                            
            };
        }

    }

    technique11 Light3TexFog
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //   float gHeightScale;                // Offset:  320 Size:     4 [unused]
                //   int gMinSampleCount;               // Offset:  324 Size:     4 [unused]
                //   int gMaxSampleCount;               // Offset:  328 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_temps 6
                
                #line 64 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                dp3 r3.x, v3.xyzx, cb0[0].xyzx  // vout<10:NaN:Inf>
                dp3 r3.y, v3.xyzx, cb0[1].xyzx  // vout<11:NaN:Inf>
                dp3 r3.z, v3.xyzx, cb0[2].xyzx  // vout<12:NaN:Inf>
                
                #line 69
                dp4 r4.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 72
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r5.x, r0.xyzw, cb0[12].xyzw  // vout<13:NaN:Inf>
                dp4 r5.y, r0.xyzw, cb0[13].xyzw  // vout<14:NaN:Inf>
                mov o0.xyzw, r4.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xyz, r3.xyzx  // VS<10:NaN:Inf,11:NaN:Inf,12:NaN:Inf>
                mov o4.xy, r5.xyxx  // VS<13:NaN:Inf,14:NaN:Inf>
                ret 
                // Approximately 25 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4
                //   float gFogRange;                   // Offset:  208 Size:     4
                //   float4 gFogColor;                  // Offset:  224 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //   float gHeightScale;                // Offset:  320 Size:     4
                //   int gMinSampleCount;               // Offset:  324 Size:     4
                //   int gMaxSampleCount;               // Offset:  328 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gNormalMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[15], immediateIndexed
                dcl_constantbuffer cb1[21], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_output o0.xyzw
                dcl_temps 14
                
                #line 85 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 88
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 91
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 94
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                mov r2.xyz, -r1.xyzx  // viewDirW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 103
                mov r3.xyz, r0.zxyz  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r1.w, v3.zxyz, r3.xyzx
                mul r4.xyz, r3.yzxy, r1.wwww
                mov r4.xyz, -r4.xyzx
                add r4.xyz, r4.xyzx, v3.xyzx
                dp3 r1.w, r4.xyzx, r4.xyzx
                rsq r1.w, r1.w
                mul r4.xyz, r1.wwww, r4.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r4.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r6.xyz, r3.zxyz, r5.yzxy
                mul r5.xyz, r3.xyzx, r5.xyzx
                mov r5.xyz, -r5.xyzx
                add r5.xyz, r5.xyzx, r6.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 109
                dp3 r4.x, r2.xyzx, r4.xyzx  // viewDirTS<0:NaN:Inf>
                dp3 r4.y, r2.xyzx, r5.xyzx  // viewDirTS<1:NaN:Inf>
                dp3 r1.w, r2.xyzx, r0.xyzx  // viewDirTS<2:NaN:Inf>
                mov r2.xy, -r4.xyxx
                mul r2.xy, r2.xyxx, cb1[20].xxxx
                div r2.xy, r2.xyxx, r1.wwww  // maxParallaxOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 116
                itof r1.w, cb1[20].z
                itof r2.z, cb1[20].y
                dp3 r2.w, r1.xyzx, r0.xyzx
                mov r3.w, -r1.w
                add r2.z, r2.z, r3.w
                mul r2.z, r2.z, r2.w
                add r1.w, r1.w, r2.z
                ftoi r1.w, r1.w  // sampleCount<0>
                itof r2.z, r1.w
                div r2.z, l(1.000000), r2.z  // yStep<0:Inf>
                mul r2.xy, r2.zzzz, r2.xyxx  // texStep<0:NaN:Inf,1:NaN:Inf>
                
                #line 125
                deriv_rtx_coarse r4.xy, v4.xyxx  // dx<0:Inf,1:Inf>
                deriv_rty_coarse r4.zw, v4.xxxy  // dy<0:Inf,1:Inf>
                
                #line 138
                mov r5.xy, l(0,0,0,0)  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r5.zw, l(0,0,0,0)  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r6.xy, l(0,0,0,0)  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r2.w, l(0)  // sampleIndex<0>
                mov r3.w, l(1.000000)  // currRayY<0:NaN:Inf>
                mov r6.z, l(1.000000)  // prevRayY<0:NaN:Inf>
                mov r6.w, l(0)  // prevHeight<0:Inf>
                loop 
                  iadd r7.x, r1.w, l(1)
                  ilt r7.y, r2.w, r7.x
                  breakc_z r7.y
                  add r7.yz, r5.xxyx, v4.xxyx
                  sample_d_indexable(texture2d)(float,float,float,float) r7.y, r7.yzyy, t1.xwyz, s0, r4.xyxx, r4.zwzz  // currHeight<0:Inf>
                
                #line 143
                  lt r7.z, r3.w, r7.y
                  if_nz r7.z
                
                #line 147
                    mov r7.z, -r6.z
                    add r7.w, r6.w, r7.z
                    mov r8.x, -r7.y
                    add r8.x, r6.w, r8.x
                    add r8.x, r3.w, r8.x
                    add r7.z, r7.z, r8.x
                    div r7.z, r7.w, r7.z  // t<0:NaN:Inf>
                    mul r7.zw, r2.xxxy, r7.zzzz
                    add r6.xy, r5.zwzz, r7.zwzz  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r2.w, r7.x  // sampleIndex<0>
                
                #line 143
                  else 
                
                #line 156
                    iadd r2.w, r2.w, l(1)  // sampleIndex<0>
                    mov r5.zw, r5.xxxy  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r6.z, r3.w  // prevRayY<0:NaN:Inf>
                    mov r6.w, r7.y  // prevHeight<0:Inf>
                    add r5.xy, r2.xyxx, r5.xyxx  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                    mov r7.y, -r2.z
                    add r3.w, r3.w, r7.y  // currRayY<0:NaN:Inf>
                
                #line 143
                  endif 
                
                #line 138
                endloop 
                
                #line 170
                add r2.xy, r6.xyxx, v4.xyxx  // parallaxTex<0:NaN:Inf,1:NaN:Inf>
                
                #line 181
                sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r2.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 196
                sample_indexable(texture2d)(float,float,float,float) r2.xyz, r2.xyxx, t1.xyzw, s0
                mov r2.xyz, r2.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                nop 
                mov r2.xyz, r2.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                mov r5.xyz, v3.xyzx  // tangentW<0,1,2>
                
                #line 206 "LightHelper.fx"
                mul r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
                add r2.xyz, r2.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // normalT<0:Inf,1:Inf,2:Inf>
                
                #line 209
                mov r3.xyz, r3.xyzx  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r1.w, r5.zxyz, r3.xyzx
                mul r6.xyz, r3.yzxy, r1.wwww
                mov r6.xyz, -r6.xyzx
                add r5.xyz, r5.xyzx, r6.xyzx
                dp3 r1.w, r5.xyzx, r5.xyzx
                rsq r1.w, r1.w
                mul r5.xyz, r1.wwww, r5.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r6.xyz, r5.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r7.xyz, r3.zxyz, r6.yzxy
                mul r3.xyz, r3.xyzx, r6.xyzx
                mov r3.xyz, -r3.xyzx
                add r3.xyz, r3.xyzx, r7.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                mul r5.xyz, r2.xxxx, r5.xyzx
                mul r2.xyw, r2.yyyy, r3.xyxz
                add r2.xyw, r2.xyxw, r5.xyxz
                mul r0.xyz, r0.xyzx, r2.zzzz
                add r0.xyz, r0.xyzx, r2.xywx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // NormalSampleToWorldSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 197 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, r0.xyzx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r2.xyz, cb1[16].xyzx  // mat<0,1,2>
                mov r3.xyz, cb1[17].xyzx  // mat<4,5,6>
                mov r5.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r6.xyz, r2.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r9.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r9.xyz, -r9.xyzx
                dp3 r3.w, r9.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r10.xyz, r0.xyzx, r3.wwww
                add r9.xyz, r9.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r3.w, r9.xyzx, r1.xyzx
                max r3.w, r3.w, l(0.000000)
                log r3.w, r3.w
                mul r3.w, r3.w, r5.w
                exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                mul r9.xyz, r3.xyzx, r1.wwww
                mul r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r9.xyz, r5.xyzx, r3.wwww
                mul r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r7.xyz, r2.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r8.xyz, r2.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                add r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r9.xyz, cb0[4].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[5].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[6].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[7].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r9.xyz, r2.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r12.xyz, -r12.xyzx
                dp3 r3.w, r12.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r13.xyz, r0.xyzx, r3.wwww
                add r12.xyz, r12.xyzx, r13.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r3.w, r12.xyzx, r1.xyzx
                max r3.w, r3.w, l(0.000000)
                log r3.w, r3.w
                mul r3.w, r3.w, r5.w
                exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                mul r12.xyz, r3.xyzx, r1.wwww
                mul r10.xyz, r10.xyzx, r12.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r12.xyz, r5.xyzx, r3.wwww
                mul r11.xyz, r11.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r10.xyz, r2.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r11.xyz, r2.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r7.xyz, r7.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r8.xyz, r8.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r9.xyz, cb0[8].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[9].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[10].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[11].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r2.xyz, r2.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r9.xyz, -r12.xyzx
                dp3 r3.w, r9.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r0.xyz, r0.xyzx, r3.wwww
                add r0.xyz, r9.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r5.w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                mul r1.xyz, r3.xyzx, r1.wwww
                mul r1.xyz, r10.xyzx, r1.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r0.xyz, r5.xyzx, r0.xxxx
                mul r0.xyz, r11.xyzx, r0.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r1.xyz, r2.wwww, r1.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r0.xyz, r2.wwww, r0.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r2.xyz, r2.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r1.xyz, r1.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r2.xyz, r2.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r1.xyz, r1.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r0.xyz, r0.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 224
                add r1.xyz, r1.xyzx, r2.xyzx
                mul r1.xyz, r1.xyzx, r4.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 242
                mov r1.x, -cb0[12].w
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[13].x
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 245
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[14].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 249
                mul r0.w, r4.w, cb1[17].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 222 instruction slots used
                            
            };
        }

    }

    technique11 Light0TexAlphaClipFog
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //   float gHeightScale;                // Offset:  320 Size:     4 [unused]
                //   int gMinSampleCount;               // Offset:  324 Size:     4 [unused]
                //   int gMaxSampleCount;               // Offset:  328 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_temps 6
                
                #line 64 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                dp3 r3.x, v3.xyzx, cb0[0].xyzx  // vout<10:NaN:Inf>
                dp3 r3.y, v3.xyzx, cb0[1].xyzx  // vout<11:NaN:Inf>
                dp3 r3.z, v3.xyzx, cb0[2].xyzx  // vout<12:NaN:Inf>
                
                #line 69
                dp4 r4.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 72
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r5.x, r0.xyzw, cb0[12].xyzw  // vout<13:NaN:Inf>
                dp4 r5.y, r0.xyzw, cb0[13].xyzw  // vout<14:NaN:Inf>
                mov o0.xyzw, r4.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xyz, r3.xyzx  // VS<10:NaN:Inf,11:NaN:Inf,12:NaN:Inf>
                mov o4.xy, r5.xyxx  // VS<13:NaN:Inf,14:NaN:Inf>
                ret 
                // Approximately 25 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192 [unused]
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4
                //   float gFogRange;                   // Offset:  208 Size:     4
                //   float4 gFogColor;                  // Offset:  224 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //   float gHeightScale;                // Offset:  320 Size:     4
                //   int gMinSampleCount;               // Offset:  324 Size:     4
                //   int gMaxSampleCount;               // Offset:  328 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gNormalMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[15], immediateIndexed
                dcl_constantbuffer cb1[21], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_output o0.xyzw
                dcl_temps 7
                
                #line 85 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 88
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 91
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 94
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                mov r2.xyz, -r1.xyzx  // viewDirW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 103
                mov r3.xyz, r0.zxyz  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r1.w, v3.zxyz, r3.xyzx
                mul r4.xyz, r3.yzxy, r1.wwww
                mov r4.xyz, -r4.xyzx
                add r4.xyz, r4.xyzx, v3.xyzx
                dp3 r1.w, r4.xyzx, r4.xyzx
                rsq r1.w, r1.w
                mul r4.xyz, r1.wwww, r4.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r4.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r6.xyz, r3.zxyz, r5.yzxy
                mul r3.xyz, r3.xyzx, r5.xyzx
                mov r3.xyz, -r3.xyzx
                add r3.xyz, r3.xyzx, r6.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 109
                dp3 r4.x, r2.xyzx, r4.xyzx  // viewDirTS<0:NaN:Inf>
                dp3 r4.y, r2.xyzx, r3.xyzx  // viewDirTS<1:NaN:Inf>
                dp3 r1.w, r2.xyzx, r0.xyzx  // viewDirTS<2:NaN:Inf>
                mov r2.xy, -r4.xyxx
                mul r2.xy, r2.xyxx, cb1[20].xxxx
                div r2.xy, r2.xyxx, r1.wwww  // maxParallaxOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 116
                itof r1.w, cb1[20].z
                itof r2.z, cb1[20].y
                dp3 r0.x, r1.xyzx, r0.xyzx
                mov r0.y, -r1.w
                add r0.y, r0.y, r2.z
                mul r0.x, r0.y, r0.x
                add r0.x, r0.x, r1.w
                ftoi r0.x, r0.x  // sampleCount<0>
                itof r0.y, r0.x
                div r0.y, l(1.000000), r0.y  // yStep<0:Inf>
                mul r1.xy, r0.yyyy, r2.xyxx  // texStep<0:NaN:Inf,1:NaN:Inf>
                
                #line 125
                deriv_rtx_coarse r1.zw, v4.xxxy  // dx<0:Inf,1:Inf>
                deriv_rty_coarse r2.xy, v4.xyxx  // dy<0:Inf,1:Inf>
                
                #line 138
                mov r2.zw, l(0,0,0,0)  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r3.xy, l(0,0,0,0)  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r3.zw, l(0,0,0,0)  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r0.z, l(0)  // sampleIndex<0>
                mov r4.x, l(1.000000)  // currRayY<0:NaN:Inf>
                mov r4.y, l(1.000000)  // prevRayY<0:NaN:Inf>
                mov r4.z, l(0)  // prevHeight<0:Inf>
                loop 
                  iadd r4.w, r0.x, l(1)
                  ilt r5.x, r0.z, r4.w
                  breakc_z r5.x
                  add r5.xy, r2.zwzz, v4.xyxx
                  sample_d_indexable(texture2d)(float,float,float,float) r5.x, r5.xyxx, t1.wxyz, s0, r1.zwzz, r2.xyxx  // currHeight<0:Inf>
                
                #line 143
                  lt r5.y, r4.x, r5.x
                  if_nz r5.y
                
                #line 147
                    mov r5.y, -r4.y
                    add r5.z, r4.z, r5.y
                    mov r5.w, -r5.x
                    add r5.w, r4.z, r5.w
                    add r5.w, r4.x, r5.w
                    add r5.y, r5.y, r5.w
                    div r5.y, r5.z, r5.y  // t<0:NaN:Inf>
                    mul r5.yz, r1.xxyx, r5.yyyy
                    add r3.zw, r3.xxxy, r5.yyyz  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r0.z, r4.w  // sampleIndex<0>
                
                #line 143
                  else 
                
                #line 156
                    iadd r0.z, r0.z, l(1)  // sampleIndex<0>
                    mov r3.xy, r2.zwzz  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r4.y, r4.x  // prevRayY<0:NaN:Inf>
                    mov r4.z, r5.x  // prevHeight<0:Inf>
                    add r2.zw, r1.xxxy, r2.zzzw  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                    mov r5.x, -r0.y
                    add r4.x, r4.x, r5.x  // currRayY<0:NaN:Inf>
                
                #line 143
                  endif 
                
                #line 138
                endloop 
                
                #line 170
                add r0.xy, r3.zwzz, v4.xyxx  // parallaxTex<0:NaN:Inf,1:NaN:Inf>
                
                #line 181
                sample_indexable(texture2d)(float,float,float,float) r1.xyzw, r0.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 188
                add r0.x, r1.w, l(-0.100000)
                lt r0.x, r0.x, l(0.000000)
                and r0.x, r0.x, l(-1)
                discard r0.x
                
                #line 197
                nop 
                
                #line 203
                mov r1.xyz, r1.xyzx  // litColor<0:Inf,1:Inf,2:Inf>
                
                #line 242
                mov r0.x, -cb0[12].w
                add r0.x, r0.x, r0.w
                div r0.x, r0.x, cb0[13].x
                max r0.x, r0.x, l(0.000000)
                min r0.x, r0.x, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 245
                mov r0.yzw, -r1.xxyz
                add r0.yzw, r0.yyzw, cb0[14].xxyz
                mul r0.xyz, r0.yzwy, r0.xxxx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 249
                mul r0.w, r1.w, cb1[17].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 97 instruction slots used
                            
            };
        }

    }

    technique11 Light1TexAlphaClipFog
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //   float gHeightScale;                // Offset:  320 Size:     4 [unused]
                //   int gMinSampleCount;               // Offset:  324 Size:     4 [unused]
                //   int gMaxSampleCount;               // Offset:  328 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_temps 6
                
                #line 64 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                dp3 r3.x, v3.xyzx, cb0[0].xyzx  // vout<10:NaN:Inf>
                dp3 r3.y, v3.xyzx, cb0[1].xyzx  // vout<11:NaN:Inf>
                dp3 r3.z, v3.xyzx, cb0[2].xyzx  // vout<12:NaN:Inf>
                
                #line 69
                dp4 r4.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 72
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r5.x, r0.xyzw, cb0[12].xyzw  // vout<13:NaN:Inf>
                dp4 r5.y, r0.xyzw, cb0[13].xyzw  // vout<14:NaN:Inf>
                mov o0.xyzw, r4.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xyz, r3.xyzx  // VS<10:NaN:Inf,11:NaN:Inf,12:NaN:Inf>
                mov o4.xy, r5.xyxx  // VS<13:NaN:Inf,14:NaN:Inf>
                ret 
                // Approximately 25 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4
                //   float gFogRange;                   // Offset:  208 Size:     4
                //   float4 gFogColor;                  // Offset:  224 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //   float gHeightScale;                // Offset:  320 Size:     4
                //   int gMinSampleCount;               // Offset:  324 Size:     4
                //   int gMaxSampleCount;               // Offset:  328 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gNormalMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[15], immediateIndexed
                dcl_constantbuffer cb1[21], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_output o0.xyzw
                dcl_temps 10
                
                #line 85 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 88
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 91
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 94
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                mov r2.xyz, -r1.xyzx  // viewDirW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 103
                mov r3.xyz, r0.zxyz  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r1.w, v3.zxyz, r3.xyzx
                mul r4.xyz, r3.yzxy, r1.wwww
                mov r4.xyz, -r4.xyzx
                add r4.xyz, r4.xyzx, v3.xyzx
                dp3 r1.w, r4.xyzx, r4.xyzx
                rsq r1.w, r1.w
                mul r4.xyz, r1.wwww, r4.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r4.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r6.xyz, r3.zxyz, r5.yzxy
                mul r5.xyz, r3.xyzx, r5.xyzx
                mov r5.xyz, -r5.xyzx
                add r5.xyz, r5.xyzx, r6.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 109
                dp3 r4.x, r2.xyzx, r4.xyzx  // viewDirTS<0:NaN:Inf>
                dp3 r4.y, r2.xyzx, r5.xyzx  // viewDirTS<1:NaN:Inf>
                dp3 r1.w, r2.xyzx, r0.xyzx  // viewDirTS<2:NaN:Inf>
                mov r2.xy, -r4.xyxx
                mul r2.xy, r2.xyxx, cb1[20].xxxx
                div r2.xy, r2.xyxx, r1.wwww  // maxParallaxOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 116
                itof r1.w, cb1[20].z
                itof r2.z, cb1[20].y
                dp3 r2.w, r1.xyzx, r0.xyzx
                mov r3.w, -r1.w
                add r2.z, r2.z, r3.w
                mul r2.z, r2.z, r2.w
                add r1.w, r1.w, r2.z
                ftoi r1.w, r1.w  // sampleCount<0>
                itof r2.z, r1.w
                div r2.z, l(1.000000), r2.z  // yStep<0:Inf>
                mul r2.xy, r2.zzzz, r2.xyxx  // texStep<0:NaN:Inf,1:NaN:Inf>
                
                #line 125
                deriv_rtx_coarse r4.xy, v4.xyxx  // dx<0:Inf,1:Inf>
                deriv_rty_coarse r4.zw, v4.xxxy  // dy<0:Inf,1:Inf>
                
                #line 138
                mov r5.xy, l(0,0,0,0)  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r5.zw, l(0,0,0,0)  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r6.xy, l(0,0,0,0)  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r2.w, l(0)  // sampleIndex<0>
                mov r3.w, l(1.000000)  // currRayY<0:NaN:Inf>
                mov r6.z, l(1.000000)  // prevRayY<0:NaN:Inf>
                mov r6.w, l(0)  // prevHeight<0:Inf>
                loop 
                  iadd r7.x, r1.w, l(1)
                  ilt r7.y, r2.w, r7.x
                  breakc_z r7.y
                  add r7.yz, r5.xxyx, v4.xxyx
                  sample_d_indexable(texture2d)(float,float,float,float) r7.y, r7.yzyy, t1.xwyz, s0, r4.xyxx, r4.zwzz  // currHeight<0:Inf>
                
                #line 143
                  lt r7.z, r3.w, r7.y
                  if_nz r7.z
                
                #line 147
                    mov r7.z, -r6.z
                    add r7.w, r6.w, r7.z
                    mov r8.x, -r7.y
                    add r8.x, r6.w, r8.x
                    add r8.x, r3.w, r8.x
                    add r7.z, r7.z, r8.x
                    div r7.z, r7.w, r7.z  // t<0:NaN:Inf>
                    mul r7.zw, r2.xxxy, r7.zzzz
                    add r6.xy, r5.zwzz, r7.zwzz  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r2.w, r7.x  // sampleIndex<0>
                
                #line 143
                  else 
                
                #line 156
                    iadd r2.w, r2.w, l(1)  // sampleIndex<0>
                    mov r5.zw, r5.xxxy  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r6.z, r3.w  // prevRayY<0:NaN:Inf>
                    mov r6.w, r7.y  // prevHeight<0:Inf>
                    add r5.xy, r2.xyxx, r5.xyxx  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                    mov r7.y, -r2.z
                    add r3.w, r3.w, r7.y  // currRayY<0:NaN:Inf>
                
                #line 143
                  endif 
                
                #line 138
                endloop 
                
                #line 170
                add r2.xy, r6.xyxx, v4.xyxx  // parallaxTex<0:NaN:Inf,1:NaN:Inf>
                
                #line 181
                sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r2.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 188
                add r1.w, r4.w, l(-0.100000)
                lt r1.w, r1.w, l(0.000000)
                and r1.w, r1.w, l(-1)
                discard r1.w
                
                #line 196
                sample_indexable(texture2d)(float,float,float,float) r2.xyz, r2.xyxx, t1.xyzw, s0
                mov r2.xyz, r2.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                nop 
                mov r2.xyz, r2.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                mov r5.xyz, v3.xyzx  // tangentW<0,1,2>
                
                #line 206 "LightHelper.fx"
                mul r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
                add r2.xyz, r2.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // normalT<0:Inf,1:Inf,2:Inf>
                
                #line 209
                mov r3.xyz, r3.xyzx  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r1.w, r5.zxyz, r3.xyzx
                mul r6.xyz, r3.yzxy, r1.wwww
                mov r6.xyz, -r6.xyzx
                add r5.xyz, r5.xyzx, r6.xyzx
                dp3 r1.w, r5.xyzx, r5.xyzx
                rsq r1.w, r1.w
                mul r5.xyz, r1.wwww, r5.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r6.xyz, r5.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r7.xyz, r3.zxyz, r6.yzxy
                mul r3.xyz, r3.xyzx, r6.xyzx
                mov r3.xyz, -r3.xyzx
                add r3.xyz, r3.xyzx, r7.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                mul r5.xyz, r2.xxxx, r5.xyzx
                mul r2.xyw, r2.yyyy, r3.xyxz
                add r2.xyw, r2.xyxw, r5.xyxz
                mul r0.xyz, r0.xyzx, r2.zzzz
                add r0.xyz, r0.xyzx, r2.xywx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // NormalSampleToWorldSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 197 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, r0.xyzx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r2.xyz, cb1[16].xyzx  // mat<0,1,2>
                mov r3.xyz, cb1[17].xyzx  // mat<4,5,6>
                mov r5.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r2.xyz, r2.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r9.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r6.xyz, -r9.xyzx
                dp3 r3.w, r6.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r0.xyz, r0.xyzx, r3.wwww
                add r0.xyz, r6.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r5.w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                mul r1.xyz, r3.xyzx, r1.wwww
                mul r1.xyz, r7.xyzx, r1.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r0.xyz, r5.xyzx, r0.xxxx
                mul r0.xyz, r8.xyzx, r0.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r1.xyz, r2.wwww, r1.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r0.xyz, r2.wwww, r0.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r2.xyz, r2.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r1.xyz, r1.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                add r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 224
                add r1.xyz, r1.xyzx, r2.xyzx
                mul r1.xyz, r1.xyzx, r4.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 242
                mov r1.x, -cb0[12].w
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[13].x
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 245
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[14].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 249
                mul r0.w, r4.w, cb1[17].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 162 instruction slots used
                            
            };
        }

    }

    technique11 Light2TexAlphaClipFog
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //   float gHeightScale;                // Offset:  320 Size:     4 [unused]
                //   int gMinSampleCount;               // Offset:  324 Size:     4 [unused]
                //   int gMaxSampleCount;               // Offset:  328 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_temps 6
                
                #line 64 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                dp3 r3.x, v3.xyzx, cb0[0].xyzx  // vout<10:NaN:Inf>
                dp3 r3.y, v3.xyzx, cb0[1].xyzx  // vout<11:NaN:Inf>
                dp3 r3.z, v3.xyzx, cb0[2].xyzx  // vout<12:NaN:Inf>
                
                #line 69
                dp4 r4.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 72
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r5.x, r0.xyzw, cb0[12].xyzw  // vout<13:NaN:Inf>
                dp4 r5.y, r0.xyzw, cb0[13].xyzw  // vout<14:NaN:Inf>
                mov o0.xyzw, r4.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xyz, r3.xyzx  // VS<10:NaN:Inf,11:NaN:Inf,12:NaN:Inf>
                mov o4.xy, r5.xyxx  // VS<13:NaN:Inf,14:NaN:Inf>
                ret 
                // Approximately 25 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4
                //   float gFogRange;                   // Offset:  208 Size:     4
                //   float4 gFogColor;                  // Offset:  224 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //   float gHeightScale;                // Offset:  320 Size:     4
                //   int gMinSampleCount;               // Offset:  324 Size:     4
                //   int gMaxSampleCount;               // Offset:  328 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gNormalMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[15], immediateIndexed
                dcl_constantbuffer cb1[21], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_output o0.xyzw
                dcl_temps 13
                
                #line 85 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 88
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 91
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 94
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                mov r2.xyz, -r1.xyzx  // viewDirW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 103
                mov r3.xyz, r0.zxyz  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r1.w, v3.zxyz, r3.xyzx
                mul r4.xyz, r3.yzxy, r1.wwww
                mov r4.xyz, -r4.xyzx
                add r4.xyz, r4.xyzx, v3.xyzx
                dp3 r1.w, r4.xyzx, r4.xyzx
                rsq r1.w, r1.w
                mul r4.xyz, r1.wwww, r4.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r4.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r6.xyz, r3.zxyz, r5.yzxy
                mul r5.xyz, r3.xyzx, r5.xyzx
                mov r5.xyz, -r5.xyzx
                add r5.xyz, r5.xyzx, r6.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 109
                dp3 r4.x, r2.xyzx, r4.xyzx  // viewDirTS<0:NaN:Inf>
                dp3 r4.y, r2.xyzx, r5.xyzx  // viewDirTS<1:NaN:Inf>
                dp3 r1.w, r2.xyzx, r0.xyzx  // viewDirTS<2:NaN:Inf>
                mov r2.xy, -r4.xyxx
                mul r2.xy, r2.xyxx, cb1[20].xxxx
                div r2.xy, r2.xyxx, r1.wwww  // maxParallaxOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 116
                itof r1.w, cb1[20].z
                itof r2.z, cb1[20].y
                dp3 r2.w, r1.xyzx, r0.xyzx
                mov r3.w, -r1.w
                add r2.z, r2.z, r3.w
                mul r2.z, r2.z, r2.w
                add r1.w, r1.w, r2.z
                ftoi r1.w, r1.w  // sampleCount<0>
                itof r2.z, r1.w
                div r2.z, l(1.000000), r2.z  // yStep<0:Inf>
                mul r2.xy, r2.zzzz, r2.xyxx  // texStep<0:NaN:Inf,1:NaN:Inf>
                
                #line 125
                deriv_rtx_coarse r4.xy, v4.xyxx  // dx<0:Inf,1:Inf>
                deriv_rty_coarse r4.zw, v4.xxxy  // dy<0:Inf,1:Inf>
                
                #line 138
                mov r5.xy, l(0,0,0,0)  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r5.zw, l(0,0,0,0)  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r6.xy, l(0,0,0,0)  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r2.w, l(0)  // sampleIndex<0>
                mov r3.w, l(1.000000)  // currRayY<0:NaN:Inf>
                mov r6.z, l(1.000000)  // prevRayY<0:NaN:Inf>
                mov r6.w, l(0)  // prevHeight<0:Inf>
                loop 
                  iadd r7.x, r1.w, l(1)
                  ilt r7.y, r2.w, r7.x
                  breakc_z r7.y
                  add r7.yz, r5.xxyx, v4.xxyx
                  sample_d_indexable(texture2d)(float,float,float,float) r7.y, r7.yzyy, t1.xwyz, s0, r4.xyxx, r4.zwzz  // currHeight<0:Inf>
                
                #line 143
                  lt r7.z, r3.w, r7.y
                  if_nz r7.z
                
                #line 147
                    mov r7.z, -r6.z
                    add r7.w, r6.w, r7.z
                    mov r8.x, -r7.y
                    add r8.x, r6.w, r8.x
                    add r8.x, r3.w, r8.x
                    add r7.z, r7.z, r8.x
                    div r7.z, r7.w, r7.z  // t<0:NaN:Inf>
                    mul r7.zw, r2.xxxy, r7.zzzz
                    add r6.xy, r5.zwzz, r7.zwzz  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r2.w, r7.x  // sampleIndex<0>
                
                #line 143
                  else 
                
                #line 156
                    iadd r2.w, r2.w, l(1)  // sampleIndex<0>
                    mov r5.zw, r5.xxxy  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r6.z, r3.w  // prevRayY<0:NaN:Inf>
                    mov r6.w, r7.y  // prevHeight<0:Inf>
                    add r5.xy, r2.xyxx, r5.xyxx  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                    mov r7.y, -r2.z
                    add r3.w, r3.w, r7.y  // currRayY<0:NaN:Inf>
                
                #line 143
                  endif 
                
                #line 138
                endloop 
                
                #line 170
                add r2.xy, r6.xyxx, v4.xyxx  // parallaxTex<0:NaN:Inf,1:NaN:Inf>
                
                #line 181
                sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r2.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 188
                add r1.w, r4.w, l(-0.100000)
                lt r1.w, r1.w, l(0.000000)
                and r1.w, r1.w, l(-1)
                discard r1.w
                
                #line 196
                sample_indexable(texture2d)(float,float,float,float) r2.xyz, r2.xyxx, t1.xyzw, s0
                mov r2.xyz, r2.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                nop 
                mov r2.xyz, r2.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                mov r5.xyz, v3.xyzx  // tangentW<0,1,2>
                
                #line 206 "LightHelper.fx"
                mul r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
                add r2.xyz, r2.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // normalT<0:Inf,1:Inf,2:Inf>
                
                #line 209
                mov r3.xyz, r3.xyzx  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r1.w, r5.zxyz, r3.xyzx
                mul r6.xyz, r3.yzxy, r1.wwww
                mov r6.xyz, -r6.xyzx
                add r5.xyz, r5.xyzx, r6.xyzx
                dp3 r1.w, r5.xyzx, r5.xyzx
                rsq r1.w, r1.w
                mul r5.xyz, r1.wwww, r5.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r6.xyz, r5.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r7.xyz, r3.zxyz, r6.yzxy
                mul r3.xyz, r3.xyzx, r6.xyzx
                mov r3.xyz, -r3.xyzx
                add r3.xyz, r3.xyzx, r7.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                mul r5.xyz, r2.xxxx, r5.xyzx
                mul r2.xyw, r2.yyyy, r3.xyxz
                add r2.xyw, r2.xyxw, r5.xyxz
                mul r0.xyz, r0.xyzx, r2.zzzz
                add r0.xyz, r0.xyzx, r2.xywx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // NormalSampleToWorldSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 197 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, r0.xyzx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r2.xyz, cb1[16].xyzx  // mat<0,1,2>
                mov r3.xyz, cb1[17].xyzx  // mat<4,5,6>
                mov r5.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r6.xyz, r2.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r9.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r9.xyz, -r9.xyzx
                dp3 r3.w, r9.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r10.xyz, r0.xyzx, r3.wwww
                add r9.xyz, r9.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r3.w, r9.xyzx, r1.xyzx
                max r3.w, r3.w, l(0.000000)
                log r3.w, r3.w
                mul r3.w, r3.w, r5.w
                exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                mul r9.xyz, r3.xyzx, r1.wwww
                mul r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r9.xyz, r5.xyzx, r3.wwww
                mul r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r7.xyz, r2.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r8.xyz, r2.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                add r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r9.xyz, cb0[4].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[5].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[6].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[7].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r2.xyz, r2.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r9.xyz, -r12.xyzx
                dp3 r3.w, r9.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r0.xyz, r0.xyzx, r3.wwww
                add r0.xyz, r9.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r5.w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                mul r1.xyz, r3.xyzx, r1.wwww
                mul r1.xyz, r10.xyzx, r1.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r0.xyz, r5.xyzx, r0.xxxx
                mul r0.xyz, r11.xyzx, r0.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r1.xyz, r2.wwww, r1.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r0.xyz, r2.wwww, r0.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r2.xyz, r2.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r1.xyz, r1.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r2.xyz, r2.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r1.xyz, r1.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r0.xyz, r0.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 224
                add r1.xyz, r1.xyzx, r2.xyzx
                mul r1.xyz, r1.xyzx, r4.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 242
                mov r1.x, -cb0[12].w
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[13].x
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 245
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[14].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 249
                mul r0.w, r4.w, cb1[17].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 194 instruction slots used
                            
            };
        }

    }

    technique11 Light3TexAlphaClipFog
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //   float gHeightScale;                // Offset:  320 Size:     4 [unused]
                //   int gMinSampleCount;               // Offset:  324 Size:     4 [unused]
                //   int gMaxSampleCount;               // Offset:  328 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_temps 6
                
                #line 64 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                dp3 r3.x, v3.xyzx, cb0[0].xyzx  // vout<10:NaN:Inf>
                dp3 r3.y, v3.xyzx, cb0[1].xyzx  // vout<11:NaN:Inf>
                dp3 r3.z, v3.xyzx, cb0[2].xyzx  // vout<12:NaN:Inf>
                
                #line 69
                dp4 r4.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 72
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r5.x, r0.xyzw, cb0[12].xyzw  // vout<13:NaN:Inf>
                dp4 r5.y, r0.xyzw, cb0[13].xyzw  // vout<14:NaN:Inf>
                mov o0.xyzw, r4.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xyz, r3.xyzx  // VS<10:NaN:Inf,11:NaN:Inf,12:NaN:Inf>
                mov o4.xy, r5.xyxx  // VS<13:NaN:Inf,14:NaN:Inf>
                ret 
                // Approximately 25 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4
                //   float gFogRange;                   // Offset:  208 Size:     4
                //   float4 gFogColor;                  // Offset:  224 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //   float gHeightScale;                // Offset:  320 Size:     4
                //   int gMinSampleCount;               // Offset:  324 Size:     4
                //   int gMaxSampleCount;               // Offset:  328 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gNormalMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[15], immediateIndexed
                dcl_constantbuffer cb1[21], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_output o0.xyzw
                dcl_temps 14
                
                #line 85 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 88
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 91
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 94
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                mov r2.xyz, -r1.xyzx  // viewDirW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 103
                mov r3.xyz, r0.zxyz  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r1.w, v3.zxyz, r3.xyzx
                mul r4.xyz, r3.yzxy, r1.wwww
                mov r4.xyz, -r4.xyzx
                add r4.xyz, r4.xyzx, v3.xyzx
                dp3 r1.w, r4.xyzx, r4.xyzx
                rsq r1.w, r1.w
                mul r4.xyz, r1.wwww, r4.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r4.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r6.xyz, r3.zxyz, r5.yzxy
                mul r5.xyz, r3.xyzx, r5.xyzx
                mov r5.xyz, -r5.xyzx
                add r5.xyz, r5.xyzx, r6.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 109
                dp3 r4.x, r2.xyzx, r4.xyzx  // viewDirTS<0:NaN:Inf>
                dp3 r4.y, r2.xyzx, r5.xyzx  // viewDirTS<1:NaN:Inf>
                dp3 r1.w, r2.xyzx, r0.xyzx  // viewDirTS<2:NaN:Inf>
                mov r2.xy, -r4.xyxx
                mul r2.xy, r2.xyxx, cb1[20].xxxx
                div r2.xy, r2.xyxx, r1.wwww  // maxParallaxOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 116
                itof r1.w, cb1[20].z
                itof r2.z, cb1[20].y
                dp3 r2.w, r1.xyzx, r0.xyzx
                mov r3.w, -r1.w
                add r2.z, r2.z, r3.w
                mul r2.z, r2.z, r2.w
                add r1.w, r1.w, r2.z
                ftoi r1.w, r1.w  // sampleCount<0>
                itof r2.z, r1.w
                div r2.z, l(1.000000), r2.z  // yStep<0:Inf>
                mul r2.xy, r2.zzzz, r2.xyxx  // texStep<0:NaN:Inf,1:NaN:Inf>
                
                #line 125
                deriv_rtx_coarse r4.xy, v4.xyxx  // dx<0:Inf,1:Inf>
                deriv_rty_coarse r4.zw, v4.xxxy  // dy<0:Inf,1:Inf>
                
                #line 138
                mov r5.xy, l(0,0,0,0)  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r5.zw, l(0,0,0,0)  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r6.xy, l(0,0,0,0)  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r2.w, l(0)  // sampleIndex<0>
                mov r3.w, l(1.000000)  // currRayY<0:NaN:Inf>
                mov r6.z, l(1.000000)  // prevRayY<0:NaN:Inf>
                mov r6.w, l(0)  // prevHeight<0:Inf>
                loop 
                  iadd r7.x, r1.w, l(1)
                  ilt r7.y, r2.w, r7.x
                  breakc_z r7.y
                  add r7.yz, r5.xxyx, v4.xxyx
                  sample_d_indexable(texture2d)(float,float,float,float) r7.y, r7.yzyy, t1.xwyz, s0, r4.xyxx, r4.zwzz  // currHeight<0:Inf>
                
                #line 143
                  lt r7.z, r3.w, r7.y
                  if_nz r7.z
                
                #line 147
                    mov r7.z, -r6.z
                    add r7.w, r6.w, r7.z
                    mov r8.x, -r7.y
                    add r8.x, r6.w, r8.x
                    add r8.x, r3.w, r8.x
                    add r7.z, r7.z, r8.x
                    div r7.z, r7.w, r7.z  // t<0:NaN:Inf>
                    mul r7.zw, r2.xxxy, r7.zzzz
                    add r6.xy, r5.zwzz, r7.zwzz  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r2.w, r7.x  // sampleIndex<0>
                
                #line 143
                  else 
                
                #line 156
                    iadd r2.w, r2.w, l(1)  // sampleIndex<0>
                    mov r5.zw, r5.xxxy  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r6.z, r3.w  // prevRayY<0:NaN:Inf>
                    mov r6.w, r7.y  // prevHeight<0:Inf>
                    add r5.xy, r2.xyxx, r5.xyxx  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                    mov r7.y, -r2.z
                    add r3.w, r3.w, r7.y  // currRayY<0:NaN:Inf>
                
                #line 143
                  endif 
                
                #line 138
                endloop 
                
                #line 170
                add r2.xy, r6.xyxx, v4.xyxx  // parallaxTex<0:NaN:Inf,1:NaN:Inf>
                
                #line 181
                sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r2.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 188
                add r1.w, r4.w, l(-0.100000)
                lt r1.w, r1.w, l(0.000000)
                and r1.w, r1.w, l(-1)
                discard r1.w
                
                #line 196
                sample_indexable(texture2d)(float,float,float,float) r2.xyz, r2.xyxx, t1.xyzw, s0
                mov r2.xyz, r2.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                nop 
                mov r2.xyz, r2.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                mov r5.xyz, v3.xyzx  // tangentW<0,1,2>
                
                #line 206 "LightHelper.fx"
                mul r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
                add r2.xyz, r2.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // normalT<0:Inf,1:Inf,2:Inf>
                
                #line 209
                mov r3.xyz, r3.xyzx  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r1.w, r5.zxyz, r3.xyzx
                mul r6.xyz, r3.yzxy, r1.wwww
                mov r6.xyz, -r6.xyzx
                add r5.xyz, r5.xyzx, r6.xyzx
                dp3 r1.w, r5.xyzx, r5.xyzx
                rsq r1.w, r1.w
                mul r5.xyz, r1.wwww, r5.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r6.xyz, r5.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r7.xyz, r3.zxyz, r6.yzxy
                mul r3.xyz, r3.xyzx, r6.xyzx
                mov r3.xyz, -r3.xyzx
                add r3.xyz, r3.xyzx, r7.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                mul r5.xyz, r2.xxxx, r5.xyzx
                mul r2.xyw, r2.yyyy, r3.xyxz
                add r2.xyw, r2.xyxw, r5.xyxz
                mul r0.xyz, r0.xyzx, r2.zzzz
                add r0.xyz, r0.xyzx, r2.xywx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // NormalSampleToWorldSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 197 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, r0.xyzx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r2.xyz, cb1[16].xyzx  // mat<0,1,2>
                mov r3.xyz, cb1[17].xyzx  // mat<4,5,6>
                mov r5.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r6.xyz, r2.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r9.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r9.xyz, -r9.xyzx
                dp3 r3.w, r9.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r10.xyz, r0.xyzx, r3.wwww
                add r9.xyz, r9.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r3.w, r9.xyzx, r1.xyzx
                max r3.w, r3.w, l(0.000000)
                log r3.w, r3.w
                mul r3.w, r3.w, r5.w
                exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                mul r9.xyz, r3.xyzx, r1.wwww
                mul r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r9.xyz, r5.xyzx, r3.wwww
                mul r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r7.xyz, r2.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r8.xyz, r2.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                add r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r9.xyz, cb0[4].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[5].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[6].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[7].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r9.xyz, r2.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r12.xyz, -r12.xyzx
                dp3 r3.w, r12.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r13.xyz, r0.xyzx, r3.wwww
                add r12.xyz, r12.xyzx, r13.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r3.w, r12.xyzx, r1.xyzx
                max r3.w, r3.w, l(0.000000)
                log r3.w, r3.w
                mul r3.w, r3.w, r5.w
                exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                mul r12.xyz, r3.xyzx, r1.wwww
                mul r10.xyz, r10.xyzx, r12.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r12.xyz, r5.xyzx, r3.wwww
                mul r11.xyz, r11.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r10.xyz, r2.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r11.xyz, r2.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r7.xyz, r7.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r8.xyz, r8.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r9.xyz, cb0[8].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[9].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[10].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[11].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r2.xyz, r2.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r9.xyz, -r12.xyzx
                dp3 r3.w, r9.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r0.xyz, r0.xyzx, r3.wwww
                add r0.xyz, r9.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r5.w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                mul r1.xyz, r3.xyzx, r1.wwww
                mul r1.xyz, r10.xyzx, r1.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r0.xyz, r5.xyzx, r0.xxxx
                mul r0.xyz, r11.xyzx, r0.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r1.xyz, r2.wwww, r1.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r0.xyz, r2.wwww, r0.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r2.xyz, r2.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r1.xyz, r1.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r2.xyz, r2.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r1.xyz, r1.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r0.xyz, r0.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 224
                add r1.xyz, r1.xyzx, r2.xyzx
                mul r1.xyz, r1.xyzx, r4.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 242
                mov r1.x, -cb0[12].w
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[13].x
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 245
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[14].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 249
                mul r0.w, r4.w, cb1[17].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 226 instruction slots used
                            
            };
        }

    }

    technique11 Light1Reflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //   float gHeightScale;                // Offset:  320 Size:     4 [unused]
                //   int gMinSampleCount;               // Offset:  324 Size:     4 [unused]
                //   int gMaxSampleCount;               // Offset:  328 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_temps 6
                
                #line 64 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                dp3 r3.x, v3.xyzx, cb0[0].xyzx  // vout<10:NaN:Inf>
                dp3 r3.y, v3.xyzx, cb0[1].xyzx  // vout<11:NaN:Inf>
                dp3 r3.z, v3.xyzx, cb0[2].xyzx  // vout<12:NaN:Inf>
                
                #line 69
                dp4 r4.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 72
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r5.x, r0.xyzw, cb0[12].xyzw  // vout<13:NaN:Inf>
                dp4 r5.y, r0.xyzw, cb0[13].xyzw  // vout<14:NaN:Inf>
                mov o0.xyzw, r4.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xyz, r3.xyzx  // VS<10:NaN:Inf,11:NaN:Inf,12:NaN:Inf>
                mov o4.xy, r5.xyxx  // VS<13:NaN:Inf,14:NaN:Inf>
                ret 
                // Approximately 25 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //   float gHeightScale;                // Offset:  320 Size:     4
                //   int gMinSampleCount;               // Offset:  324 Size:     4
                //   int gMaxSampleCount;               // Offset:  328 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gNormalMap                        texture  float4          2d    0        1
                // gCubeMap                          texture  float4        cube    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[13], immediateIndexed
                dcl_constantbuffer cb1[21], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texturecube (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_output o0.xyzw
                dcl_temps 10
                
                #line 85 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 88
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 91
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 94
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                mov r2.xyz, -r1.xyzx  // viewDirW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 103
                mov r3.xyz, r0.zxyz  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r0.w, v3.zxyz, r3.xyzx
                mul r4.xyz, r3.yzxy, r0.wwww
                mov r4.xyz, -r4.xyzx
                add r4.xyz, r4.xyzx, v3.xyzx
                dp3 r0.w, r4.xyzx, r4.xyzx
                rsq r0.w, r0.w
                mul r4.xyz, r0.wwww, r4.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r4.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r6.xyz, r3.zxyz, r5.yzxy
                mul r5.xyz, r3.xyzx, r5.xyzx
                mov r5.xyz, -r5.xyzx
                add r5.xyz, r5.xyzx, r6.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 109
                dp3 r4.x, r2.xyzx, r4.xyzx  // viewDirTS<0:NaN:Inf>
                dp3 r4.y, r2.xyzx, r5.xyzx  // viewDirTS<1:NaN:Inf>
                dp3 r0.w, r2.xyzx, r0.xyzx  // viewDirTS<2:NaN:Inf>
                mov r4.xy, -r4.xyxx
                mul r4.xy, r4.xyxx, cb1[20].xxxx
                div r4.xy, r4.xyxx, r0.wwww  // maxParallaxOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 116
                itof r0.w, cb1[20].z
                itof r1.w, cb1[20].y
                dp3 r2.w, r1.xyzx, r0.xyzx
                mov r3.w, -r0.w
                add r1.w, r1.w, r3.w
                mul r1.w, r1.w, r2.w
                add r0.w, r0.w, r1.w
                ftoi r0.w, r0.w  // sampleCount<0>
                itof r1.w, r0.w
                div r1.w, l(1.000000), r1.w  // yStep<0:Inf>
                mul r4.xy, r1.wwww, r4.xyxx  // texStep<0:NaN:Inf,1:NaN:Inf>
                
                #line 125
                deriv_rtx_coarse r4.zw, v4.xxxy  // dx<0:Inf,1:Inf>
                deriv_rty_coarse r5.xy, v4.xyxx  // dy<0:Inf,1:Inf>
                
                #line 138
                mov r5.zw, l(0,0,0,0)  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r6.xy, l(0,0,0,0)  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r6.zw, l(0,0,0,0)  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r2.w, l(0)  // sampleIndex<0>
                mov r3.w, l(1.000000)  // currRayY<0:NaN:Inf>
                mov r7.x, l(1.000000)  // prevRayY<0:NaN:Inf>
                mov r7.y, l(0)  // prevHeight<0:Inf>
                loop 
                  iadd r7.z, r0.w, l(1)
                  ilt r7.w, r2.w, r7.z
                  breakc_z r7.w
                  add r8.xy, r5.zwzz, v4.xyxx
                  sample_d_indexable(texture2d)(float,float,float,float) r7.w, r8.xyxx, t0.xyzw, s0, r4.zwzz, r5.xyxx  // currHeight<0:Inf>
                
                #line 143
                  lt r8.x, r3.w, r7.w
                  if_nz r8.x
                
                #line 147
                    mov r8.x, -r7.x
                    add r8.y, r7.y, r8.x
                    mov r8.z, -r7.w
                    add r8.z, r7.y, r8.z
                    add r8.z, r3.w, r8.z
                    add r8.x, r8.x, r8.z
                    div r8.x, r8.y, r8.x  // t<0:NaN:Inf>
                    mul r8.xy, r4.xyxx, r8.xxxx
                    add r6.zw, r6.xxxy, r8.xxxy  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r2.w, r7.z  // sampleIndex<0>
                
                #line 143
                  else 
                
                #line 156
                    iadd r2.w, r2.w, l(1)  // sampleIndex<0>
                    mov r6.xy, r5.zwzz  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r7.x, r3.w  // prevRayY<0:NaN:Inf>
                    mov r7.y, r7.w  // prevHeight<0:Inf>
                    add r5.zw, r4.xxxy, r5.zzzw  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                    mov r7.w, -r1.w
                    add r3.w, r3.w, r7.w  // currRayY<0:NaN:Inf>
                
                #line 143
                  endif 
                
                #line 138
                endloop 
                
                #line 170
                add r4.xy, r6.zwzz, v4.xyxx  // parallaxTex<0:NaN:Inf,1:NaN:Inf>
                
                #line 196
                sample_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xyxx, t0.xyzw, s0
                mov r4.xyz, r4.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                nop 
                mov r4.xyz, r4.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                mov r5.xyz, v3.xyzx  // tangentW<0,1,2>
                
                #line 206 "LightHelper.fx"
                mul r4.xyz, r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
                add r4.xyz, r4.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // normalT<0:Inf,1:Inf,2:Inf>
                
                #line 209
                mov r3.xyz, r3.xyzx  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r0.w, r5.zxyz, r3.xyzx
                mul r6.xyz, r3.yzxy, r0.wwww
                mov r6.xyz, -r6.xyzx
                add r5.xyz, r5.xyzx, r6.xyzx
                dp3 r0.w, r5.xyzx, r5.xyzx
                rsq r0.w, r0.w
                mul r5.xyz, r0.wwww, r5.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r6.xyz, r5.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r7.xyz, r3.zxyz, r6.yzxy
                mul r3.xyz, r3.xyzx, r6.xyzx
                mov r3.xyz, -r3.xyzx
                add r3.xyz, r3.xyzx, r7.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                mul r5.xyz, r4.xxxx, r5.xyzx
                mul r3.xyz, r3.xyzx, r4.yyyy
                add r3.xyz, r3.xyzx, r5.xyzx
                mul r0.xyz, r0.xyzx, r4.zzzz
                add r0.xyz, r0.xyzx, r3.xyzx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // NormalSampleToWorldSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 197 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, r0.xyzx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r3.xyz, cb1[16].xyzx  // mat<0,1,2>
                mov r4.xyz, cb1[17].xyzx  // mat<4,5,6>
                mov r5.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r9.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r6.xyz, -r9.xyzx
                dp3 r2.w, r6.xyzx, r0.xyzx
                add r2.w, r2.w, r2.w
                mov r2.w, -r2.w
                mul r9.xyz, r0.xyzx, r2.wwww
                add r6.xyz, r6.xyzx, r9.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r1.x, r6.xyzx, r1.xyzx
                max r1.x, r1.x, l(0.000000)
                log r1.x, r1.x
                mul r1.x, r1.x, r5.w
                exp r1.x, r1.x  // specFactor<0:NaN:Inf>
                mul r4.xyz, r4.xyzx, r0.wwww
                mul r4.xyz, r7.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyz, r5.xyzx, r1.xxxx
                mul r1.xyz, r8.xyzx, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r4.xyz, r1.wwww, r4.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r1.xyz, r1.wwww, r1.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r4.xyz, r4.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 224
                add r3.xyz, r3.xyzx, r4.xyzx
                mul r3.xyz, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r1.xyz, r1.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 229
                dp3 r0.w, r2.xyzx, r0.xyzx
                add r0.w, r0.w, r0.w
                mov r0.w, -r0.w
                mul r0.xyz, r0.wwww, r0.xyzx
                add r0.xyz, r2.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t1.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[19].xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 249
                mul r0.w, cb1[17].w, l(1.000000)  // litColor<3>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3>
                ret 
                // Approximately 157 instruction slots used
                            
            };
        }

    }

    technique11 Light2Reflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //   float gHeightScale;                // Offset:  320 Size:     4 [unused]
                //   int gMinSampleCount;               // Offset:  324 Size:     4 [unused]
                //   int gMaxSampleCount;               // Offset:  328 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_temps 6
                
                #line 64 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                dp3 r3.x, v3.xyzx, cb0[0].xyzx  // vout<10:NaN:Inf>
                dp3 r3.y, v3.xyzx, cb0[1].xyzx  // vout<11:NaN:Inf>
                dp3 r3.z, v3.xyzx, cb0[2].xyzx  // vout<12:NaN:Inf>
                
                #line 69
                dp4 r4.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 72
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r5.x, r0.xyzw, cb0[12].xyzw  // vout<13:NaN:Inf>
                dp4 r5.y, r0.xyzw, cb0[13].xyzw  // vout<14:NaN:Inf>
                mov o0.xyzw, r4.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xyz, r3.xyzx  // VS<10:NaN:Inf,11:NaN:Inf,12:NaN:Inf>
                mov o4.xy, r5.xyxx  // VS<13:NaN:Inf,14:NaN:Inf>
                ret 
                // Approximately 25 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //   float gHeightScale;                // Offset:  320 Size:     4
                //   int gMinSampleCount;               // Offset:  324 Size:     4
                //   int gMaxSampleCount;               // Offset:  328 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gNormalMap                        texture  float4          2d    0        1
                // gCubeMap                          texture  float4        cube    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[13], immediateIndexed
                dcl_constantbuffer cb1[21], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texturecube (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_output o0.xyzw
                dcl_temps 13
                
                #line 85 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 88
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 91
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 94
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                mov r2.xyz, -r1.xyzx  // viewDirW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 103
                mov r3.xyz, r0.zxyz  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r0.w, v3.zxyz, r3.xyzx
                mul r4.xyz, r3.yzxy, r0.wwww
                mov r4.xyz, -r4.xyzx
                add r4.xyz, r4.xyzx, v3.xyzx
                dp3 r0.w, r4.xyzx, r4.xyzx
                rsq r0.w, r0.w
                mul r4.xyz, r0.wwww, r4.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r4.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r6.xyz, r3.zxyz, r5.yzxy
                mul r5.xyz, r3.xyzx, r5.xyzx
                mov r5.xyz, -r5.xyzx
                add r5.xyz, r5.xyzx, r6.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 109
                dp3 r4.x, r2.xyzx, r4.xyzx  // viewDirTS<0:NaN:Inf>
                dp3 r4.y, r2.xyzx, r5.xyzx  // viewDirTS<1:NaN:Inf>
                dp3 r0.w, r2.xyzx, r0.xyzx  // viewDirTS<2:NaN:Inf>
                mov r4.xy, -r4.xyxx
                mul r4.xy, r4.xyxx, cb1[20].xxxx
                div r4.xy, r4.xyxx, r0.wwww  // maxParallaxOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 116
                itof r0.w, cb1[20].z
                itof r1.w, cb1[20].y
                dp3 r2.w, r1.xyzx, r0.xyzx
                mov r3.w, -r0.w
                add r1.w, r1.w, r3.w
                mul r1.w, r1.w, r2.w
                add r0.w, r0.w, r1.w
                ftoi r0.w, r0.w  // sampleCount<0>
                itof r1.w, r0.w
                div r1.w, l(1.000000), r1.w  // yStep<0:Inf>
                mul r4.xy, r1.wwww, r4.xyxx  // texStep<0:NaN:Inf,1:NaN:Inf>
                
                #line 125
                deriv_rtx_coarse r4.zw, v4.xxxy  // dx<0:Inf,1:Inf>
                deriv_rty_coarse r5.xy, v4.xyxx  // dy<0:Inf,1:Inf>
                
                #line 138
                mov r5.zw, l(0,0,0,0)  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r6.xy, l(0,0,0,0)  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r6.zw, l(0,0,0,0)  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r2.w, l(0)  // sampleIndex<0>
                mov r3.w, l(1.000000)  // currRayY<0:NaN:Inf>
                mov r7.x, l(1.000000)  // prevRayY<0:NaN:Inf>
                mov r7.y, l(0)  // prevHeight<0:Inf>
                loop 
                  iadd r7.z, r0.w, l(1)
                  ilt r7.w, r2.w, r7.z
                  breakc_z r7.w
                  add r8.xy, r5.zwzz, v4.xyxx
                  sample_d_indexable(texture2d)(float,float,float,float) r7.w, r8.xyxx, t0.xyzw, s0, r4.zwzz, r5.xyxx  // currHeight<0:Inf>
                
                #line 143
                  lt r8.x, r3.w, r7.w
                  if_nz r8.x
                
                #line 147
                    mov r8.x, -r7.x
                    add r8.y, r7.y, r8.x
                    mov r8.z, -r7.w
                    add r8.z, r7.y, r8.z
                    add r8.z, r3.w, r8.z
                    add r8.x, r8.x, r8.z
                    div r8.x, r8.y, r8.x  // t<0:NaN:Inf>
                    mul r8.xy, r4.xyxx, r8.xxxx
                    add r6.zw, r6.xxxy, r8.xxxy  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r2.w, r7.z  // sampleIndex<0>
                
                #line 143
                  else 
                
                #line 156
                    iadd r2.w, r2.w, l(1)  // sampleIndex<0>
                    mov r6.xy, r5.zwzz  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r7.x, r3.w  // prevRayY<0:NaN:Inf>
                    mov r7.y, r7.w  // prevHeight<0:Inf>
                    add r5.zw, r4.xxxy, r5.zzzw  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                    mov r7.w, -r1.w
                    add r3.w, r3.w, r7.w  // currRayY<0:NaN:Inf>
                
                #line 143
                  endif 
                
                #line 138
                endloop 
                
                #line 170
                add r4.xy, r6.zwzz, v4.xyxx  // parallaxTex<0:NaN:Inf,1:NaN:Inf>
                
                #line 196
                sample_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xyxx, t0.xyzw, s0
                mov r4.xyz, r4.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                nop 
                mov r4.xyz, r4.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                mov r5.xyz, v3.xyzx  // tangentW<0,1,2>
                
                #line 206 "LightHelper.fx"
                mul r4.xyz, r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
                add r4.xyz, r4.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // normalT<0:Inf,1:Inf,2:Inf>
                
                #line 209
                mov r3.xyz, r3.xyzx  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r0.w, r5.zxyz, r3.xyzx
                mul r6.xyz, r3.yzxy, r0.wwww
                mov r6.xyz, -r6.xyzx
                add r5.xyz, r5.xyzx, r6.xyzx
                dp3 r0.w, r5.xyzx, r5.xyzx
                rsq r0.w, r0.w
                mul r5.xyz, r0.wwww, r5.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r6.xyz, r5.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r7.xyz, r3.zxyz, r6.yzxy
                mul r3.xyz, r3.xyzx, r6.xyzx
                mov r3.xyz, -r3.xyzx
                add r3.xyz, r3.xyzx, r7.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                mul r5.xyz, r4.xxxx, r5.xyzx
                mul r3.xyz, r3.xyzx, r4.yyyy
                add r3.xyz, r3.xyzx, r5.xyzx
                mul r0.xyz, r0.xyzx, r4.zzzz
                add r0.xyz, r0.xyzx, r3.xyzx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // NormalSampleToWorldSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 197 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, r0.xyzx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r3.xyz, cb1[16].xyzx  // mat<0,1,2>
                mov r4.xyz, cb1[17].xyzx  // mat<4,5,6>
                mov r5.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r6.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r9.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r9.xyz, -r9.xyzx
                dp3 r2.w, r9.xyzx, r0.xyzx
                add r2.w, r2.w, r2.w
                mov r2.w, -r2.w
                mul r10.xyz, r0.xyzx, r2.wwww
                add r9.xyz, r9.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r2.w, r9.xyzx, r1.xyzx
                max r2.w, r2.w, l(0.000000)
                log r2.w, r2.w
                mul r2.w, r2.w, r5.w
                exp r2.w, r2.w  // specFactor<0:NaN:Inf>
                mul r9.xyz, r4.xyzx, r0.wwww
                mul r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r9.xyz, r5.xyzx, r2.wwww
                mul r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                add r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r9.xyz, cb0[4].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[5].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[6].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[7].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r3.xyz, r3.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r9.xyz, -r12.xyzx
                dp3 r2.w, r9.xyzx, r0.xyzx
                add r2.w, r2.w, r2.w
                mov r2.w, -r2.w
                mul r12.xyz, r0.xyzx, r2.wwww
                add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r1.x, r9.xyzx, r1.xyzx
                max r1.x, r1.x, l(0.000000)
                log r1.x, r1.x
                mul r1.x, r1.x, r5.w
                exp r1.x, r1.x  // specFactor<0:NaN:Inf>
                mul r4.xyz, r4.xyzx, r0.wwww
                mul r4.xyz, r10.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyz, r5.xyzx, r1.xxxx
                mul r1.xyz, r11.xyzx, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r4.xyz, r1.wwww, r4.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r1.xyz, r1.wwww, r1.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r4.xyz, r4.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r1.xyz, r1.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 224
                add r3.xyz, r3.xyzx, r4.xyzx
                mul r3.xyz, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r1.xyz, r1.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 229
                dp3 r0.w, r2.xyzx, r0.xyzx
                add r0.w, r0.w, r0.w
                mov r0.w, -r0.w
                mul r0.xyz, r0.wwww, r0.xyzx
                add r0.xyz, r2.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t1.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[19].xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 249
                mul r0.w, cb1[17].w, l(1.000000)  // litColor<3>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3>
                ret 
                // Approximately 189 instruction slots used
                            
            };
        }

    }

    technique11 Light3Reflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //   float gHeightScale;                // Offset:  320 Size:     4 [unused]
                //   int gMinSampleCount;               // Offset:  324 Size:     4 [unused]
                //   int gMaxSampleCount;               // Offset:  328 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_temps 6
                
                #line 64 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                dp3 r3.x, v3.xyzx, cb0[0].xyzx  // vout<10:NaN:Inf>
                dp3 r3.y, v3.xyzx, cb0[1].xyzx  // vout<11:NaN:Inf>
                dp3 r3.z, v3.xyzx, cb0[2].xyzx  // vout<12:NaN:Inf>
                
                #line 69
                dp4 r4.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 72
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r5.x, r0.xyzw, cb0[12].xyzw  // vout<13:NaN:Inf>
                dp4 r5.y, r0.xyzw, cb0[13].xyzw  // vout<14:NaN:Inf>
                mov o0.xyzw, r4.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xyz, r3.xyzx  // VS<10:NaN:Inf,11:NaN:Inf,12:NaN:Inf>
                mov o4.xy, r5.xyxx  // VS<13:NaN:Inf,14:NaN:Inf>
                ret 
                // Approximately 25 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //   float gHeightScale;                // Offset:  320 Size:     4
                //   int gMinSampleCount;               // Offset:  324 Size:     4
                //   int gMaxSampleCount;               // Offset:  328 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gNormalMap                        texture  float4          2d    0        1
                // gCubeMap                          texture  float4        cube    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[13], immediateIndexed
                dcl_constantbuffer cb1[21], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texturecube (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_output o0.xyzw
                dcl_temps 14
                
                #line 85 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 88
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 91
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 94
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                mov r2.xyz, -r1.xyzx  // viewDirW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 103
                mov r3.xyz, r0.zxyz  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r0.w, v3.zxyz, r3.xyzx
                mul r4.xyz, r3.yzxy, r0.wwww
                mov r4.xyz, -r4.xyzx
                add r4.xyz, r4.xyzx, v3.xyzx
                dp3 r0.w, r4.xyzx, r4.xyzx
                rsq r0.w, r0.w
                mul r4.xyz, r0.wwww, r4.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r4.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r6.xyz, r3.zxyz, r5.yzxy
                mul r5.xyz, r3.xyzx, r5.xyzx
                mov r5.xyz, -r5.xyzx
                add r5.xyz, r5.xyzx, r6.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 109
                dp3 r4.x, r2.xyzx, r4.xyzx  // viewDirTS<0:NaN:Inf>
                dp3 r4.y, r2.xyzx, r5.xyzx  // viewDirTS<1:NaN:Inf>
                dp3 r0.w, r2.xyzx, r0.xyzx  // viewDirTS<2:NaN:Inf>
                mov r4.xy, -r4.xyxx
                mul r4.xy, r4.xyxx, cb1[20].xxxx
                div r4.xy, r4.xyxx, r0.wwww  // maxParallaxOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 116
                itof r0.w, cb1[20].z
                itof r1.w, cb1[20].y
                dp3 r2.w, r1.xyzx, r0.xyzx
                mov r3.w, -r0.w
                add r1.w, r1.w, r3.w
                mul r1.w, r1.w, r2.w
                add r0.w, r0.w, r1.w
                ftoi r0.w, r0.w  // sampleCount<0>
                itof r1.w, r0.w
                div r1.w, l(1.000000), r1.w  // yStep<0:Inf>
                mul r4.xy, r1.wwww, r4.xyxx  // texStep<0:NaN:Inf,1:NaN:Inf>
                
                #line 125
                deriv_rtx_coarse r4.zw, v4.xxxy  // dx<0:Inf,1:Inf>
                deriv_rty_coarse r5.xy, v4.xyxx  // dy<0:Inf,1:Inf>
                
                #line 138
                mov r5.zw, l(0,0,0,0)  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r6.xy, l(0,0,0,0)  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r6.zw, l(0,0,0,0)  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r2.w, l(0)  // sampleIndex<0>
                mov r3.w, l(1.000000)  // currRayY<0:NaN:Inf>
                mov r7.x, l(1.000000)  // prevRayY<0:NaN:Inf>
                mov r7.y, l(0)  // prevHeight<0:Inf>
                loop 
                  iadd r7.z, r0.w, l(1)
                  ilt r7.w, r2.w, r7.z
                  breakc_z r7.w
                  add r8.xy, r5.zwzz, v4.xyxx
                  sample_d_indexable(texture2d)(float,float,float,float) r7.w, r8.xyxx, t0.xyzw, s0, r4.zwzz, r5.xyxx  // currHeight<0:Inf>
                
                #line 143
                  lt r8.x, r3.w, r7.w
                  if_nz r8.x
                
                #line 147
                    mov r8.x, -r7.x
                    add r8.y, r7.y, r8.x
                    mov r8.z, -r7.w
                    add r8.z, r7.y, r8.z
                    add r8.z, r3.w, r8.z
                    add r8.x, r8.x, r8.z
                    div r8.x, r8.y, r8.x  // t<0:NaN:Inf>
                    mul r8.xy, r4.xyxx, r8.xxxx
                    add r6.zw, r6.xxxy, r8.xxxy  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r2.w, r7.z  // sampleIndex<0>
                
                #line 143
                  else 
                
                #line 156
                    iadd r2.w, r2.w, l(1)  // sampleIndex<0>
                    mov r6.xy, r5.zwzz  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r7.x, r3.w  // prevRayY<0:NaN:Inf>
                    mov r7.y, r7.w  // prevHeight<0:Inf>
                    add r5.zw, r4.xxxy, r5.zzzw  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                    mov r7.w, -r1.w
                    add r3.w, r3.w, r7.w  // currRayY<0:NaN:Inf>
                
                #line 143
                  endif 
                
                #line 138
                endloop 
                
                #line 170
                add r4.xy, r6.zwzz, v4.xyxx  // parallaxTex<0:NaN:Inf,1:NaN:Inf>
                
                #line 196
                sample_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xyxx, t0.xyzw, s0
                mov r4.xyz, r4.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                nop 
                mov r4.xyz, r4.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                mov r5.xyz, v3.xyzx  // tangentW<0,1,2>
                
                #line 206 "LightHelper.fx"
                mul r4.xyz, r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
                add r4.xyz, r4.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // normalT<0:Inf,1:Inf,2:Inf>
                
                #line 209
                mov r3.xyz, r3.xyzx  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r0.w, r5.zxyz, r3.xyzx
                mul r6.xyz, r3.yzxy, r0.wwww
                mov r6.xyz, -r6.xyzx
                add r5.xyz, r5.xyzx, r6.xyzx
                dp3 r0.w, r5.xyzx, r5.xyzx
                rsq r0.w, r0.w
                mul r5.xyz, r0.wwww, r5.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r6.xyz, r5.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r7.xyz, r3.zxyz, r6.yzxy
                mul r3.xyz, r3.xyzx, r6.xyzx
                mov r3.xyz, -r3.xyzx
                add r3.xyz, r3.xyzx, r7.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                mul r5.xyz, r4.xxxx, r5.xyzx
                mul r3.xyz, r3.xyzx, r4.yyyy
                add r3.xyz, r3.xyzx, r5.xyzx
                mul r0.xyz, r0.xyzx, r4.zzzz
                add r0.xyz, r0.xyzx, r3.xyzx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // NormalSampleToWorldSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 197 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, r0.xyzx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r3.xyz, cb1[16].xyzx  // mat<0,1,2>
                mov r4.xyz, cb1[17].xyzx  // mat<4,5,6>
                mov r5.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r6.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r9.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r9.xyz, -r9.xyzx
                dp3 r2.w, r9.xyzx, r0.xyzx
                add r2.w, r2.w, r2.w
                mov r2.w, -r2.w
                mul r10.xyz, r0.xyzx, r2.wwww
                add r9.xyz, r9.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r2.w, r9.xyzx, r1.xyzx
                max r2.w, r2.w, l(0.000000)
                log r2.w, r2.w
                mul r2.w, r2.w, r5.w
                exp r2.w, r2.w  // specFactor<0:NaN:Inf>
                mul r9.xyz, r4.xyzx, r0.wwww
                mul r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r9.xyz, r5.xyzx, r2.wwww
                mul r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                add r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r9.xyz, cb0[4].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[5].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[6].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[7].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r9.xyz, r3.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r12.xyz, -r12.xyzx
                dp3 r2.w, r12.xyzx, r0.xyzx
                add r2.w, r2.w, r2.w
                mov r2.w, -r2.w
                mul r13.xyz, r0.xyzx, r2.wwww
                add r12.xyz, r12.xyzx, r13.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r2.w, r12.xyzx, r1.xyzx
                max r2.w, r2.w, l(0.000000)
                log r2.w, r2.w
                mul r2.w, r2.w, r5.w
                exp r2.w, r2.w  // specFactor<0:NaN:Inf>
                mul r12.xyz, r4.xyzx, r0.wwww
                mul r10.xyz, r10.xyzx, r12.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r12.xyz, r5.xyzx, r2.wwww
                mul r11.xyz, r11.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r10.xyz, r1.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r11.xyz, r1.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r7.xyz, r7.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r8.xyz, r8.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r9.xyz, cb0[8].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[9].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[10].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[11].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r3.xyz, r3.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r9.xyz, -r12.xyzx
                dp3 r2.w, r9.xyzx, r0.xyzx
                add r2.w, r2.w, r2.w
                mov r2.w, -r2.w
                mul r12.xyz, r0.xyzx, r2.wwww
                add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r1.x, r9.xyzx, r1.xyzx
                max r1.x, r1.x, l(0.000000)
                log r1.x, r1.x
                mul r1.x, r1.x, r5.w
                exp r1.x, r1.x  // specFactor<0:NaN:Inf>
                mul r4.xyz, r4.xyzx, r0.wwww
                mul r4.xyz, r10.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyz, r5.xyzx, r1.xxxx
                mul r1.xyz, r11.xyzx, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r4.xyz, r1.wwww, r4.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r1.xyz, r1.wwww, r1.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r4.xyz, r4.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r1.xyz, r1.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 224
                add r3.xyz, r3.xyzx, r4.xyzx
                mul r3.xyz, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r1.xyz, r1.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 229
                dp3 r0.w, r2.xyzx, r0.xyzx
                add r0.w, r0.w, r0.w
                mov r0.w, -r0.w
                mul r0.xyz, r0.wwww, r0.xyzx
                add r0.xyz, r2.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t1.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[19].xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 249
                mul r0.w, cb1[17].w, l(1.000000)  // litColor<3>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3>
                ret 
                // Approximately 221 instruction slots used
                            
            };
        }

    }

    technique11 Light0TexReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //   float gHeightScale;                // Offset:  320 Size:     4 [unused]
                //   int gMinSampleCount;               // Offset:  324 Size:     4 [unused]
                //   int gMaxSampleCount;               // Offset:  328 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_temps 6
                
                #line 64 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                dp3 r3.x, v3.xyzx, cb0[0].xyzx  // vout<10:NaN:Inf>
                dp3 r3.y, v3.xyzx, cb0[1].xyzx  // vout<11:NaN:Inf>
                dp3 r3.z, v3.xyzx, cb0[2].xyzx  // vout<12:NaN:Inf>
                
                #line 69
                dp4 r4.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 72
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r5.x, r0.xyzw, cb0[12].xyzw  // vout<13:NaN:Inf>
                dp4 r5.y, r0.xyzw, cb0[13].xyzw  // vout<14:NaN:Inf>
                mov o0.xyzw, r4.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xyz, r3.xyzx  // VS<10:NaN:Inf,11:NaN:Inf,12:NaN:Inf>
                mov o4.xy, r5.xyxx  // VS<13:NaN:Inf,14:NaN:Inf>
                ret 
                // Approximately 25 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192 [unused]
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //   float gHeightScale;                // Offset:  320 Size:     4
                //   int gMinSampleCount;               // Offset:  324 Size:     4
                //   int gMaxSampleCount;               // Offset:  328 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gNormalMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[13], immediateIndexed
                dcl_constantbuffer cb1[21], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_output o0.xyzw
                dcl_temps 7
                
                #line 85 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 88
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 91
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 94
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                mov r2.xyz, -r1.xyzx  // viewDirW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 103
                mov r3.xyz, r0.zxyz  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r0.w, v3.zxyz, r3.xyzx
                mul r4.xyz, r3.yzxy, r0.wwww
                mov r4.xyz, -r4.xyzx
                add r4.xyz, r4.xyzx, v3.xyzx
                dp3 r0.w, r4.xyzx, r4.xyzx
                rsq r0.w, r0.w
                mul r4.xyz, r0.wwww, r4.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r4.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r6.xyz, r3.zxyz, r5.yzxy
                mul r3.xyz, r3.xyzx, r5.xyzx
                mov r3.xyz, -r3.xyzx
                add r3.xyz, r3.xyzx, r6.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 109
                dp3 r4.x, r2.xyzx, r4.xyzx  // viewDirTS<0:NaN:Inf>
                dp3 r4.y, r2.xyzx, r3.xyzx  // viewDirTS<1:NaN:Inf>
                dp3 r0.w, r2.xyzx, r0.xyzx  // viewDirTS<2:NaN:Inf>
                mov r2.xy, -r4.xyxx
                mul r2.xy, r2.xyxx, cb1[20].xxxx
                div r2.xy, r2.xyxx, r0.wwww  // maxParallaxOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 116
                itof r0.w, cb1[20].z
                itof r1.w, cb1[20].y
                dp3 r0.x, r1.xyzx, r0.xyzx
                mov r0.y, -r0.w
                add r0.y, r0.y, r1.w
                mul r0.x, r0.y, r0.x
                add r0.x, r0.x, r0.w
                ftoi r0.x, r0.x  // sampleCount<0>
                itof r0.y, r0.x
                div r0.y, l(1.000000), r0.y  // yStep<0:Inf>
                mul r0.zw, r0.yyyy, r2.xxxy  // texStep<0:NaN:Inf,1:NaN:Inf>
                
                #line 125
                deriv_rtx_coarse r1.xy, v4.xyxx  // dx<0:Inf,1:Inf>
                deriv_rty_coarse r1.zw, v4.xxxy  // dy<0:Inf,1:Inf>
                
                #line 138
                mov r2.xy, l(0,0,0,0)  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r2.zw, l(0,0,0,0)  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r3.xy, l(0,0,0,0)  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r3.z, l(0)  // sampleIndex<0>
                mov r3.w, l(1.000000)  // currRayY<0:NaN:Inf>
                mov r4.x, l(1.000000)  // prevRayY<0:NaN:Inf>
                mov r4.y, l(0)  // prevHeight<0:Inf>
                loop 
                  iadd r4.z, r0.x, l(1)
                  ilt r4.w, r3.z, r4.z
                  breakc_z r4.w
                  add r5.xy, r2.xyxx, v4.xyxx
                  sample_d_indexable(texture2d)(float,float,float,float) r4.w, r5.xyxx, t1.xyzw, s0, r1.xyxx, r1.zwzz  // currHeight<0:Inf>
                
                #line 143
                  lt r5.x, r3.w, r4.w
                  if_nz r5.x
                
                #line 147
                    mov r5.x, -r4.x
                    add r5.y, r4.y, r5.x
                    mov r5.z, -r4.w
                    add r5.z, r4.y, r5.z
                    add r5.z, r3.w, r5.z
                    add r5.x, r5.x, r5.z
                    div r5.x, r5.y, r5.x  // t<0:NaN:Inf>
                    mul r5.xy, r0.zwzz, r5.xxxx
                    add r3.xy, r2.zwzz, r5.xyxx  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r3.z, r4.z  // sampleIndex<0>
                
                #line 143
                  else 
                
                #line 156
                    iadd r3.z, r3.z, l(1)  // sampleIndex<0>
                    mov r2.zw, r2.xxxy  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r4.x, r3.w  // prevRayY<0:NaN:Inf>
                    mov r4.y, r4.w  // prevHeight<0:Inf>
                    add r2.xy, r0.zwzz, r2.xyxx  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                    mov r4.w, -r0.y
                    add r3.w, r3.w, r4.w  // currRayY<0:NaN:Inf>
                
                #line 143
                  endif 
                
                #line 138
                endloop 
                
                #line 170
                add r0.xy, r3.xyxx, v4.xyxx  // parallaxTex<0:NaN:Inf,1:NaN:Inf>
                
                #line 181
                sample_indexable(texture2d)(float,float,float,float) r0.xyzw, r0.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 197
                nop 
                
                #line 203
                mov r0.xyz, r0.xyzx  // litColor<0:Inf,1:Inf,2:Inf>
                
                #line 249
                mul r0.w, r0.w, cb1[17].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:Inf,1:Inf,2:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 84 instruction slots used
                            
            };
        }

    }

    technique11 Light1TexReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //   float gHeightScale;                // Offset:  320 Size:     4 [unused]
                //   int gMinSampleCount;               // Offset:  324 Size:     4 [unused]
                //   int gMaxSampleCount;               // Offset:  328 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_temps 6
                
                #line 64 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                dp3 r3.x, v3.xyzx, cb0[0].xyzx  // vout<10:NaN:Inf>
                dp3 r3.y, v3.xyzx, cb0[1].xyzx  // vout<11:NaN:Inf>
                dp3 r3.z, v3.xyzx, cb0[2].xyzx  // vout<12:NaN:Inf>
                
                #line 69
                dp4 r4.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 72
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r5.x, r0.xyzw, cb0[12].xyzw  // vout<13:NaN:Inf>
                dp4 r5.y, r0.xyzw, cb0[13].xyzw  // vout<14:NaN:Inf>
                mov o0.xyzw, r4.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xyz, r3.xyzx  // VS<10:NaN:Inf,11:NaN:Inf,12:NaN:Inf>
                mov o4.xy, r5.xyxx  // VS<13:NaN:Inf,14:NaN:Inf>
                ret 
                // Approximately 25 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //   float gHeightScale;                // Offset:  320 Size:     4
                //   int gMinSampleCount;               // Offset:  324 Size:     4
                //   int gMaxSampleCount;               // Offset:  328 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gNormalMap                        texture  float4          2d    1        1
                // gCubeMap                          texture  float4        cube    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[13], immediateIndexed
                dcl_constantbuffer cb1[21], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texturecube (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_output o0.xyzw
                dcl_temps 11
                
                #line 85 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 88
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 91
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 94
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                mov r2.xyz, -r1.xyzx  // viewDirW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 103
                mov r3.xyz, r0.zxyz  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r0.w, v3.zxyz, r3.xyzx
                mul r4.xyz, r3.yzxy, r0.wwww
                mov r4.xyz, -r4.xyzx
                add r4.xyz, r4.xyzx, v3.xyzx
                dp3 r0.w, r4.xyzx, r4.xyzx
                rsq r0.w, r0.w
                mul r4.xyz, r0.wwww, r4.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r4.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r6.xyz, r3.zxyz, r5.yzxy
                mul r5.xyz, r3.xyzx, r5.xyzx
                mov r5.xyz, -r5.xyzx
                add r5.xyz, r5.xyzx, r6.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 109
                dp3 r4.x, r2.xyzx, r4.xyzx  // viewDirTS<0:NaN:Inf>
                dp3 r4.y, r2.xyzx, r5.xyzx  // viewDirTS<1:NaN:Inf>
                dp3 r0.w, r2.xyzx, r0.xyzx  // viewDirTS<2:NaN:Inf>
                mov r4.xy, -r4.xyxx
                mul r4.xy, r4.xyxx, cb1[20].xxxx
                div r4.xy, r4.xyxx, r0.wwww  // maxParallaxOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 116
                itof r0.w, cb1[20].z
                itof r1.w, cb1[20].y
                dp3 r2.w, r1.xyzx, r0.xyzx
                mov r3.w, -r0.w
                add r1.w, r1.w, r3.w
                mul r1.w, r1.w, r2.w
                add r0.w, r0.w, r1.w
                ftoi r0.w, r0.w  // sampleCount<0>
                itof r1.w, r0.w
                div r1.w, l(1.000000), r1.w  // yStep<0:Inf>
                mul r4.xy, r1.wwww, r4.xyxx  // texStep<0:NaN:Inf,1:NaN:Inf>
                
                #line 125
                deriv_rtx_coarse r4.zw, v4.xxxy  // dx<0:Inf,1:Inf>
                deriv_rty_coarse r5.xy, v4.xyxx  // dy<0:Inf,1:Inf>
                
                #line 138
                mov r5.zw, l(0,0,0,0)  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r6.xy, l(0,0,0,0)  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r6.zw, l(0,0,0,0)  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r2.w, l(0)  // sampleIndex<0>
                mov r3.w, l(1.000000)  // currRayY<0:NaN:Inf>
                mov r7.x, l(1.000000)  // prevRayY<0:NaN:Inf>
                mov r7.y, l(0)  // prevHeight<0:Inf>
                loop 
                  iadd r7.z, r0.w, l(1)
                  ilt r7.w, r2.w, r7.z
                  breakc_z r7.w
                  add r8.xy, r5.zwzz, v4.xyxx
                  sample_d_indexable(texture2d)(float,float,float,float) r7.w, r8.xyxx, t1.xyzw, s0, r4.zwzz, r5.xyxx  // currHeight<0:Inf>
                
                #line 143
                  lt r8.x, r3.w, r7.w
                  if_nz r8.x
                
                #line 147
                    mov r8.x, -r7.x
                    add r8.y, r7.y, r8.x
                    mov r8.z, -r7.w
                    add r8.z, r7.y, r8.z
                    add r8.z, r3.w, r8.z
                    add r8.x, r8.x, r8.z
                    div r8.x, r8.y, r8.x  // t<0:NaN:Inf>
                    mul r8.xy, r4.xyxx, r8.xxxx
                    add r6.zw, r6.xxxy, r8.xxxy  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r2.w, r7.z  // sampleIndex<0>
                
                #line 143
                  else 
                
                #line 156
                    iadd r2.w, r2.w, l(1)  // sampleIndex<0>
                    mov r6.xy, r5.zwzz  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r7.x, r3.w  // prevRayY<0:NaN:Inf>
                    mov r7.y, r7.w  // prevHeight<0:Inf>
                    add r5.zw, r4.xxxy, r5.zzzw  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                    mov r7.w, -r1.w
                    add r3.w, r3.w, r7.w  // currRayY<0:NaN:Inf>
                
                #line 143
                  endif 
                
                #line 138
                endloop 
                
                #line 170
                add r4.xy, r6.zwzz, v4.xyxx  // parallaxTex<0:NaN:Inf,1:NaN:Inf>
                
                #line 181
                sample_indexable(texture2d)(float,float,float,float) r5.xyzw, r4.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 196
                sample_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xyxx, t1.xyzw, s0
                mov r4.xyz, r4.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                nop 
                mov r4.xyz, r4.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                mov r6.xyz, v3.xyzx  // tangentW<0,1,2>
                
                #line 206 "LightHelper.fx"
                mul r4.xyz, r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
                add r4.xyz, r4.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // normalT<0:Inf,1:Inf,2:Inf>
                
                #line 209
                mov r3.xyz, r3.xyzx  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r0.w, r6.zxyz, r3.xyzx
                mul r7.xyz, r3.yzxy, r0.wwww
                mov r7.xyz, -r7.xyzx
                add r6.xyz, r6.xyzx, r7.xyzx
                dp3 r0.w, r6.xyzx, r6.xyzx
                rsq r0.w, r0.w
                mul r6.xyz, r0.wwww, r6.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.xyz, r6.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r8.xyz, r3.zxyz, r7.yzxy
                mul r3.xyz, r3.xyzx, r7.xyzx
                mov r3.xyz, -r3.xyzx
                add r3.xyz, r3.xyzx, r8.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                mul r6.xyz, r4.xxxx, r6.xyzx
                mul r3.xyz, r3.xyzx, r4.yyyy
                add r3.xyz, r3.xyzx, r6.xyzx
                mul r0.xyz, r0.xyzx, r4.zzzz
                add r0.xyz, r0.xyzx, r3.xyzx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // NormalSampleToWorldSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 197 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, r0.xyzx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r3.xyz, cb1[16].xyzx  // mat<0,1,2>
                mov r4.xyz, cb1[17].xyzx  // mat<4,5,6>
                mov r6.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r3.xyz, r3.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r10.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r7.xyz, -r10.xyzx
                dp3 r2.w, r7.xyzx, r0.xyzx
                add r2.w, r2.w, r2.w
                mov r2.w, -r2.w
                mul r10.xyz, r0.xyzx, r2.wwww
                add r7.xyz, r7.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r1.x, r7.xyzx, r1.xyzx
                max r1.x, r1.x, l(0.000000)
                log r1.x, r1.x
                mul r1.x, r1.x, r6.w
                exp r1.x, r1.x  // specFactor<0:NaN:Inf>
                mul r4.xyz, r4.xyzx, r0.wwww
                mul r4.xyz, r8.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyz, r6.xyzx, r1.xxxx
                mul r1.xyz, r9.xyzx, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r4.xyz, r1.wwww, r4.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r1.xyz, r1.wwww, r1.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r4.xyz, r4.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 224
                add r3.xyz, r3.xyzx, r4.xyzx
                mul r3.xyz, r3.xyzx, r5.xyzx
                add r1.xyz, r1.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 229
                dp3 r0.w, r2.xyzx, r0.xyzx
                add r0.w, r0.w, r0.w
                mov r0.w, -r0.w
                mul r0.xyz, r0.wwww, r0.xyzx
                add r0.xyz, r2.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t2.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[19].xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 249
                mul r0.w, r5.w, cb1[17].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 158 instruction slots used
                            
            };
        }

    }

    technique11 Light2TexReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //   float gHeightScale;                // Offset:  320 Size:     4 [unused]
                //   int gMinSampleCount;               // Offset:  324 Size:     4 [unused]
                //   int gMaxSampleCount;               // Offset:  328 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_temps 6
                
                #line 64 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                dp3 r3.x, v3.xyzx, cb0[0].xyzx  // vout<10:NaN:Inf>
                dp3 r3.y, v3.xyzx, cb0[1].xyzx  // vout<11:NaN:Inf>
                dp3 r3.z, v3.xyzx, cb0[2].xyzx  // vout<12:NaN:Inf>
                
                #line 69
                dp4 r4.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 72
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r5.x, r0.xyzw, cb0[12].xyzw  // vout<13:NaN:Inf>
                dp4 r5.y, r0.xyzw, cb0[13].xyzw  // vout<14:NaN:Inf>
                mov o0.xyzw, r4.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xyz, r3.xyzx  // VS<10:NaN:Inf,11:NaN:Inf,12:NaN:Inf>
                mov o4.xy, r5.xyxx  // VS<13:NaN:Inf,14:NaN:Inf>
                ret 
                // Approximately 25 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //   float gHeightScale;                // Offset:  320 Size:     4
                //   int gMinSampleCount;               // Offset:  324 Size:     4
                //   int gMaxSampleCount;               // Offset:  328 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gNormalMap                        texture  float4          2d    1        1
                // gCubeMap                          texture  float4        cube    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[13], immediateIndexed
                dcl_constantbuffer cb1[21], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texturecube (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_output o0.xyzw
                dcl_temps 14
                
                #line 85 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 88
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 91
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 94
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                mov r2.xyz, -r1.xyzx  // viewDirW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 103
                mov r3.xyz, r0.zxyz  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r0.w, v3.zxyz, r3.xyzx
                mul r4.xyz, r3.yzxy, r0.wwww
                mov r4.xyz, -r4.xyzx
                add r4.xyz, r4.xyzx, v3.xyzx
                dp3 r0.w, r4.xyzx, r4.xyzx
                rsq r0.w, r0.w
                mul r4.xyz, r0.wwww, r4.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r4.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r6.xyz, r3.zxyz, r5.yzxy
                mul r5.xyz, r3.xyzx, r5.xyzx
                mov r5.xyz, -r5.xyzx
                add r5.xyz, r5.xyzx, r6.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 109
                dp3 r4.x, r2.xyzx, r4.xyzx  // viewDirTS<0:NaN:Inf>
                dp3 r4.y, r2.xyzx, r5.xyzx  // viewDirTS<1:NaN:Inf>
                dp3 r0.w, r2.xyzx, r0.xyzx  // viewDirTS<2:NaN:Inf>
                mov r4.xy, -r4.xyxx
                mul r4.xy, r4.xyxx, cb1[20].xxxx
                div r4.xy, r4.xyxx, r0.wwww  // maxParallaxOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 116
                itof r0.w, cb1[20].z
                itof r1.w, cb1[20].y
                dp3 r2.w, r1.xyzx, r0.xyzx
                mov r3.w, -r0.w
                add r1.w, r1.w, r3.w
                mul r1.w, r1.w, r2.w
                add r0.w, r0.w, r1.w
                ftoi r0.w, r0.w  // sampleCount<0>
                itof r1.w, r0.w
                div r1.w, l(1.000000), r1.w  // yStep<0:Inf>
                mul r4.xy, r1.wwww, r4.xyxx  // texStep<0:NaN:Inf,1:NaN:Inf>
                
                #line 125
                deriv_rtx_coarse r4.zw, v4.xxxy  // dx<0:Inf,1:Inf>
                deriv_rty_coarse r5.xy, v4.xyxx  // dy<0:Inf,1:Inf>
                
                #line 138
                mov r5.zw, l(0,0,0,0)  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r6.xy, l(0,0,0,0)  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r6.zw, l(0,0,0,0)  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r2.w, l(0)  // sampleIndex<0>
                mov r3.w, l(1.000000)  // currRayY<0:NaN:Inf>
                mov r7.x, l(1.000000)  // prevRayY<0:NaN:Inf>
                mov r7.y, l(0)  // prevHeight<0:Inf>
                loop 
                  iadd r7.z, r0.w, l(1)
                  ilt r7.w, r2.w, r7.z
                  breakc_z r7.w
                  add r8.xy, r5.zwzz, v4.xyxx
                  sample_d_indexable(texture2d)(float,float,float,float) r7.w, r8.xyxx, t1.xyzw, s0, r4.zwzz, r5.xyxx  // currHeight<0:Inf>
                
                #line 143
                  lt r8.x, r3.w, r7.w
                  if_nz r8.x
                
                #line 147
                    mov r8.x, -r7.x
                    add r8.y, r7.y, r8.x
                    mov r8.z, -r7.w
                    add r8.z, r7.y, r8.z
                    add r8.z, r3.w, r8.z
                    add r8.x, r8.x, r8.z
                    div r8.x, r8.y, r8.x  // t<0:NaN:Inf>
                    mul r8.xy, r4.xyxx, r8.xxxx
                    add r6.zw, r6.xxxy, r8.xxxy  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r2.w, r7.z  // sampleIndex<0>
                
                #line 143
                  else 
                
                #line 156
                    iadd r2.w, r2.w, l(1)  // sampleIndex<0>
                    mov r6.xy, r5.zwzz  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r7.x, r3.w  // prevRayY<0:NaN:Inf>
                    mov r7.y, r7.w  // prevHeight<0:Inf>
                    add r5.zw, r4.xxxy, r5.zzzw  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                    mov r7.w, -r1.w
                    add r3.w, r3.w, r7.w  // currRayY<0:NaN:Inf>
                
                #line 143
                  endif 
                
                #line 138
                endloop 
                
                #line 170
                add r4.xy, r6.zwzz, v4.xyxx  // parallaxTex<0:NaN:Inf,1:NaN:Inf>
                
                #line 181
                sample_indexable(texture2d)(float,float,float,float) r5.xyzw, r4.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 196
                sample_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xyxx, t1.xyzw, s0
                mov r4.xyz, r4.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                nop 
                mov r4.xyz, r4.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                mov r6.xyz, v3.xyzx  // tangentW<0,1,2>
                
                #line 206 "LightHelper.fx"
                mul r4.xyz, r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
                add r4.xyz, r4.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // normalT<0:Inf,1:Inf,2:Inf>
                
                #line 209
                mov r3.xyz, r3.xyzx  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r0.w, r6.zxyz, r3.xyzx
                mul r7.xyz, r3.yzxy, r0.wwww
                mov r7.xyz, -r7.xyzx
                add r6.xyz, r6.xyzx, r7.xyzx
                dp3 r0.w, r6.xyzx, r6.xyzx
                rsq r0.w, r0.w
                mul r6.xyz, r0.wwww, r6.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.xyz, r6.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r8.xyz, r3.zxyz, r7.yzxy
                mul r3.xyz, r3.xyzx, r7.xyzx
                mov r3.xyz, -r3.xyzx
                add r3.xyz, r3.xyzx, r8.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                mul r6.xyz, r4.xxxx, r6.xyzx
                mul r3.xyz, r3.xyzx, r4.yyyy
                add r3.xyz, r3.xyzx, r6.xyzx
                mul r0.xyz, r0.xyzx, r4.zzzz
                add r0.xyz, r0.xyzx, r3.xyzx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // NormalSampleToWorldSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 197 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, r0.xyzx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r3.xyz, cb1[16].xyzx  // mat<0,1,2>
                mov r4.xyz, cb1[17].xyzx  // mat<4,5,6>
                mov r6.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r7.xyz, r3.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r10.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r10.xyz, -r10.xyzx
                dp3 r2.w, r10.xyzx, r0.xyzx
                add r2.w, r2.w, r2.w
                mov r2.w, -r2.w
                mul r11.xyz, r0.xyzx, r2.wwww
                add r10.xyz, r10.xyzx, r11.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r2.w, r10.xyzx, r1.xyzx
                max r2.w, r2.w, l(0.000000)
                log r2.w, r2.w
                mul r2.w, r2.w, r6.w
                exp r2.w, r2.w  // specFactor<0:NaN:Inf>
                mul r10.xyz, r4.xyzx, r0.wwww
                mul r8.xyz, r8.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r10.xyz, r6.xyzx, r2.wwww
                mul r9.xyz, r9.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r9.xyz, r1.wwww, r9.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r7.xyz, r7.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r8.xyz, r8.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r9.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                add r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r9.xyz, r9.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r10.xyz, cb0[4].xyzx  // L<0,1,2>
                mov r11.xyz, cb0[5].xyzx  // L<4,5,6>
                mov r12.xyz, cb0[6].xyzx  // L<8,9,10>
                mov r13.xyz, cb0[7].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r13.xyz, -r13.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r3.xyz, r3.xyzx, r10.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r13.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r10.xyz, -r13.xyzx
                dp3 r2.w, r10.xyzx, r0.xyzx
                add r2.w, r2.w, r2.w
                mov r2.w, -r2.w
                mul r13.xyz, r0.xyzx, r2.wwww
                add r10.xyz, r10.xyzx, r13.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r1.x, r10.xyzx, r1.xyzx
                max r1.x, r1.x, l(0.000000)
                log r1.x, r1.x
                mul r1.x, r1.x, r6.w
                exp r1.x, r1.x  // specFactor<0:NaN:Inf>
                mul r4.xyz, r4.xyzx, r0.wwww
                mul r4.xyz, r11.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyz, r6.xyzx, r1.xxxx
                mul r1.xyz, r12.xyzx, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r4.xyz, r1.wwww, r4.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r1.xyz, r1.wwww, r1.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r4.xyz, r4.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r3.xyz, r3.xyzx, r7.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r4.xyz, r4.xyzx, r8.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r1.xyz, r1.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 224
                add r3.xyz, r3.xyzx, r4.xyzx
                mul r3.xyz, r3.xyzx, r5.xyzx
                add r1.xyz, r1.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 229
                dp3 r0.w, r2.xyzx, r0.xyzx
                add r0.w, r0.w, r0.w
                mov r0.w, -r0.w
                mul r0.xyz, r0.wwww, r0.xyzx
                add r0.xyz, r2.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t2.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[19].xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 249
                mul r0.w, r5.w, cb1[17].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 190 instruction slots used
                            
            };
        }

    }

    technique11 Light3TexReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //   float gHeightScale;                // Offset:  320 Size:     4 [unused]
                //   int gMinSampleCount;               // Offset:  324 Size:     4 [unused]
                //   int gMaxSampleCount;               // Offset:  328 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_temps 6
                
                #line 64 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                dp3 r3.x, v3.xyzx, cb0[0].xyzx  // vout<10:NaN:Inf>
                dp3 r3.y, v3.xyzx, cb0[1].xyzx  // vout<11:NaN:Inf>
                dp3 r3.z, v3.xyzx, cb0[2].xyzx  // vout<12:NaN:Inf>
                
                #line 69
                dp4 r4.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 72
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r5.x, r0.xyzw, cb0[12].xyzw  // vout<13:NaN:Inf>
                dp4 r5.y, r0.xyzw, cb0[13].xyzw  // vout<14:NaN:Inf>
                mov o0.xyzw, r4.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xyz, r3.xyzx  // VS<10:NaN:Inf,11:NaN:Inf,12:NaN:Inf>
                mov o4.xy, r5.xyxx  // VS<13:NaN:Inf,14:NaN:Inf>
                ret 
                // Approximately 25 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //   float gHeightScale;                // Offset:  320 Size:     4
                //   int gMinSampleCount;               // Offset:  324 Size:     4
                //   int gMaxSampleCount;               // Offset:  328 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gNormalMap                        texture  float4          2d    1        1
                // gCubeMap                          texture  float4        cube    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[13], immediateIndexed
                dcl_constantbuffer cb1[21], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texturecube (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_output o0.xyzw
                dcl_temps 15
                
                #line 85 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 88
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 91
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 94
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                mov r2.xyz, -r1.xyzx  // viewDirW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 103
                mov r3.xyz, r0.zxyz  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r0.w, v3.zxyz, r3.xyzx
                mul r4.xyz, r3.yzxy, r0.wwww
                mov r4.xyz, -r4.xyzx
                add r4.xyz, r4.xyzx, v3.xyzx
                dp3 r0.w, r4.xyzx, r4.xyzx
                rsq r0.w, r0.w
                mul r4.xyz, r0.wwww, r4.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r4.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r6.xyz, r3.zxyz, r5.yzxy
                mul r5.xyz, r3.xyzx, r5.xyzx
                mov r5.xyz, -r5.xyzx
                add r5.xyz, r5.xyzx, r6.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 109
                dp3 r4.x, r2.xyzx, r4.xyzx  // viewDirTS<0:NaN:Inf>
                dp3 r4.y, r2.xyzx, r5.xyzx  // viewDirTS<1:NaN:Inf>
                dp3 r0.w, r2.xyzx, r0.xyzx  // viewDirTS<2:NaN:Inf>
                mov r4.xy, -r4.xyxx
                mul r4.xy, r4.xyxx, cb1[20].xxxx
                div r4.xy, r4.xyxx, r0.wwww  // maxParallaxOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 116
                itof r0.w, cb1[20].z
                itof r1.w, cb1[20].y
                dp3 r2.w, r1.xyzx, r0.xyzx
                mov r3.w, -r0.w
                add r1.w, r1.w, r3.w
                mul r1.w, r1.w, r2.w
                add r0.w, r0.w, r1.w
                ftoi r0.w, r0.w  // sampleCount<0>
                itof r1.w, r0.w
                div r1.w, l(1.000000), r1.w  // yStep<0:Inf>
                mul r4.xy, r1.wwww, r4.xyxx  // texStep<0:NaN:Inf,1:NaN:Inf>
                
                #line 125
                deriv_rtx_coarse r4.zw, v4.xxxy  // dx<0:Inf,1:Inf>
                deriv_rty_coarse r5.xy, v4.xyxx  // dy<0:Inf,1:Inf>
                
                #line 138
                mov r5.zw, l(0,0,0,0)  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r6.xy, l(0,0,0,0)  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r6.zw, l(0,0,0,0)  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r2.w, l(0)  // sampleIndex<0>
                mov r3.w, l(1.000000)  // currRayY<0:NaN:Inf>
                mov r7.x, l(1.000000)  // prevRayY<0:NaN:Inf>
                mov r7.y, l(0)  // prevHeight<0:Inf>
                loop 
                  iadd r7.z, r0.w, l(1)
                  ilt r7.w, r2.w, r7.z
                  breakc_z r7.w
                  add r8.xy, r5.zwzz, v4.xyxx
                  sample_d_indexable(texture2d)(float,float,float,float) r7.w, r8.xyxx, t1.xyzw, s0, r4.zwzz, r5.xyxx  // currHeight<0:Inf>
                
                #line 143
                  lt r8.x, r3.w, r7.w
                  if_nz r8.x
                
                #line 147
                    mov r8.x, -r7.x
                    add r8.y, r7.y, r8.x
                    mov r8.z, -r7.w
                    add r8.z, r7.y, r8.z
                    add r8.z, r3.w, r8.z
                    add r8.x, r8.x, r8.z
                    div r8.x, r8.y, r8.x  // t<0:NaN:Inf>
                    mul r8.xy, r4.xyxx, r8.xxxx
                    add r6.zw, r6.xxxy, r8.xxxy  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r2.w, r7.z  // sampleIndex<0>
                
                #line 143
                  else 
                
                #line 156
                    iadd r2.w, r2.w, l(1)  // sampleIndex<0>
                    mov r6.xy, r5.zwzz  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r7.x, r3.w  // prevRayY<0:NaN:Inf>
                    mov r7.y, r7.w  // prevHeight<0:Inf>
                    add r5.zw, r4.xxxy, r5.zzzw  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                    mov r7.w, -r1.w
                    add r3.w, r3.w, r7.w  // currRayY<0:NaN:Inf>
                
                #line 143
                  endif 
                
                #line 138
                endloop 
                
                #line 170
                add r4.xy, r6.zwzz, v4.xyxx  // parallaxTex<0:NaN:Inf,1:NaN:Inf>
                
                #line 181
                sample_indexable(texture2d)(float,float,float,float) r5.xyzw, r4.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 196
                sample_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xyxx, t1.xyzw, s0
                mov r4.xyz, r4.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                nop 
                mov r4.xyz, r4.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                mov r6.xyz, v3.xyzx  // tangentW<0,1,2>
                
                #line 206 "LightHelper.fx"
                mul r4.xyz, r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
                add r4.xyz, r4.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // normalT<0:Inf,1:Inf,2:Inf>
                
                #line 209
                mov r3.xyz, r3.xyzx  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r0.w, r6.zxyz, r3.xyzx
                mul r7.xyz, r3.yzxy, r0.wwww
                mov r7.xyz, -r7.xyzx
                add r6.xyz, r6.xyzx, r7.xyzx
                dp3 r0.w, r6.xyzx, r6.xyzx
                rsq r0.w, r0.w
                mul r6.xyz, r0.wwww, r6.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.xyz, r6.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r8.xyz, r3.zxyz, r7.yzxy
                mul r3.xyz, r3.xyzx, r7.xyzx
                mov r3.xyz, -r3.xyzx
                add r3.xyz, r3.xyzx, r8.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                mul r6.xyz, r4.xxxx, r6.xyzx
                mul r3.xyz, r3.xyzx, r4.yyyy
                add r3.xyz, r3.xyzx, r6.xyzx
                mul r0.xyz, r0.xyzx, r4.zzzz
                add r0.xyz, r0.xyzx, r3.xyzx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // NormalSampleToWorldSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 197 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, r0.xyzx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r3.xyz, cb1[16].xyzx  // mat<0,1,2>
                mov r4.xyz, cb1[17].xyzx  // mat<4,5,6>
                mov r6.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r7.xyz, r3.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r10.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r10.xyz, -r10.xyzx
                dp3 r2.w, r10.xyzx, r0.xyzx
                add r2.w, r2.w, r2.w
                mov r2.w, -r2.w
                mul r11.xyz, r0.xyzx, r2.wwww
                add r10.xyz, r10.xyzx, r11.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r2.w, r10.xyzx, r1.xyzx
                max r2.w, r2.w, l(0.000000)
                log r2.w, r2.w
                mul r2.w, r2.w, r6.w
                exp r2.w, r2.w  // specFactor<0:NaN:Inf>
                mul r10.xyz, r4.xyzx, r0.wwww
                mul r8.xyz, r8.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r10.xyz, r6.xyzx, r2.wwww
                mul r9.xyz, r9.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r9.xyz, r1.wwww, r9.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r7.xyz, r7.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r8.xyz, r8.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r9.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                add r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r9.xyz, r9.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r10.xyz, cb0[4].xyzx  // L<0,1,2>
                mov r11.xyz, cb0[5].xyzx  // L<4,5,6>
                mov r12.xyz, cb0[6].xyzx  // L<8,9,10>
                mov r13.xyz, cb0[7].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r13.xyz, -r13.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r10.xyz, r3.xyzx, r10.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r13.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r13.xyz, -r13.xyzx
                dp3 r2.w, r13.xyzx, r0.xyzx
                add r2.w, r2.w, r2.w
                mov r2.w, -r2.w
                mul r14.xyz, r0.xyzx, r2.wwww
                add r13.xyz, r13.xyzx, r14.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r2.w, r13.xyzx, r1.xyzx
                max r2.w, r2.w, l(0.000000)
                log r2.w, r2.w
                mul r2.w, r2.w, r6.w
                exp r2.w, r2.w  // specFactor<0:NaN:Inf>
                mul r13.xyz, r4.xyzx, r0.wwww
                mul r11.xyz, r11.xyzx, r13.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r13.xyz, r6.xyzx, r2.wwww
                mul r12.xyz, r12.xyzx, r13.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r11.xyz, r1.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r12.xyz, r1.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r10.xyz, r10.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r7.xyz, r7.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r8.xyz, r8.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r9.xyz, r9.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r10.xyz, cb0[8].xyzx  // L<0,1,2>
                mov r11.xyz, cb0[9].xyzx  // L<4,5,6>
                mov r12.xyz, cb0[10].xyzx  // L<8,9,10>
                mov r13.xyz, cb0[11].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r13.xyz, -r13.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r3.xyz, r3.xyzx, r10.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r13.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r10.xyz, -r13.xyzx
                dp3 r2.w, r10.xyzx, r0.xyzx
                add r2.w, r2.w, r2.w
                mov r2.w, -r2.w
                mul r13.xyz, r0.xyzx, r2.wwww
                add r10.xyz, r10.xyzx, r13.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r1.x, r10.xyzx, r1.xyzx
                max r1.x, r1.x, l(0.000000)
                log r1.x, r1.x
                mul r1.x, r1.x, r6.w
                exp r1.x, r1.x  // specFactor<0:NaN:Inf>
                mul r4.xyz, r4.xyzx, r0.wwww
                mul r4.xyz, r11.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyz, r6.xyzx, r1.xxxx
                mul r1.xyz, r12.xyzx, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r4.xyz, r1.wwww, r4.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r1.xyz, r1.wwww, r1.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r4.xyz, r4.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r3.xyz, r3.xyzx, r7.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r4.xyz, r4.xyzx, r8.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r1.xyz, r1.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 224
                add r3.xyz, r3.xyzx, r4.xyzx
                mul r3.xyz, r3.xyzx, r5.xyzx
                add r1.xyz, r1.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 229
                dp3 r0.w, r2.xyzx, r0.xyzx
                add r0.w, r0.w, r0.w
                mov r0.w, -r0.w
                mul r0.xyz, r0.wwww, r0.xyzx
                add r0.xyz, r2.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t2.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[19].xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 249
                mul r0.w, r5.w, cb1[17].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 222 instruction slots used
                            
            };
        }

    }

    technique11 Light0TexAlphaClipReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //   float gHeightScale;                // Offset:  320 Size:     4 [unused]
                //   int gMinSampleCount;               // Offset:  324 Size:     4 [unused]
                //   int gMaxSampleCount;               // Offset:  328 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_temps 6
                
                #line 64 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                dp3 r3.x, v3.xyzx, cb0[0].xyzx  // vout<10:NaN:Inf>
                dp3 r3.y, v3.xyzx, cb0[1].xyzx  // vout<11:NaN:Inf>
                dp3 r3.z, v3.xyzx, cb0[2].xyzx  // vout<12:NaN:Inf>
                
                #line 69
                dp4 r4.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 72
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r5.x, r0.xyzw, cb0[12].xyzw  // vout<13:NaN:Inf>
                dp4 r5.y, r0.xyzw, cb0[13].xyzw  // vout<14:NaN:Inf>
                mov o0.xyzw, r4.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xyz, r3.xyzx  // VS<10:NaN:Inf,11:NaN:Inf,12:NaN:Inf>
                mov o4.xy, r5.xyxx  // VS<13:NaN:Inf,14:NaN:Inf>
                ret 
                // Approximately 25 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192 [unused]
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //   float gHeightScale;                // Offset:  320 Size:     4
                //   int gMinSampleCount;               // Offset:  324 Size:     4
                //   int gMaxSampleCount;               // Offset:  328 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gNormalMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[13], immediateIndexed
                dcl_constantbuffer cb1[21], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_output o0.xyzw
                dcl_temps 7
                
                #line 85 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 88
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 91
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 94
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                mov r2.xyz, -r1.xyzx  // viewDirW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 103
                mov r3.xyz, r0.zxyz  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r0.w, v3.zxyz, r3.xyzx
                mul r4.xyz, r3.yzxy, r0.wwww
                mov r4.xyz, -r4.xyzx
                add r4.xyz, r4.xyzx, v3.xyzx
                dp3 r0.w, r4.xyzx, r4.xyzx
                rsq r0.w, r0.w
                mul r4.xyz, r0.wwww, r4.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r4.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r6.xyz, r3.zxyz, r5.yzxy
                mul r3.xyz, r3.xyzx, r5.xyzx
                mov r3.xyz, -r3.xyzx
                add r3.xyz, r3.xyzx, r6.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 109
                dp3 r4.x, r2.xyzx, r4.xyzx  // viewDirTS<0:NaN:Inf>
                dp3 r4.y, r2.xyzx, r3.xyzx  // viewDirTS<1:NaN:Inf>
                dp3 r0.w, r2.xyzx, r0.xyzx  // viewDirTS<2:NaN:Inf>
                mov r2.xy, -r4.xyxx
                mul r2.xy, r2.xyxx, cb1[20].xxxx
                div r2.xy, r2.xyxx, r0.wwww  // maxParallaxOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 116
                itof r0.w, cb1[20].z
                itof r1.w, cb1[20].y
                dp3 r0.x, r1.xyzx, r0.xyzx
                mov r0.y, -r0.w
                add r0.y, r0.y, r1.w
                mul r0.x, r0.y, r0.x
                add r0.x, r0.x, r0.w
                ftoi r0.x, r0.x  // sampleCount<0>
                itof r0.y, r0.x
                div r0.y, l(1.000000), r0.y  // yStep<0:Inf>
                mul r0.zw, r0.yyyy, r2.xxxy  // texStep<0:NaN:Inf,1:NaN:Inf>
                
                #line 125
                deriv_rtx_coarse r1.xy, v4.xyxx  // dx<0:Inf,1:Inf>
                deriv_rty_coarse r1.zw, v4.xxxy  // dy<0:Inf,1:Inf>
                
                #line 138
                mov r2.xy, l(0,0,0,0)  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r2.zw, l(0,0,0,0)  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r3.xy, l(0,0,0,0)  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r3.z, l(0)  // sampleIndex<0>
                mov r3.w, l(1.000000)  // currRayY<0:NaN:Inf>
                mov r4.x, l(1.000000)  // prevRayY<0:NaN:Inf>
                mov r4.y, l(0)  // prevHeight<0:Inf>
                loop 
                  iadd r4.z, r0.x, l(1)
                  ilt r4.w, r3.z, r4.z
                  breakc_z r4.w
                  add r5.xy, r2.xyxx, v4.xyxx
                  sample_d_indexable(texture2d)(float,float,float,float) r4.w, r5.xyxx, t1.xyzw, s0, r1.xyxx, r1.zwzz  // currHeight<0:Inf>
                
                #line 143
                  lt r5.x, r3.w, r4.w
                  if_nz r5.x
                
                #line 147
                    mov r5.x, -r4.x
                    add r5.y, r4.y, r5.x
                    mov r5.z, -r4.w
                    add r5.z, r4.y, r5.z
                    add r5.z, r3.w, r5.z
                    add r5.x, r5.x, r5.z
                    div r5.x, r5.y, r5.x  // t<0:NaN:Inf>
                    mul r5.xy, r0.zwzz, r5.xxxx
                    add r3.xy, r2.zwzz, r5.xyxx  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r3.z, r4.z  // sampleIndex<0>
                
                #line 143
                  else 
                
                #line 156
                    iadd r3.z, r3.z, l(1)  // sampleIndex<0>
                    mov r2.zw, r2.xxxy  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r4.x, r3.w  // prevRayY<0:NaN:Inf>
                    mov r4.y, r4.w  // prevHeight<0:Inf>
                    add r2.xy, r0.zwzz, r2.xyxx  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                    mov r4.w, -r0.y
                    add r3.w, r3.w, r4.w  // currRayY<0:NaN:Inf>
                
                #line 143
                  endif 
                
                #line 138
                endloop 
                
                #line 170
                add r0.xy, r3.xyxx, v4.xyxx  // parallaxTex<0:NaN:Inf,1:NaN:Inf>
                
                #line 181
                sample_indexable(texture2d)(float,float,float,float) r0.xyzw, r0.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 188
                add r1.x, r0.w, l(-0.100000)
                lt r1.x, r1.x, l(0.000000)
                and r1.x, r1.x, l(-1)
                discard r1.x
                
                #line 197
                nop 
                
                #line 203
                mov r0.xyz, r0.xyzx  // litColor<0:Inf,1:Inf,2:Inf>
                
                #line 249
                mul r0.w, r0.w, cb1[17].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:Inf,1:Inf,2:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 88 instruction slots used
                            
            };
        }

    }

    technique11 Light1TexAlphaClipReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //   float gHeightScale;                // Offset:  320 Size:     4 [unused]
                //   int gMinSampleCount;               // Offset:  324 Size:     4 [unused]
                //   int gMaxSampleCount;               // Offset:  328 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_temps 6
                
                #line 64 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                dp3 r3.x, v3.xyzx, cb0[0].xyzx  // vout<10:NaN:Inf>
                dp3 r3.y, v3.xyzx, cb0[1].xyzx  // vout<11:NaN:Inf>
                dp3 r3.z, v3.xyzx, cb0[2].xyzx  // vout<12:NaN:Inf>
                
                #line 69
                dp4 r4.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 72
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r5.x, r0.xyzw, cb0[12].xyzw  // vout<13:NaN:Inf>
                dp4 r5.y, r0.xyzw, cb0[13].xyzw  // vout<14:NaN:Inf>
                mov o0.xyzw, r4.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xyz, r3.xyzx  // VS<10:NaN:Inf,11:NaN:Inf,12:NaN:Inf>
                mov o4.xy, r5.xyxx  // VS<13:NaN:Inf,14:NaN:Inf>
                ret 
                // Approximately 25 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //   float gHeightScale;                // Offset:  320 Size:     4
                //   int gMinSampleCount;               // Offset:  324 Size:     4
                //   int gMaxSampleCount;               // Offset:  328 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gNormalMap                        texture  float4          2d    1        1
                // gCubeMap                          texture  float4        cube    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[13], immediateIndexed
                dcl_constantbuffer cb1[21], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texturecube (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_output o0.xyzw
                dcl_temps 11
                
                #line 85 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 88
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 91
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 94
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                mov r2.xyz, -r1.xyzx  // viewDirW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 103
                mov r3.xyz, r0.zxyz  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r0.w, v3.zxyz, r3.xyzx
                mul r4.xyz, r3.yzxy, r0.wwww
                mov r4.xyz, -r4.xyzx
                add r4.xyz, r4.xyzx, v3.xyzx
                dp3 r0.w, r4.xyzx, r4.xyzx
                rsq r0.w, r0.w
                mul r4.xyz, r0.wwww, r4.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r4.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r6.xyz, r3.zxyz, r5.yzxy
                mul r5.xyz, r3.xyzx, r5.xyzx
                mov r5.xyz, -r5.xyzx
                add r5.xyz, r5.xyzx, r6.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 109
                dp3 r4.x, r2.xyzx, r4.xyzx  // viewDirTS<0:NaN:Inf>
                dp3 r4.y, r2.xyzx, r5.xyzx  // viewDirTS<1:NaN:Inf>
                dp3 r0.w, r2.xyzx, r0.xyzx  // viewDirTS<2:NaN:Inf>
                mov r4.xy, -r4.xyxx
                mul r4.xy, r4.xyxx, cb1[20].xxxx
                div r4.xy, r4.xyxx, r0.wwww  // maxParallaxOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 116
                itof r0.w, cb1[20].z
                itof r1.w, cb1[20].y
                dp3 r2.w, r1.xyzx, r0.xyzx
                mov r3.w, -r0.w
                add r1.w, r1.w, r3.w
                mul r1.w, r1.w, r2.w
                add r0.w, r0.w, r1.w
                ftoi r0.w, r0.w  // sampleCount<0>
                itof r1.w, r0.w
                div r1.w, l(1.000000), r1.w  // yStep<0:Inf>
                mul r4.xy, r1.wwww, r4.xyxx  // texStep<0:NaN:Inf,1:NaN:Inf>
                
                #line 125
                deriv_rtx_coarse r4.zw, v4.xxxy  // dx<0:Inf,1:Inf>
                deriv_rty_coarse r5.xy, v4.xyxx  // dy<0:Inf,1:Inf>
                
                #line 138
                mov r5.zw, l(0,0,0,0)  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r6.xy, l(0,0,0,0)  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r6.zw, l(0,0,0,0)  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r2.w, l(0)  // sampleIndex<0>
                mov r3.w, l(1.000000)  // currRayY<0:NaN:Inf>
                mov r7.x, l(1.000000)  // prevRayY<0:NaN:Inf>
                mov r7.y, l(0)  // prevHeight<0:Inf>
                loop 
                  iadd r7.z, r0.w, l(1)
                  ilt r7.w, r2.w, r7.z
                  breakc_z r7.w
                  add r8.xy, r5.zwzz, v4.xyxx
                  sample_d_indexable(texture2d)(float,float,float,float) r7.w, r8.xyxx, t1.xyzw, s0, r4.zwzz, r5.xyxx  // currHeight<0:Inf>
                
                #line 143
                  lt r8.x, r3.w, r7.w
                  if_nz r8.x
                
                #line 147
                    mov r8.x, -r7.x
                    add r8.y, r7.y, r8.x
                    mov r8.z, -r7.w
                    add r8.z, r7.y, r8.z
                    add r8.z, r3.w, r8.z
                    add r8.x, r8.x, r8.z
                    div r8.x, r8.y, r8.x  // t<0:NaN:Inf>
                    mul r8.xy, r4.xyxx, r8.xxxx
                    add r6.zw, r6.xxxy, r8.xxxy  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r2.w, r7.z  // sampleIndex<0>
                
                #line 143
                  else 
                
                #line 156
                    iadd r2.w, r2.w, l(1)  // sampleIndex<0>
                    mov r6.xy, r5.zwzz  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r7.x, r3.w  // prevRayY<0:NaN:Inf>
                    mov r7.y, r7.w  // prevHeight<0:Inf>
                    add r5.zw, r4.xxxy, r5.zzzw  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                    mov r7.w, -r1.w
                    add r3.w, r3.w, r7.w  // currRayY<0:NaN:Inf>
                
                #line 143
                  endif 
                
                #line 138
                endloop 
                
                #line 170
                add r4.xy, r6.zwzz, v4.xyxx  // parallaxTex<0:NaN:Inf,1:NaN:Inf>
                
                #line 181
                sample_indexable(texture2d)(float,float,float,float) r5.xyzw, r4.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 188
                add r0.w, r5.w, l(-0.100000)
                lt r0.w, r0.w, l(0.000000)
                and r0.w, r0.w, l(-1)
                discard r0.w
                
                #line 196
                sample_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xyxx, t1.xyzw, s0
                mov r4.xyz, r4.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                nop 
                mov r4.xyz, r4.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                mov r6.xyz, v3.xyzx  // tangentW<0,1,2>
                
                #line 206 "LightHelper.fx"
                mul r4.xyz, r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
                add r4.xyz, r4.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // normalT<0:Inf,1:Inf,2:Inf>
                
                #line 209
                mov r3.xyz, r3.xyzx  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r0.w, r6.zxyz, r3.xyzx
                mul r7.xyz, r3.yzxy, r0.wwww
                mov r7.xyz, -r7.xyzx
                add r6.xyz, r6.xyzx, r7.xyzx
                dp3 r0.w, r6.xyzx, r6.xyzx
                rsq r0.w, r0.w
                mul r6.xyz, r0.wwww, r6.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.xyz, r6.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r8.xyz, r3.zxyz, r7.yzxy
                mul r3.xyz, r3.xyzx, r7.xyzx
                mov r3.xyz, -r3.xyzx
                add r3.xyz, r3.xyzx, r8.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                mul r6.xyz, r4.xxxx, r6.xyzx
                mul r3.xyz, r3.xyzx, r4.yyyy
                add r3.xyz, r3.xyzx, r6.xyzx
                mul r0.xyz, r0.xyzx, r4.zzzz
                add r0.xyz, r0.xyzx, r3.xyzx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // NormalSampleToWorldSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 197 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, r0.xyzx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r3.xyz, cb1[16].xyzx  // mat<0,1,2>
                mov r4.xyz, cb1[17].xyzx  // mat<4,5,6>
                mov r6.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r3.xyz, r3.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r10.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r7.xyz, -r10.xyzx
                dp3 r2.w, r7.xyzx, r0.xyzx
                add r2.w, r2.w, r2.w
                mov r2.w, -r2.w
                mul r10.xyz, r0.xyzx, r2.wwww
                add r7.xyz, r7.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r1.x, r7.xyzx, r1.xyzx
                max r1.x, r1.x, l(0.000000)
                log r1.x, r1.x
                mul r1.x, r1.x, r6.w
                exp r1.x, r1.x  // specFactor<0:NaN:Inf>
                mul r4.xyz, r4.xyzx, r0.wwww
                mul r4.xyz, r8.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyz, r6.xyzx, r1.xxxx
                mul r1.xyz, r9.xyzx, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r4.xyz, r1.wwww, r4.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r1.xyz, r1.wwww, r1.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r4.xyz, r4.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 224
                add r3.xyz, r3.xyzx, r4.xyzx
                mul r3.xyz, r3.xyzx, r5.xyzx
                add r1.xyz, r1.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 229
                dp3 r0.w, r2.xyzx, r0.xyzx
                add r0.w, r0.w, r0.w
                mov r0.w, -r0.w
                mul r0.xyz, r0.wwww, r0.xyzx
                add r0.xyz, r2.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t2.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[19].xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 249
                mul r0.w, r5.w, cb1[17].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 162 instruction slots used
                            
            };
        }

    }

    technique11 Light2TexAlphaClipReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //   float gHeightScale;                // Offset:  320 Size:     4 [unused]
                //   int gMinSampleCount;               // Offset:  324 Size:     4 [unused]
                //   int gMaxSampleCount;               // Offset:  328 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_temps 6
                
                #line 64 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                dp3 r3.x, v3.xyzx, cb0[0].xyzx  // vout<10:NaN:Inf>
                dp3 r3.y, v3.xyzx, cb0[1].xyzx  // vout<11:NaN:Inf>
                dp3 r3.z, v3.xyzx, cb0[2].xyzx  // vout<12:NaN:Inf>
                
                #line 69
                dp4 r4.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 72
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r5.x, r0.xyzw, cb0[12].xyzw  // vout<13:NaN:Inf>
                dp4 r5.y, r0.xyzw, cb0[13].xyzw  // vout<14:NaN:Inf>
                mov o0.xyzw, r4.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xyz, r3.xyzx  // VS<10:NaN:Inf,11:NaN:Inf,12:NaN:Inf>
                mov o4.xy, r5.xyxx  // VS<13:NaN:Inf,14:NaN:Inf>
                ret 
                // Approximately 25 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //   float gHeightScale;                // Offset:  320 Size:     4
                //   int gMinSampleCount;               // Offset:  324 Size:     4
                //   int gMaxSampleCount;               // Offset:  328 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gNormalMap                        texture  float4          2d    1        1
                // gCubeMap                          texture  float4        cube    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[13], immediateIndexed
                dcl_constantbuffer cb1[21], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texturecube (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_output o0.xyzw
                dcl_temps 14
                
                #line 85 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 88
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 91
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 94
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                mov r2.xyz, -r1.xyzx  // viewDirW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 103
                mov r3.xyz, r0.zxyz  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r0.w, v3.zxyz, r3.xyzx
                mul r4.xyz, r3.yzxy, r0.wwww
                mov r4.xyz, -r4.xyzx
                add r4.xyz, r4.xyzx, v3.xyzx
                dp3 r0.w, r4.xyzx, r4.xyzx
                rsq r0.w, r0.w
                mul r4.xyz, r0.wwww, r4.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r4.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r6.xyz, r3.zxyz, r5.yzxy
                mul r5.xyz, r3.xyzx, r5.xyzx
                mov r5.xyz, -r5.xyzx
                add r5.xyz, r5.xyzx, r6.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 109
                dp3 r4.x, r2.xyzx, r4.xyzx  // viewDirTS<0:NaN:Inf>
                dp3 r4.y, r2.xyzx, r5.xyzx  // viewDirTS<1:NaN:Inf>
                dp3 r0.w, r2.xyzx, r0.xyzx  // viewDirTS<2:NaN:Inf>
                mov r4.xy, -r4.xyxx
                mul r4.xy, r4.xyxx, cb1[20].xxxx
                div r4.xy, r4.xyxx, r0.wwww  // maxParallaxOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 116
                itof r0.w, cb1[20].z
                itof r1.w, cb1[20].y
                dp3 r2.w, r1.xyzx, r0.xyzx
                mov r3.w, -r0.w
                add r1.w, r1.w, r3.w
                mul r1.w, r1.w, r2.w
                add r0.w, r0.w, r1.w
                ftoi r0.w, r0.w  // sampleCount<0>
                itof r1.w, r0.w
                div r1.w, l(1.000000), r1.w  // yStep<0:Inf>
                mul r4.xy, r1.wwww, r4.xyxx  // texStep<0:NaN:Inf,1:NaN:Inf>
                
                #line 125
                deriv_rtx_coarse r4.zw, v4.xxxy  // dx<0:Inf,1:Inf>
                deriv_rty_coarse r5.xy, v4.xyxx  // dy<0:Inf,1:Inf>
                
                #line 138
                mov r5.zw, l(0,0,0,0)  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r6.xy, l(0,0,0,0)  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r6.zw, l(0,0,0,0)  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r2.w, l(0)  // sampleIndex<0>
                mov r3.w, l(1.000000)  // currRayY<0:NaN:Inf>
                mov r7.x, l(1.000000)  // prevRayY<0:NaN:Inf>
                mov r7.y, l(0)  // prevHeight<0:Inf>
                loop 
                  iadd r7.z, r0.w, l(1)
                  ilt r7.w, r2.w, r7.z
                  breakc_z r7.w
                  add r8.xy, r5.zwzz, v4.xyxx
                  sample_d_indexable(texture2d)(float,float,float,float) r7.w, r8.xyxx, t1.xyzw, s0, r4.zwzz, r5.xyxx  // currHeight<0:Inf>
                
                #line 143
                  lt r8.x, r3.w, r7.w
                  if_nz r8.x
                
                #line 147
                    mov r8.x, -r7.x
                    add r8.y, r7.y, r8.x
                    mov r8.z, -r7.w
                    add r8.z, r7.y, r8.z
                    add r8.z, r3.w, r8.z
                    add r8.x, r8.x, r8.z
                    div r8.x, r8.y, r8.x  // t<0:NaN:Inf>
                    mul r8.xy, r4.xyxx, r8.xxxx
                    add r6.zw, r6.xxxy, r8.xxxy  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r2.w, r7.z  // sampleIndex<0>
                
                #line 143
                  else 
                
                #line 156
                    iadd r2.w, r2.w, l(1)  // sampleIndex<0>
                    mov r6.xy, r5.zwzz  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r7.x, r3.w  // prevRayY<0:NaN:Inf>
                    mov r7.y, r7.w  // prevHeight<0:Inf>
                    add r5.zw, r4.xxxy, r5.zzzw  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                    mov r7.w, -r1.w
                    add r3.w, r3.w, r7.w  // currRayY<0:NaN:Inf>
                
                #line 143
                  endif 
                
                #line 138
                endloop 
                
                #line 170
                add r4.xy, r6.zwzz, v4.xyxx  // parallaxTex<0:NaN:Inf,1:NaN:Inf>
                
                #line 181
                sample_indexable(texture2d)(float,float,float,float) r5.xyzw, r4.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 188
                add r0.w, r5.w, l(-0.100000)
                lt r0.w, r0.w, l(0.000000)
                and r0.w, r0.w, l(-1)
                discard r0.w
                
                #line 196
                sample_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xyxx, t1.xyzw, s0
                mov r4.xyz, r4.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                nop 
                mov r4.xyz, r4.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                mov r6.xyz, v3.xyzx  // tangentW<0,1,2>
                
                #line 206 "LightHelper.fx"
                mul r4.xyz, r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
                add r4.xyz, r4.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // normalT<0:Inf,1:Inf,2:Inf>
                
                #line 209
                mov r3.xyz, r3.xyzx  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r0.w, r6.zxyz, r3.xyzx
                mul r7.xyz, r3.yzxy, r0.wwww
                mov r7.xyz, -r7.xyzx
                add r6.xyz, r6.xyzx, r7.xyzx
                dp3 r0.w, r6.xyzx, r6.xyzx
                rsq r0.w, r0.w
                mul r6.xyz, r0.wwww, r6.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.xyz, r6.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r8.xyz, r3.zxyz, r7.yzxy
                mul r3.xyz, r3.xyzx, r7.xyzx
                mov r3.xyz, -r3.xyzx
                add r3.xyz, r3.xyzx, r8.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                mul r6.xyz, r4.xxxx, r6.xyzx
                mul r3.xyz, r3.xyzx, r4.yyyy
                add r3.xyz, r3.xyzx, r6.xyzx
                mul r0.xyz, r0.xyzx, r4.zzzz
                add r0.xyz, r0.xyzx, r3.xyzx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // NormalSampleToWorldSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 197 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, r0.xyzx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r3.xyz, cb1[16].xyzx  // mat<0,1,2>
                mov r4.xyz, cb1[17].xyzx  // mat<4,5,6>
                mov r6.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r7.xyz, r3.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r10.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r10.xyz, -r10.xyzx
                dp3 r2.w, r10.xyzx, r0.xyzx
                add r2.w, r2.w, r2.w
                mov r2.w, -r2.w
                mul r11.xyz, r0.xyzx, r2.wwww
                add r10.xyz, r10.xyzx, r11.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r2.w, r10.xyzx, r1.xyzx
                max r2.w, r2.w, l(0.000000)
                log r2.w, r2.w
                mul r2.w, r2.w, r6.w
                exp r2.w, r2.w  // specFactor<0:NaN:Inf>
                mul r10.xyz, r4.xyzx, r0.wwww
                mul r8.xyz, r8.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r10.xyz, r6.xyzx, r2.wwww
                mul r9.xyz, r9.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r9.xyz, r1.wwww, r9.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r7.xyz, r7.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r8.xyz, r8.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r9.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                add r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r9.xyz, r9.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r10.xyz, cb0[4].xyzx  // L<0,1,2>
                mov r11.xyz, cb0[5].xyzx  // L<4,5,6>
                mov r12.xyz, cb0[6].xyzx  // L<8,9,10>
                mov r13.xyz, cb0[7].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r13.xyz, -r13.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r3.xyz, r3.xyzx, r10.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r13.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r10.xyz, -r13.xyzx
                dp3 r2.w, r10.xyzx, r0.xyzx
                add r2.w, r2.w, r2.w
                mov r2.w, -r2.w
                mul r13.xyz, r0.xyzx, r2.wwww
                add r10.xyz, r10.xyzx, r13.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r1.x, r10.xyzx, r1.xyzx
                max r1.x, r1.x, l(0.000000)
                log r1.x, r1.x
                mul r1.x, r1.x, r6.w
                exp r1.x, r1.x  // specFactor<0:NaN:Inf>
                mul r4.xyz, r4.xyzx, r0.wwww
                mul r4.xyz, r11.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyz, r6.xyzx, r1.xxxx
                mul r1.xyz, r12.xyzx, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r4.xyz, r1.wwww, r4.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r1.xyz, r1.wwww, r1.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r4.xyz, r4.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r3.xyz, r3.xyzx, r7.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r4.xyz, r4.xyzx, r8.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r1.xyz, r1.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 224
                add r3.xyz, r3.xyzx, r4.xyzx
                mul r3.xyz, r3.xyzx, r5.xyzx
                add r1.xyz, r1.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 229
                dp3 r0.w, r2.xyzx, r0.xyzx
                add r0.w, r0.w, r0.w
                mov r0.w, -r0.w
                mul r0.xyz, r0.wwww, r0.xyzx
                add r0.xyz, r2.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t2.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[19].xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 249
                mul r0.w, r5.w, cb1[17].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 194 instruction slots used
                            
            };
        }

    }

    technique11 Light3TexAlphaClipReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //   float gHeightScale;                // Offset:  320 Size:     4 [unused]
                //   int gMinSampleCount;               // Offset:  324 Size:     4 [unused]
                //   int gMaxSampleCount;               // Offset:  328 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_temps 6
                
                #line 64 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                dp3 r3.x, v3.xyzx, cb0[0].xyzx  // vout<10:NaN:Inf>
                dp3 r3.y, v3.xyzx, cb0[1].xyzx  // vout<11:NaN:Inf>
                dp3 r3.z, v3.xyzx, cb0[2].xyzx  // vout<12:NaN:Inf>
                
                #line 69
                dp4 r4.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 72
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r5.x, r0.xyzw, cb0[12].xyzw  // vout<13:NaN:Inf>
                dp4 r5.y, r0.xyzw, cb0[13].xyzw  // vout<14:NaN:Inf>
                mov o0.xyzw, r4.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xyz, r3.xyzx  // VS<10:NaN:Inf,11:NaN:Inf,12:NaN:Inf>
                mov o4.xy, r5.xyxx  // VS<13:NaN:Inf,14:NaN:Inf>
                ret 
                // Approximately 25 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //   float gHeightScale;                // Offset:  320 Size:     4
                //   int gMinSampleCount;               // Offset:  324 Size:     4
                //   int gMaxSampleCount;               // Offset:  328 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gNormalMap                        texture  float4          2d    1        1
                // gCubeMap                          texture  float4        cube    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[13], immediateIndexed
                dcl_constantbuffer cb1[21], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texturecube (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_output o0.xyzw
                dcl_temps 15
                
                #line 85 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 88
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 91
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 94
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                mov r2.xyz, -r1.xyzx  // viewDirW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 103
                mov r3.xyz, r0.zxyz  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r0.w, v3.zxyz, r3.xyzx
                mul r4.xyz, r3.yzxy, r0.wwww
                mov r4.xyz, -r4.xyzx
                add r4.xyz, r4.xyzx, v3.xyzx
                dp3 r0.w, r4.xyzx, r4.xyzx
                rsq r0.w, r0.w
                mul r4.xyz, r0.wwww, r4.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r4.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r6.xyz, r3.zxyz, r5.yzxy
                mul r5.xyz, r3.xyzx, r5.xyzx
                mov r5.xyz, -r5.xyzx
                add r5.xyz, r5.xyzx, r6.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 109
                dp3 r4.x, r2.xyzx, r4.xyzx  // viewDirTS<0:NaN:Inf>
                dp3 r4.y, r2.xyzx, r5.xyzx  // viewDirTS<1:NaN:Inf>
                dp3 r0.w, r2.xyzx, r0.xyzx  // viewDirTS<2:NaN:Inf>
                mov r4.xy, -r4.xyxx
                mul r4.xy, r4.xyxx, cb1[20].xxxx
                div r4.xy, r4.xyxx, r0.wwww  // maxParallaxOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 116
                itof r0.w, cb1[20].z
                itof r1.w, cb1[20].y
                dp3 r2.w, r1.xyzx, r0.xyzx
                mov r3.w, -r0.w
                add r1.w, r1.w, r3.w
                mul r1.w, r1.w, r2.w
                add r0.w, r0.w, r1.w
                ftoi r0.w, r0.w  // sampleCount<0>
                itof r1.w, r0.w
                div r1.w, l(1.000000), r1.w  // yStep<0:Inf>
                mul r4.xy, r1.wwww, r4.xyxx  // texStep<0:NaN:Inf,1:NaN:Inf>
                
                #line 125
                deriv_rtx_coarse r4.zw, v4.xxxy  // dx<0:Inf,1:Inf>
                deriv_rty_coarse r5.xy, v4.xyxx  // dy<0:Inf,1:Inf>
                
                #line 138
                mov r5.zw, l(0,0,0,0)  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r6.xy, l(0,0,0,0)  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r6.zw, l(0,0,0,0)  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r2.w, l(0)  // sampleIndex<0>
                mov r3.w, l(1.000000)  // currRayY<0:NaN:Inf>
                mov r7.x, l(1.000000)  // prevRayY<0:NaN:Inf>
                mov r7.y, l(0)  // prevHeight<0:Inf>
                loop 
                  iadd r7.z, r0.w, l(1)
                  ilt r7.w, r2.w, r7.z
                  breakc_z r7.w
                  add r8.xy, r5.zwzz, v4.xyxx
                  sample_d_indexable(texture2d)(float,float,float,float) r7.w, r8.xyxx, t1.xyzw, s0, r4.zwzz, r5.xyxx  // currHeight<0:Inf>
                
                #line 143
                  lt r8.x, r3.w, r7.w
                  if_nz r8.x
                
                #line 147
                    mov r8.x, -r7.x
                    add r8.y, r7.y, r8.x
                    mov r8.z, -r7.w
                    add r8.z, r7.y, r8.z
                    add r8.z, r3.w, r8.z
                    add r8.x, r8.x, r8.z
                    div r8.x, r8.y, r8.x  // t<0:NaN:Inf>
                    mul r8.xy, r4.xyxx, r8.xxxx
                    add r6.zw, r6.xxxy, r8.xxxy  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r2.w, r7.z  // sampleIndex<0>
                
                #line 143
                  else 
                
                #line 156
                    iadd r2.w, r2.w, l(1)  // sampleIndex<0>
                    mov r6.xy, r5.zwzz  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r7.x, r3.w  // prevRayY<0:NaN:Inf>
                    mov r7.y, r7.w  // prevHeight<0:Inf>
                    add r5.zw, r4.xxxy, r5.zzzw  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                    mov r7.w, -r1.w
                    add r3.w, r3.w, r7.w  // currRayY<0:NaN:Inf>
                
                #line 143
                  endif 
                
                #line 138
                endloop 
                
                #line 170
                add r4.xy, r6.zwzz, v4.xyxx  // parallaxTex<0:NaN:Inf,1:NaN:Inf>
                
                #line 181
                sample_indexable(texture2d)(float,float,float,float) r5.xyzw, r4.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 188
                add r0.w, r5.w, l(-0.100000)
                lt r0.w, r0.w, l(0.000000)
                and r0.w, r0.w, l(-1)
                discard r0.w
                
                #line 196
                sample_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xyxx, t1.xyzw, s0
                mov r4.xyz, r4.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                nop 
                mov r4.xyz, r4.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                mov r6.xyz, v3.xyzx  // tangentW<0,1,2>
                
                #line 206 "LightHelper.fx"
                mul r4.xyz, r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
                add r4.xyz, r4.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // normalT<0:Inf,1:Inf,2:Inf>
                
                #line 209
                mov r3.xyz, r3.xyzx  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r0.w, r6.zxyz, r3.xyzx
                mul r7.xyz, r3.yzxy, r0.wwww
                mov r7.xyz, -r7.xyzx
                add r6.xyz, r6.xyzx, r7.xyzx
                dp3 r0.w, r6.xyzx, r6.xyzx
                rsq r0.w, r0.w
                mul r6.xyz, r0.wwww, r6.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.xyz, r6.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r8.xyz, r3.zxyz, r7.yzxy
                mul r3.xyz, r3.xyzx, r7.xyzx
                mov r3.xyz, -r3.xyzx
                add r3.xyz, r3.xyzx, r8.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                mul r6.xyz, r4.xxxx, r6.xyzx
                mul r3.xyz, r3.xyzx, r4.yyyy
                add r3.xyz, r3.xyzx, r6.xyzx
                mul r0.xyz, r0.xyzx, r4.zzzz
                add r0.xyz, r0.xyzx, r3.xyzx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // NormalSampleToWorldSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 197 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, r0.xyzx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r3.xyz, cb1[16].xyzx  // mat<0,1,2>
                mov r4.xyz, cb1[17].xyzx  // mat<4,5,6>
                mov r6.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r7.xyz, r3.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r10.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r10.xyz, -r10.xyzx
                dp3 r2.w, r10.xyzx, r0.xyzx
                add r2.w, r2.w, r2.w
                mov r2.w, -r2.w
                mul r11.xyz, r0.xyzx, r2.wwww
                add r10.xyz, r10.xyzx, r11.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r2.w, r10.xyzx, r1.xyzx
                max r2.w, r2.w, l(0.000000)
                log r2.w, r2.w
                mul r2.w, r2.w, r6.w
                exp r2.w, r2.w  // specFactor<0:NaN:Inf>
                mul r10.xyz, r4.xyzx, r0.wwww
                mul r8.xyz, r8.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r10.xyz, r6.xyzx, r2.wwww
                mul r9.xyz, r9.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r9.xyz, r1.wwww, r9.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r7.xyz, r7.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r8.xyz, r8.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r9.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                add r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r9.xyz, r9.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r10.xyz, cb0[4].xyzx  // L<0,1,2>
                mov r11.xyz, cb0[5].xyzx  // L<4,5,6>
                mov r12.xyz, cb0[6].xyzx  // L<8,9,10>
                mov r13.xyz, cb0[7].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r13.xyz, -r13.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r10.xyz, r3.xyzx, r10.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r13.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r13.xyz, -r13.xyzx
                dp3 r2.w, r13.xyzx, r0.xyzx
                add r2.w, r2.w, r2.w
                mov r2.w, -r2.w
                mul r14.xyz, r0.xyzx, r2.wwww
                add r13.xyz, r13.xyzx, r14.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r2.w, r13.xyzx, r1.xyzx
                max r2.w, r2.w, l(0.000000)
                log r2.w, r2.w
                mul r2.w, r2.w, r6.w
                exp r2.w, r2.w  // specFactor<0:NaN:Inf>
                mul r13.xyz, r4.xyzx, r0.wwww
                mul r11.xyz, r11.xyzx, r13.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r13.xyz, r6.xyzx, r2.wwww
                mul r12.xyz, r12.xyzx, r13.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r11.xyz, r1.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r12.xyz, r1.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r10.xyz, r10.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r7.xyz, r7.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r8.xyz, r8.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r9.xyz, r9.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r10.xyz, cb0[8].xyzx  // L<0,1,2>
                mov r11.xyz, cb0[9].xyzx  // L<4,5,6>
                mov r12.xyz, cb0[10].xyzx  // L<8,9,10>
                mov r13.xyz, cb0[11].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r13.xyz, -r13.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r3.xyz, r3.xyzx, r10.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r13.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r10.xyz, -r13.xyzx
                dp3 r2.w, r10.xyzx, r0.xyzx
                add r2.w, r2.w, r2.w
                mov r2.w, -r2.w
                mul r13.xyz, r0.xyzx, r2.wwww
                add r10.xyz, r10.xyzx, r13.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r1.x, r10.xyzx, r1.xyzx
                max r1.x, r1.x, l(0.000000)
                log r1.x, r1.x
                mul r1.x, r1.x, r6.w
                exp r1.x, r1.x  // specFactor<0:NaN:Inf>
                mul r4.xyz, r4.xyzx, r0.wwww
                mul r4.xyz, r11.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyz, r6.xyzx, r1.xxxx
                mul r1.xyz, r12.xyzx, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r4.xyz, r1.wwww, r4.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r1.xyz, r1.wwww, r1.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r4.xyz, r4.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r3.xyz, r3.xyzx, r7.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r4.xyz, r4.xyzx, r8.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r1.xyz, r1.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 224
                add r3.xyz, r3.xyzx, r4.xyzx
                mul r3.xyz, r3.xyzx, r5.xyzx
                add r1.xyz, r1.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 229
                dp3 r0.w, r2.xyzx, r0.xyzx
                add r0.w, r0.w, r0.w
                mov r0.w, -r0.w
                mul r0.xyz, r0.wwww, r0.xyzx
                add r0.xyz, r2.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t2.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[19].xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 249
                mul r0.w, r5.w, cb1[17].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 226 instruction slots used
                            
            };
        }

    }

    technique11 Light1FogReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //   float gHeightScale;                // Offset:  320 Size:     4 [unused]
                //   int gMinSampleCount;               // Offset:  324 Size:     4 [unused]
                //   int gMaxSampleCount;               // Offset:  328 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_temps 6
                
                #line 64 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                dp3 r3.x, v3.xyzx, cb0[0].xyzx  // vout<10:NaN:Inf>
                dp3 r3.y, v3.xyzx, cb0[1].xyzx  // vout<11:NaN:Inf>
                dp3 r3.z, v3.xyzx, cb0[2].xyzx  // vout<12:NaN:Inf>
                
                #line 69
                dp4 r4.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 72
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r5.x, r0.xyzw, cb0[12].xyzw  // vout<13:NaN:Inf>
                dp4 r5.y, r0.xyzw, cb0[13].xyzw  // vout<14:NaN:Inf>
                mov o0.xyzw, r4.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xyz, r3.xyzx  // VS<10:NaN:Inf,11:NaN:Inf,12:NaN:Inf>
                mov o4.xy, r5.xyxx  // VS<13:NaN:Inf,14:NaN:Inf>
                ret 
                // Approximately 25 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4
                //   float gFogRange;                   // Offset:  208 Size:     4
                //   float4 gFogColor;                  // Offset:  224 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //   float gHeightScale;                // Offset:  320 Size:     4
                //   int gMinSampleCount;               // Offset:  324 Size:     4
                //   int gMaxSampleCount;               // Offset:  328 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gNormalMap                        texture  float4          2d    0        1
                // gCubeMap                          texture  float4        cube    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[15], immediateIndexed
                dcl_constantbuffer cb1[21], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texturecube (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_output o0.xyzw
                dcl_temps 10
                
                #line 85 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 88
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 91
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 94
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                mov r2.xyz, -r1.xyzx  // viewDirW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 103
                mov r3.xyz, r0.zxyz  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r1.w, v3.zxyz, r3.xyzx
                mul r4.xyz, r3.yzxy, r1.wwww
                mov r4.xyz, -r4.xyzx
                add r4.xyz, r4.xyzx, v3.xyzx
                dp3 r1.w, r4.xyzx, r4.xyzx
                rsq r1.w, r1.w
                mul r4.xyz, r1.wwww, r4.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r4.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r6.xyz, r3.zxyz, r5.yzxy
                mul r5.xyz, r3.xyzx, r5.xyzx
                mov r5.xyz, -r5.xyzx
                add r5.xyz, r5.xyzx, r6.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 109
                dp3 r4.x, r2.xyzx, r4.xyzx  // viewDirTS<0:NaN:Inf>
                dp3 r4.y, r2.xyzx, r5.xyzx  // viewDirTS<1:NaN:Inf>
                dp3 r1.w, r2.xyzx, r0.xyzx  // viewDirTS<2:NaN:Inf>
                mov r4.xy, -r4.xyxx
                mul r4.xy, r4.xyxx, cb1[20].xxxx
                div r4.xy, r4.xyxx, r1.wwww  // maxParallaxOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 116
                itof r1.w, cb1[20].z
                itof r2.w, cb1[20].y
                dp3 r3.w, r1.xyzx, r0.xyzx
                mov r4.z, -r1.w
                add r2.w, r2.w, r4.z
                mul r2.w, r2.w, r3.w
                add r1.w, r1.w, r2.w
                ftoi r1.w, r1.w  // sampleCount<0>
                itof r2.w, r1.w
                div r2.w, l(1.000000), r2.w  // yStep<0:Inf>
                mul r4.xy, r2.wwww, r4.xyxx  // texStep<0:NaN:Inf,1:NaN:Inf>
                
                #line 125
                deriv_rtx_coarse r4.zw, v4.xxxy  // dx<0:Inf,1:Inf>
                deriv_rty_coarse r5.xy, v4.xyxx  // dy<0:Inf,1:Inf>
                
                #line 138
                mov r5.zw, l(0,0,0,0)  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r6.xy, l(0,0,0,0)  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r6.zw, l(0,0,0,0)  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r3.w, l(0)  // sampleIndex<0>
                mov r7.x, l(1.000000)  // currRayY<0:NaN:Inf>
                mov r7.y, l(1.000000)  // prevRayY<0:NaN:Inf>
                mov r7.z, l(0)  // prevHeight<0:Inf>
                loop 
                  iadd r7.w, r1.w, l(1)
                  ilt r8.x, r3.w, r7.w
                  breakc_z r8.x
                  add r8.xy, r5.zwzz, v4.xyxx
                  sample_d_indexable(texture2d)(float,float,float,float) r8.x, r8.xyxx, t0.wxyz, s0, r4.zwzz, r5.xyxx  // currHeight<0:Inf>
                
                #line 143
                  lt r8.y, r7.x, r8.x
                  if_nz r8.y
                
                #line 147
                    mov r8.y, -r7.y
                    add r8.z, r7.z, r8.y
                    mov r8.w, -r8.x
                    add r8.w, r7.z, r8.w
                    add r8.w, r7.x, r8.w
                    add r8.y, r8.y, r8.w
                    div r8.y, r8.z, r8.y  // t<0:NaN:Inf>
                    mul r8.yz, r4.xxyx, r8.yyyy
                    add r6.zw, r6.xxxy, r8.yyyz  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r3.w, r7.w  // sampleIndex<0>
                
                #line 143
                  else 
                
                #line 156
                    iadd r3.w, r3.w, l(1)  // sampleIndex<0>
                    mov r6.xy, r5.zwzz  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r7.y, r7.x  // prevRayY<0:NaN:Inf>
                    mov r7.z, r8.x  // prevHeight<0:Inf>
                    add r5.zw, r4.xxxy, r5.zzzw  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                    mov r8.x, -r2.w
                    add r7.x, r7.x, r8.x  // currRayY<0:NaN:Inf>
                
                #line 143
                  endif 
                
                #line 138
                endloop 
                
                #line 170
                add r4.xy, r6.zwzz, v4.xyxx  // parallaxTex<0:NaN:Inf,1:NaN:Inf>
                
                #line 196
                sample_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xyxx, t0.xyzw, s0
                mov r4.xyz, r4.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                nop 
                mov r4.xyz, r4.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                mov r5.xyz, v3.xyzx  // tangentW<0,1,2>
                
                #line 206 "LightHelper.fx"
                mul r4.xyz, r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
                add r4.xyz, r4.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // normalT<0:Inf,1:Inf,2:Inf>
                
                #line 209
                mov r3.xyz, r3.xyzx  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r1.w, r5.zxyz, r3.xyzx
                mul r6.xyz, r3.yzxy, r1.wwww
                mov r6.xyz, -r6.xyzx
                add r5.xyz, r5.xyzx, r6.xyzx
                dp3 r1.w, r5.xyzx, r5.xyzx
                rsq r1.w, r1.w
                mul r5.xyz, r1.wwww, r5.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r6.xyz, r5.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r7.xyz, r3.zxyz, r6.yzxy
                mul r3.xyz, r3.xyzx, r6.xyzx
                mov r3.xyz, -r3.xyzx
                add r3.xyz, r3.xyzx, r7.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                mul r5.xyz, r4.xxxx, r5.xyzx
                mul r3.xyz, r3.xyzx, r4.yyyy
                add r3.xyz, r3.xyzx, r5.xyzx
                mul r0.xyz, r0.xyzx, r4.zzzz
                add r0.xyz, r0.xyzx, r3.xyzx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // NormalSampleToWorldSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 197 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, r0.xyzx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r3.xyz, cb1[16].xyzx  // mat<0,1,2>
                mov r4.xyz, cb1[17].xyzx  // mat<4,5,6>
                mov r5.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r9.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r6.xyz, -r9.xyzx
                dp3 r3.w, r6.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r9.xyz, r0.xyzx, r3.wwww
                add r6.xyz, r6.xyzx, r9.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r1.x, r6.xyzx, r1.xyzx
                max r1.x, r1.x, l(0.000000)
                log r1.x, r1.x
                mul r1.x, r1.x, r5.w
                exp r1.x, r1.x  // specFactor<0:NaN:Inf>
                mul r1.yzw, r4.xxyz, r1.wwww
                mul r1.yzw, r7.xxyz, r1.yyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r4.xyz, r5.xyzx, r1.xxxx
                mul r4.xyz, r8.xyzx, r4.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r1.xyz, r2.wwww, r1.yzwy, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r4.xyz, r2.wwww, r4.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r1.xyz, r1.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r4.xyz, r4.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                add r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 224
                add r1.xyz, r1.xyzx, r3.xyzx
                mul r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r1.xyz, r4.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 229
                dp3 r1.w, r2.xyzx, r0.xyzx
                add r1.w, r1.w, r1.w
                mov r1.w, -r1.w
                mul r0.xyz, r0.xyzx, r1.wwww
                add r0.xyz, r2.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t1.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[19].xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 242
                mov r1.x, -cb0[12].w
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[13].x
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 245
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[14].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 249
                mul r0.w, cb1[17].w, l(1.000000)  // litColor<3>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3>
                ret 
                // Approximately 166 instruction slots used
                            
            };
        }

    }

    technique11 Light2FogReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //   float gHeightScale;                // Offset:  320 Size:     4 [unused]
                //   int gMinSampleCount;               // Offset:  324 Size:     4 [unused]
                //   int gMaxSampleCount;               // Offset:  328 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_temps 6
                
                #line 64 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                dp3 r3.x, v3.xyzx, cb0[0].xyzx  // vout<10:NaN:Inf>
                dp3 r3.y, v3.xyzx, cb0[1].xyzx  // vout<11:NaN:Inf>
                dp3 r3.z, v3.xyzx, cb0[2].xyzx  // vout<12:NaN:Inf>
                
                #line 69
                dp4 r4.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 72
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r5.x, r0.xyzw, cb0[12].xyzw  // vout<13:NaN:Inf>
                dp4 r5.y, r0.xyzw, cb0[13].xyzw  // vout<14:NaN:Inf>
                mov o0.xyzw, r4.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xyz, r3.xyzx  // VS<10:NaN:Inf,11:NaN:Inf,12:NaN:Inf>
                mov o4.xy, r5.xyxx  // VS<13:NaN:Inf,14:NaN:Inf>
                ret 
                // Approximately 25 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4
                //   float gFogRange;                   // Offset:  208 Size:     4
                //   float4 gFogColor;                  // Offset:  224 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //   float gHeightScale;                // Offset:  320 Size:     4
                //   int gMinSampleCount;               // Offset:  324 Size:     4
                //   int gMaxSampleCount;               // Offset:  328 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gNormalMap                        texture  float4          2d    0        1
                // gCubeMap                          texture  float4        cube    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[15], immediateIndexed
                dcl_constantbuffer cb1[21], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texturecube (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_output o0.xyzw
                dcl_temps 13
                
                #line 85 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 88
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 91
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 94
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                mov r2.xyz, -r1.xyzx  // viewDirW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 103
                mov r3.xyz, r0.zxyz  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r1.w, v3.zxyz, r3.xyzx
                mul r4.xyz, r3.yzxy, r1.wwww
                mov r4.xyz, -r4.xyzx
                add r4.xyz, r4.xyzx, v3.xyzx
                dp3 r1.w, r4.xyzx, r4.xyzx
                rsq r1.w, r1.w
                mul r4.xyz, r1.wwww, r4.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r4.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r6.xyz, r3.zxyz, r5.yzxy
                mul r5.xyz, r3.xyzx, r5.xyzx
                mov r5.xyz, -r5.xyzx
                add r5.xyz, r5.xyzx, r6.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 109
                dp3 r4.x, r2.xyzx, r4.xyzx  // viewDirTS<0:NaN:Inf>
                dp3 r4.y, r2.xyzx, r5.xyzx  // viewDirTS<1:NaN:Inf>
                dp3 r1.w, r2.xyzx, r0.xyzx  // viewDirTS<2:NaN:Inf>
                mov r4.xy, -r4.xyxx
                mul r4.xy, r4.xyxx, cb1[20].xxxx
                div r4.xy, r4.xyxx, r1.wwww  // maxParallaxOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 116
                itof r1.w, cb1[20].z
                itof r2.w, cb1[20].y
                dp3 r3.w, r1.xyzx, r0.xyzx
                mov r4.z, -r1.w
                add r2.w, r2.w, r4.z
                mul r2.w, r2.w, r3.w
                add r1.w, r1.w, r2.w
                ftoi r1.w, r1.w  // sampleCount<0>
                itof r2.w, r1.w
                div r2.w, l(1.000000), r2.w  // yStep<0:Inf>
                mul r4.xy, r2.wwww, r4.xyxx  // texStep<0:NaN:Inf,1:NaN:Inf>
                
                #line 125
                deriv_rtx_coarse r4.zw, v4.xxxy  // dx<0:Inf,1:Inf>
                deriv_rty_coarse r5.xy, v4.xyxx  // dy<0:Inf,1:Inf>
                
                #line 138
                mov r5.zw, l(0,0,0,0)  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r6.xy, l(0,0,0,0)  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r6.zw, l(0,0,0,0)  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r3.w, l(0)  // sampleIndex<0>
                mov r7.x, l(1.000000)  // currRayY<0:NaN:Inf>
                mov r7.y, l(1.000000)  // prevRayY<0:NaN:Inf>
                mov r7.z, l(0)  // prevHeight<0:Inf>
                loop 
                  iadd r7.w, r1.w, l(1)
                  ilt r8.x, r3.w, r7.w
                  breakc_z r8.x
                  add r8.xy, r5.zwzz, v4.xyxx
                  sample_d_indexable(texture2d)(float,float,float,float) r8.x, r8.xyxx, t0.wxyz, s0, r4.zwzz, r5.xyxx  // currHeight<0:Inf>
                
                #line 143
                  lt r8.y, r7.x, r8.x
                  if_nz r8.y
                
                #line 147
                    mov r8.y, -r7.y
                    add r8.z, r7.z, r8.y
                    mov r8.w, -r8.x
                    add r8.w, r7.z, r8.w
                    add r8.w, r7.x, r8.w
                    add r8.y, r8.y, r8.w
                    div r8.y, r8.z, r8.y  // t<0:NaN:Inf>
                    mul r8.yz, r4.xxyx, r8.yyyy
                    add r6.zw, r6.xxxy, r8.yyyz  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r3.w, r7.w  // sampleIndex<0>
                
                #line 143
                  else 
                
                #line 156
                    iadd r3.w, r3.w, l(1)  // sampleIndex<0>
                    mov r6.xy, r5.zwzz  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r7.y, r7.x  // prevRayY<0:NaN:Inf>
                    mov r7.z, r8.x  // prevHeight<0:Inf>
                    add r5.zw, r4.xxxy, r5.zzzw  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                    mov r8.x, -r2.w
                    add r7.x, r7.x, r8.x  // currRayY<0:NaN:Inf>
                
                #line 143
                  endif 
                
                #line 138
                endloop 
                
                #line 170
                add r4.xy, r6.zwzz, v4.xyxx  // parallaxTex<0:NaN:Inf,1:NaN:Inf>
                
                #line 196
                sample_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xyxx, t0.xyzw, s0
                mov r4.xyz, r4.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                nop 
                mov r4.xyz, r4.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                mov r5.xyz, v3.xyzx  // tangentW<0,1,2>
                
                #line 206 "LightHelper.fx"
                mul r4.xyz, r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
                add r4.xyz, r4.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // normalT<0:Inf,1:Inf,2:Inf>
                
                #line 209
                mov r3.xyz, r3.xyzx  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r1.w, r5.zxyz, r3.xyzx
                mul r6.xyz, r3.yzxy, r1.wwww
                mov r6.xyz, -r6.xyzx
                add r5.xyz, r5.xyzx, r6.xyzx
                dp3 r1.w, r5.xyzx, r5.xyzx
                rsq r1.w, r1.w
                mul r5.xyz, r1.wwww, r5.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r6.xyz, r5.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r7.xyz, r3.zxyz, r6.yzxy
                mul r3.xyz, r3.xyzx, r6.xyzx
                mov r3.xyz, -r3.xyzx
                add r3.xyz, r3.xyzx, r7.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                mul r5.xyz, r4.xxxx, r5.xyzx
                mul r3.xyz, r3.xyzx, r4.yyyy
                add r3.xyz, r3.xyzx, r5.xyzx
                mul r0.xyz, r0.xyzx, r4.zzzz
                add r0.xyz, r0.xyzx, r3.xyzx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // NormalSampleToWorldSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 197 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, r0.xyzx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r3.xyz, cb1[16].xyzx  // mat<0,1,2>
                mov r4.xyz, cb1[17].xyzx  // mat<4,5,6>
                mov r5.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r6.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r9.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r9.xyz, -r9.xyzx
                dp3 r3.w, r9.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r10.xyz, r0.xyzx, r3.wwww
                add r9.xyz, r9.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r3.w, r9.xyzx, r1.xyzx
                max r3.w, r3.w, l(0.000000)
                log r3.w, r3.w
                mul r3.w, r3.w, r5.w
                exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                mul r9.xyz, r4.xyzx, r1.wwww
                mul r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r9.xyz, r5.xyzx, r3.wwww
                mul r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r7.xyz, r2.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r8.xyz, r2.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                add r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r9.xyz, cb0[4].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[5].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[6].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[7].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r3.xyz, r3.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r9.xyz, -r12.xyzx
                dp3 r3.w, r9.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r12.xyz, r0.xyzx, r3.wwww
                add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r1.x, r9.xyzx, r1.xyzx
                max r1.x, r1.x, l(0.000000)
                log r1.x, r1.x
                mul r1.x, r1.x, r5.w
                exp r1.x, r1.x  // specFactor<0:NaN:Inf>
                mul r1.yzw, r4.xxyz, r1.wwww
                mul r1.yzw, r10.xxyz, r1.yyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r4.xyz, r5.xyzx, r1.xxxx
                mul r4.xyz, r11.xyzx, r4.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r1.xyz, r2.wwww, r1.yzwy, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r4.xyz, r2.wwww, r4.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r1.xyz, r1.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r4.xyz, r4.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r1.xyz, r1.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r4.xyz, r4.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 224
                add r1.xyz, r1.xyzx, r3.xyzx
                mul r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r1.xyz, r4.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 229
                dp3 r1.w, r2.xyzx, r0.xyzx
                add r1.w, r1.w, r1.w
                mov r1.w, -r1.w
                mul r0.xyz, r0.xyzx, r1.wwww
                add r0.xyz, r2.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t1.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[19].xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 242
                mov r1.x, -cb0[12].w
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[13].x
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 245
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[14].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 249
                mul r0.w, cb1[17].w, l(1.000000)  // litColor<3>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3>
                ret 
                // Approximately 198 instruction slots used
                            
            };
        }

    }

    technique11 Light3FogReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //   float gHeightScale;                // Offset:  320 Size:     4 [unused]
                //   int gMinSampleCount;               // Offset:  324 Size:     4 [unused]
                //   int gMaxSampleCount;               // Offset:  328 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_temps 6
                
                #line 64 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                dp3 r3.x, v3.xyzx, cb0[0].xyzx  // vout<10:NaN:Inf>
                dp3 r3.y, v3.xyzx, cb0[1].xyzx  // vout<11:NaN:Inf>
                dp3 r3.z, v3.xyzx, cb0[2].xyzx  // vout<12:NaN:Inf>
                
                #line 69
                dp4 r4.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 72
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r5.x, r0.xyzw, cb0[12].xyzw  // vout<13:NaN:Inf>
                dp4 r5.y, r0.xyzw, cb0[13].xyzw  // vout<14:NaN:Inf>
                mov o0.xyzw, r4.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xyz, r3.xyzx  // VS<10:NaN:Inf,11:NaN:Inf,12:NaN:Inf>
                mov o4.xy, r5.xyxx  // VS<13:NaN:Inf,14:NaN:Inf>
                ret 
                // Approximately 25 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4
                //   float gFogRange;                   // Offset:  208 Size:     4
                //   float4 gFogColor;                  // Offset:  224 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //   float gHeightScale;                // Offset:  320 Size:     4
                //   int gMinSampleCount;               // Offset:  324 Size:     4
                //   int gMaxSampleCount;               // Offset:  328 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gNormalMap                        texture  float4          2d    0        1
                // gCubeMap                          texture  float4        cube    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[15], immediateIndexed
                dcl_constantbuffer cb1[21], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texturecube (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_output o0.xyzw
                dcl_temps 14
                
                #line 85 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 88
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 91
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 94
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                mov r2.xyz, -r1.xyzx  // viewDirW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 103
                mov r3.xyz, r0.zxyz  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r1.w, v3.zxyz, r3.xyzx
                mul r4.xyz, r3.yzxy, r1.wwww
                mov r4.xyz, -r4.xyzx
                add r4.xyz, r4.xyzx, v3.xyzx
                dp3 r1.w, r4.xyzx, r4.xyzx
                rsq r1.w, r1.w
                mul r4.xyz, r1.wwww, r4.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r4.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r6.xyz, r3.zxyz, r5.yzxy
                mul r5.xyz, r3.xyzx, r5.xyzx
                mov r5.xyz, -r5.xyzx
                add r5.xyz, r5.xyzx, r6.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 109
                dp3 r4.x, r2.xyzx, r4.xyzx  // viewDirTS<0:NaN:Inf>
                dp3 r4.y, r2.xyzx, r5.xyzx  // viewDirTS<1:NaN:Inf>
                dp3 r1.w, r2.xyzx, r0.xyzx  // viewDirTS<2:NaN:Inf>
                mov r4.xy, -r4.xyxx
                mul r4.xy, r4.xyxx, cb1[20].xxxx
                div r4.xy, r4.xyxx, r1.wwww  // maxParallaxOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 116
                itof r1.w, cb1[20].z
                itof r2.w, cb1[20].y
                dp3 r3.w, r1.xyzx, r0.xyzx
                mov r4.z, -r1.w
                add r2.w, r2.w, r4.z
                mul r2.w, r2.w, r3.w
                add r1.w, r1.w, r2.w
                ftoi r1.w, r1.w  // sampleCount<0>
                itof r2.w, r1.w
                div r2.w, l(1.000000), r2.w  // yStep<0:Inf>
                mul r4.xy, r2.wwww, r4.xyxx  // texStep<0:NaN:Inf,1:NaN:Inf>
                
                #line 125
                deriv_rtx_coarse r4.zw, v4.xxxy  // dx<0:Inf,1:Inf>
                deriv_rty_coarse r5.xy, v4.xyxx  // dy<0:Inf,1:Inf>
                
                #line 138
                mov r5.zw, l(0,0,0,0)  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r6.xy, l(0,0,0,0)  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r6.zw, l(0,0,0,0)  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r3.w, l(0)  // sampleIndex<0>
                mov r7.x, l(1.000000)  // currRayY<0:NaN:Inf>
                mov r7.y, l(1.000000)  // prevRayY<0:NaN:Inf>
                mov r7.z, l(0)  // prevHeight<0:Inf>
                loop 
                  iadd r7.w, r1.w, l(1)
                  ilt r8.x, r3.w, r7.w
                  breakc_z r8.x
                  add r8.xy, r5.zwzz, v4.xyxx
                  sample_d_indexable(texture2d)(float,float,float,float) r8.x, r8.xyxx, t0.wxyz, s0, r4.zwzz, r5.xyxx  // currHeight<0:Inf>
                
                #line 143
                  lt r8.y, r7.x, r8.x
                  if_nz r8.y
                
                #line 147
                    mov r8.y, -r7.y
                    add r8.z, r7.z, r8.y
                    mov r8.w, -r8.x
                    add r8.w, r7.z, r8.w
                    add r8.w, r7.x, r8.w
                    add r8.y, r8.y, r8.w
                    div r8.y, r8.z, r8.y  // t<0:NaN:Inf>
                    mul r8.yz, r4.xxyx, r8.yyyy
                    add r6.zw, r6.xxxy, r8.yyyz  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r3.w, r7.w  // sampleIndex<0>
                
                #line 143
                  else 
                
                #line 156
                    iadd r3.w, r3.w, l(1)  // sampleIndex<0>
                    mov r6.xy, r5.zwzz  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r7.y, r7.x  // prevRayY<0:NaN:Inf>
                    mov r7.z, r8.x  // prevHeight<0:Inf>
                    add r5.zw, r4.xxxy, r5.zzzw  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                    mov r8.x, -r2.w
                    add r7.x, r7.x, r8.x  // currRayY<0:NaN:Inf>
                
                #line 143
                  endif 
                
                #line 138
                endloop 
                
                #line 170
                add r4.xy, r6.zwzz, v4.xyxx  // parallaxTex<0:NaN:Inf,1:NaN:Inf>
                
                #line 196
                sample_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xyxx, t0.xyzw, s0
                mov r4.xyz, r4.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                nop 
                mov r4.xyz, r4.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                mov r5.xyz, v3.xyzx  // tangentW<0,1,2>
                
                #line 206 "LightHelper.fx"
                mul r4.xyz, r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
                add r4.xyz, r4.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // normalT<0:Inf,1:Inf,2:Inf>
                
                #line 209
                mov r3.xyz, r3.xyzx  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r1.w, r5.zxyz, r3.xyzx
                mul r6.xyz, r3.yzxy, r1.wwww
                mov r6.xyz, -r6.xyzx
                add r5.xyz, r5.xyzx, r6.xyzx
                dp3 r1.w, r5.xyzx, r5.xyzx
                rsq r1.w, r1.w
                mul r5.xyz, r1.wwww, r5.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r6.xyz, r5.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r7.xyz, r3.zxyz, r6.yzxy
                mul r3.xyz, r3.xyzx, r6.xyzx
                mov r3.xyz, -r3.xyzx
                add r3.xyz, r3.xyzx, r7.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                mul r5.xyz, r4.xxxx, r5.xyzx
                mul r3.xyz, r3.xyzx, r4.yyyy
                add r3.xyz, r3.xyzx, r5.xyzx
                mul r0.xyz, r0.xyzx, r4.zzzz
                add r0.xyz, r0.xyzx, r3.xyzx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // NormalSampleToWorldSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 197 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, r0.xyzx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r3.xyz, cb1[16].xyzx  // mat<0,1,2>
                mov r4.xyz, cb1[17].xyzx  // mat<4,5,6>
                mov r5.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r6.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r9.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r9.xyz, -r9.xyzx
                dp3 r3.w, r9.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r10.xyz, r0.xyzx, r3.wwww
                add r9.xyz, r9.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r3.w, r9.xyzx, r1.xyzx
                max r3.w, r3.w, l(0.000000)
                log r3.w, r3.w
                mul r3.w, r3.w, r5.w
                exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                mul r9.xyz, r4.xyzx, r1.wwww
                mul r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r9.xyz, r5.xyzx, r3.wwww
                mul r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r7.xyz, r2.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r8.xyz, r2.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                add r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r9.xyz, cb0[4].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[5].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[6].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[7].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r9.xyz, r3.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r12.xyz, -r12.xyzx
                dp3 r3.w, r12.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r13.xyz, r0.xyzx, r3.wwww
                add r12.xyz, r12.xyzx, r13.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r3.w, r12.xyzx, r1.xyzx
                max r3.w, r3.w, l(0.000000)
                log r3.w, r3.w
                mul r3.w, r3.w, r5.w
                exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                mul r12.xyz, r4.xyzx, r1.wwww
                mul r10.xyz, r10.xyzx, r12.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r12.xyz, r5.xyzx, r3.wwww
                mul r11.xyz, r11.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r10.xyz, r2.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r11.xyz, r2.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r7.xyz, r7.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r8.xyz, r8.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r9.xyz, cb0[8].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[9].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[10].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[11].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r3.xyz, r3.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r9.xyz, -r12.xyzx
                dp3 r3.w, r9.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r12.xyz, r0.xyzx, r3.wwww
                add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r1.x, r9.xyzx, r1.xyzx
                max r1.x, r1.x, l(0.000000)
                log r1.x, r1.x
                mul r1.x, r1.x, r5.w
                exp r1.x, r1.x  // specFactor<0:NaN:Inf>
                mul r1.yzw, r4.xxyz, r1.wwww
                mul r1.yzw, r10.xxyz, r1.yyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r4.xyz, r5.xyzx, r1.xxxx
                mul r4.xyz, r11.xyzx, r4.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r1.xyz, r2.wwww, r1.yzwy, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r4.xyz, r2.wwww, r4.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r1.xyz, r1.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r4.xyz, r4.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r1.xyz, r1.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r4.xyz, r4.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 224
                add r1.xyz, r1.xyzx, r3.xyzx
                mul r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r1.xyz, r4.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 229
                dp3 r1.w, r2.xyzx, r0.xyzx
                add r1.w, r1.w, r1.w
                mov r1.w, -r1.w
                mul r0.xyz, r0.xyzx, r1.wwww
                add r0.xyz, r2.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t1.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[19].xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 242
                mov r1.x, -cb0[12].w
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[13].x
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 245
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[14].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 249
                mul r0.w, cb1[17].w, l(1.000000)  // litColor<3>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3>
                ret 
                // Approximately 230 instruction slots used
                            
            };
        }

    }

    technique11 Light0TexFogReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //   float gHeightScale;                // Offset:  320 Size:     4 [unused]
                //   int gMinSampleCount;               // Offset:  324 Size:     4 [unused]
                //   int gMaxSampleCount;               // Offset:  328 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_temps 6
                
                #line 64 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                dp3 r3.x, v3.xyzx, cb0[0].xyzx  // vout<10:NaN:Inf>
                dp3 r3.y, v3.xyzx, cb0[1].xyzx  // vout<11:NaN:Inf>
                dp3 r3.z, v3.xyzx, cb0[2].xyzx  // vout<12:NaN:Inf>
                
                #line 69
                dp4 r4.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 72
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r5.x, r0.xyzw, cb0[12].xyzw  // vout<13:NaN:Inf>
                dp4 r5.y, r0.xyzw, cb0[13].xyzw  // vout<14:NaN:Inf>
                mov o0.xyzw, r4.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xyz, r3.xyzx  // VS<10:NaN:Inf,11:NaN:Inf,12:NaN:Inf>
                mov o4.xy, r5.xyxx  // VS<13:NaN:Inf,14:NaN:Inf>
                ret 
                // Approximately 25 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192 [unused]
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4
                //   float gFogRange;                   // Offset:  208 Size:     4
                //   float4 gFogColor;                  // Offset:  224 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //   float gHeightScale;                // Offset:  320 Size:     4
                //   int gMinSampleCount;               // Offset:  324 Size:     4
                //   int gMaxSampleCount;               // Offset:  328 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gNormalMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[15], immediateIndexed
                dcl_constantbuffer cb1[21], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_output o0.xyzw
                dcl_temps 7
                
                #line 85 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 88
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 91
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 94
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                mov r2.xyz, -r1.xyzx  // viewDirW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 103
                mov r3.xyz, r0.zxyz  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r1.w, v3.zxyz, r3.xyzx
                mul r4.xyz, r3.yzxy, r1.wwww
                mov r4.xyz, -r4.xyzx
                add r4.xyz, r4.xyzx, v3.xyzx
                dp3 r1.w, r4.xyzx, r4.xyzx
                rsq r1.w, r1.w
                mul r4.xyz, r1.wwww, r4.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r4.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r6.xyz, r3.zxyz, r5.yzxy
                mul r3.xyz, r3.xyzx, r5.xyzx
                mov r3.xyz, -r3.xyzx
                add r3.xyz, r3.xyzx, r6.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 109
                dp3 r4.x, r2.xyzx, r4.xyzx  // viewDirTS<0:NaN:Inf>
                dp3 r4.y, r2.xyzx, r3.xyzx  // viewDirTS<1:NaN:Inf>
                dp3 r1.w, r2.xyzx, r0.xyzx  // viewDirTS<2:NaN:Inf>
                mov r2.xy, -r4.xyxx
                mul r2.xy, r2.xyxx, cb1[20].xxxx
                div r2.xy, r2.xyxx, r1.wwww  // maxParallaxOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 116
                itof r1.w, cb1[20].z
                itof r2.z, cb1[20].y
                dp3 r0.x, r1.xyzx, r0.xyzx
                mov r0.y, -r1.w
                add r0.y, r0.y, r2.z
                mul r0.x, r0.y, r0.x
                add r0.x, r0.x, r1.w
                ftoi r0.x, r0.x  // sampleCount<0>
                itof r0.y, r0.x
                div r0.y, l(1.000000), r0.y  // yStep<0:Inf>
                mul r1.xy, r0.yyyy, r2.xyxx  // texStep<0:NaN:Inf,1:NaN:Inf>
                
                #line 125
                deriv_rtx_coarse r1.zw, v4.xxxy  // dx<0:Inf,1:Inf>
                deriv_rty_coarse r2.xy, v4.xyxx  // dy<0:Inf,1:Inf>
                
                #line 138
                mov r2.zw, l(0,0,0,0)  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r3.xy, l(0,0,0,0)  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r3.zw, l(0,0,0,0)  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r0.z, l(0)  // sampleIndex<0>
                mov r4.x, l(1.000000)  // currRayY<0:NaN:Inf>
                mov r4.y, l(1.000000)  // prevRayY<0:NaN:Inf>
                mov r4.z, l(0)  // prevHeight<0:Inf>
                loop 
                  iadd r4.w, r0.x, l(1)
                  ilt r5.x, r0.z, r4.w
                  breakc_z r5.x
                  add r5.xy, r2.zwzz, v4.xyxx
                  sample_d_indexable(texture2d)(float,float,float,float) r5.x, r5.xyxx, t1.wxyz, s0, r1.zwzz, r2.xyxx  // currHeight<0:Inf>
                
                #line 143
                  lt r5.y, r4.x, r5.x
                  if_nz r5.y
                
                #line 147
                    mov r5.y, -r4.y
                    add r5.z, r4.z, r5.y
                    mov r5.w, -r5.x
                    add r5.w, r4.z, r5.w
                    add r5.w, r4.x, r5.w
                    add r5.y, r5.y, r5.w
                    div r5.y, r5.z, r5.y  // t<0:NaN:Inf>
                    mul r5.yz, r1.xxyx, r5.yyyy
                    add r3.zw, r3.xxxy, r5.yyyz  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r0.z, r4.w  // sampleIndex<0>
                
                #line 143
                  else 
                
                #line 156
                    iadd r0.z, r0.z, l(1)  // sampleIndex<0>
                    mov r3.xy, r2.zwzz  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r4.y, r4.x  // prevRayY<0:NaN:Inf>
                    mov r4.z, r5.x  // prevHeight<0:Inf>
                    add r2.zw, r1.xxxy, r2.zzzw  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                    mov r5.x, -r0.y
                    add r4.x, r4.x, r5.x  // currRayY<0:NaN:Inf>
                
                #line 143
                  endif 
                
                #line 138
                endloop 
                
                #line 170
                add r0.xy, r3.zwzz, v4.xyxx  // parallaxTex<0:NaN:Inf,1:NaN:Inf>
                
                #line 181
                sample_indexable(texture2d)(float,float,float,float) r1.xyzw, r0.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 197
                nop 
                
                #line 203
                mov r1.xyz, r1.xyzx  // litColor<0:Inf,1:Inf,2:Inf>
                
                #line 242
                mov r0.x, -cb0[12].w
                add r0.x, r0.x, r0.w
                div r0.x, r0.x, cb0[13].x
                max r0.x, r0.x, l(0.000000)
                min r0.x, r0.x, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 245
                mov r0.yzw, -r1.xxyz
                add r0.yzw, r0.yyzw, cb0[14].xxyz
                mul r0.xyz, r0.yzwy, r0.xxxx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 249
                mul r0.w, r1.w, cb1[17].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 93 instruction slots used
                            
            };
        }

    }

    technique11 Light1TexFogReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //   float gHeightScale;                // Offset:  320 Size:     4 [unused]
                //   int gMinSampleCount;               // Offset:  324 Size:     4 [unused]
                //   int gMaxSampleCount;               // Offset:  328 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_temps 6
                
                #line 64 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                dp3 r3.x, v3.xyzx, cb0[0].xyzx  // vout<10:NaN:Inf>
                dp3 r3.y, v3.xyzx, cb0[1].xyzx  // vout<11:NaN:Inf>
                dp3 r3.z, v3.xyzx, cb0[2].xyzx  // vout<12:NaN:Inf>
                
                #line 69
                dp4 r4.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 72
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r5.x, r0.xyzw, cb0[12].xyzw  // vout<13:NaN:Inf>
                dp4 r5.y, r0.xyzw, cb0[13].xyzw  // vout<14:NaN:Inf>
                mov o0.xyzw, r4.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xyz, r3.xyzx  // VS<10:NaN:Inf,11:NaN:Inf,12:NaN:Inf>
                mov o4.xy, r5.xyxx  // VS<13:NaN:Inf,14:NaN:Inf>
                ret 
                // Approximately 25 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4
                //   float gFogRange;                   // Offset:  208 Size:     4
                //   float4 gFogColor;                  // Offset:  224 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //   float gHeightScale;                // Offset:  320 Size:     4
                //   int gMinSampleCount;               // Offset:  324 Size:     4
                //   int gMaxSampleCount;               // Offset:  328 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gNormalMap                        texture  float4          2d    1        1
                // gCubeMap                          texture  float4        cube    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[15], immediateIndexed
                dcl_constantbuffer cb1[21], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texturecube (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_output o0.xyzw
                dcl_temps 11
                
                #line 85 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 88
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 91
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 94
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                mov r2.xyz, -r1.xyzx  // viewDirW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 103
                mov r3.xyz, r0.zxyz  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r1.w, v3.zxyz, r3.xyzx
                mul r4.xyz, r3.yzxy, r1.wwww
                mov r4.xyz, -r4.xyzx
                add r4.xyz, r4.xyzx, v3.xyzx
                dp3 r1.w, r4.xyzx, r4.xyzx
                rsq r1.w, r1.w
                mul r4.xyz, r1.wwww, r4.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r4.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r6.xyz, r3.zxyz, r5.yzxy
                mul r5.xyz, r3.xyzx, r5.xyzx
                mov r5.xyz, -r5.xyzx
                add r5.xyz, r5.xyzx, r6.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 109
                dp3 r4.x, r2.xyzx, r4.xyzx  // viewDirTS<0:NaN:Inf>
                dp3 r4.y, r2.xyzx, r5.xyzx  // viewDirTS<1:NaN:Inf>
                dp3 r1.w, r2.xyzx, r0.xyzx  // viewDirTS<2:NaN:Inf>
                mov r4.xy, -r4.xyxx
                mul r4.xy, r4.xyxx, cb1[20].xxxx
                div r4.xy, r4.xyxx, r1.wwww  // maxParallaxOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 116
                itof r1.w, cb1[20].z
                itof r2.w, cb1[20].y
                dp3 r3.w, r1.xyzx, r0.xyzx
                mov r4.z, -r1.w
                add r2.w, r2.w, r4.z
                mul r2.w, r2.w, r3.w
                add r1.w, r1.w, r2.w
                ftoi r1.w, r1.w  // sampleCount<0>
                itof r2.w, r1.w
                div r2.w, l(1.000000), r2.w  // yStep<0:Inf>
                mul r4.xy, r2.wwww, r4.xyxx  // texStep<0:NaN:Inf,1:NaN:Inf>
                
                #line 125
                deriv_rtx_coarse r4.zw, v4.xxxy  // dx<0:Inf,1:Inf>
                deriv_rty_coarse r5.xy, v4.xyxx  // dy<0:Inf,1:Inf>
                
                #line 138
                mov r5.zw, l(0,0,0,0)  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r6.xy, l(0,0,0,0)  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r6.zw, l(0,0,0,0)  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r3.w, l(0)  // sampleIndex<0>
                mov r7.x, l(1.000000)  // currRayY<0:NaN:Inf>
                mov r7.y, l(1.000000)  // prevRayY<0:NaN:Inf>
                mov r7.z, l(0)  // prevHeight<0:Inf>
                loop 
                  iadd r7.w, r1.w, l(1)
                  ilt r8.x, r3.w, r7.w
                  breakc_z r8.x
                  add r8.xy, r5.zwzz, v4.xyxx
                  sample_d_indexable(texture2d)(float,float,float,float) r8.x, r8.xyxx, t1.wxyz, s0, r4.zwzz, r5.xyxx  // currHeight<0:Inf>
                
                #line 143
                  lt r8.y, r7.x, r8.x
                  if_nz r8.y
                
                #line 147
                    mov r8.y, -r7.y
                    add r8.z, r7.z, r8.y
                    mov r8.w, -r8.x
                    add r8.w, r7.z, r8.w
                    add r8.w, r7.x, r8.w
                    add r8.y, r8.y, r8.w
                    div r8.y, r8.z, r8.y  // t<0:NaN:Inf>
                    mul r8.yz, r4.xxyx, r8.yyyy
                    add r6.zw, r6.xxxy, r8.yyyz  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r3.w, r7.w  // sampleIndex<0>
                
                #line 143
                  else 
                
                #line 156
                    iadd r3.w, r3.w, l(1)  // sampleIndex<0>
                    mov r6.xy, r5.zwzz  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r7.y, r7.x  // prevRayY<0:NaN:Inf>
                    mov r7.z, r8.x  // prevHeight<0:Inf>
                    add r5.zw, r4.xxxy, r5.zzzw  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                    mov r8.x, -r2.w
                    add r7.x, r7.x, r8.x  // currRayY<0:NaN:Inf>
                
                #line 143
                  endif 
                
                #line 138
                endloop 
                
                #line 170
                add r4.xy, r6.zwzz, v4.xyxx  // parallaxTex<0:NaN:Inf,1:NaN:Inf>
                
                #line 181
                sample_indexable(texture2d)(float,float,float,float) r5.xyzw, r4.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 196
                sample_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xyxx, t1.xyzw, s0
                mov r4.xyz, r4.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                nop 
                mov r4.xyz, r4.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                mov r6.xyz, v3.xyzx  // tangentW<0,1,2>
                
                #line 206 "LightHelper.fx"
                mul r4.xyz, r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
                add r4.xyz, r4.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // normalT<0:Inf,1:Inf,2:Inf>
                
                #line 209
                mov r3.xyz, r3.xyzx  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r1.w, r6.zxyz, r3.xyzx
                mul r7.xyz, r3.yzxy, r1.wwww
                mov r7.xyz, -r7.xyzx
                add r6.xyz, r6.xyzx, r7.xyzx
                dp3 r1.w, r6.xyzx, r6.xyzx
                rsq r1.w, r1.w
                mul r6.xyz, r1.wwww, r6.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.xyz, r6.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r8.xyz, r3.zxyz, r7.yzxy
                mul r3.xyz, r3.xyzx, r7.xyzx
                mov r3.xyz, -r3.xyzx
                add r3.xyz, r3.xyzx, r8.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                mul r6.xyz, r4.xxxx, r6.xyzx
                mul r3.xyz, r3.xyzx, r4.yyyy
                add r3.xyz, r3.xyzx, r6.xyzx
                mul r0.xyz, r0.xyzx, r4.zzzz
                add r0.xyz, r0.xyzx, r3.xyzx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // NormalSampleToWorldSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 197 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, r0.xyzx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r3.xyz, cb1[16].xyzx  // mat<0,1,2>
                mov r4.xyz, cb1[17].xyzx  // mat<4,5,6>
                mov r6.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r3.xyz, r3.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r10.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r7.xyz, -r10.xyzx
                dp3 r3.w, r7.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r10.xyz, r0.xyzx, r3.wwww
                add r7.xyz, r7.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r1.x, r7.xyzx, r1.xyzx
                max r1.x, r1.x, l(0.000000)
                log r1.x, r1.x
                mul r1.x, r1.x, r6.w
                exp r1.x, r1.x  // specFactor<0:NaN:Inf>
                mul r1.yzw, r4.xxyz, r1.wwww
                mul r1.yzw, r8.xxyz, r1.yyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r4.xyz, r6.xyzx, r1.xxxx
                mul r4.xyz, r9.xyzx, r4.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r1.xyz, r2.wwww, r1.yzwy, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r4.xyz, r2.wwww, r4.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r1.xyz, r1.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r4.xyz, r4.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                add r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 224
                add r1.xyz, r1.xyzx, r3.xyzx
                mul r1.xyz, r1.xyzx, r5.xyzx
                add r1.xyz, r4.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 229
                dp3 r1.w, r2.xyzx, r0.xyzx
                add r1.w, r1.w, r1.w
                mov r1.w, -r1.w
                mul r0.xyz, r0.xyzx, r1.wwww
                add r0.xyz, r2.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t2.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[19].xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 242
                mov r1.x, -cb0[12].w
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[13].x
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 245
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[14].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 249
                mul r0.w, r5.w, cb1[17].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 167 instruction slots used
                            
            };
        }

    }

    technique11 Light2TexFogReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //   float gHeightScale;                // Offset:  320 Size:     4 [unused]
                //   int gMinSampleCount;               // Offset:  324 Size:     4 [unused]
                //   int gMaxSampleCount;               // Offset:  328 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_temps 6
                
                #line 64 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                dp3 r3.x, v3.xyzx, cb0[0].xyzx  // vout<10:NaN:Inf>
                dp3 r3.y, v3.xyzx, cb0[1].xyzx  // vout<11:NaN:Inf>
                dp3 r3.z, v3.xyzx, cb0[2].xyzx  // vout<12:NaN:Inf>
                
                #line 69
                dp4 r4.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 72
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r5.x, r0.xyzw, cb0[12].xyzw  // vout<13:NaN:Inf>
                dp4 r5.y, r0.xyzw, cb0[13].xyzw  // vout<14:NaN:Inf>
                mov o0.xyzw, r4.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xyz, r3.xyzx  // VS<10:NaN:Inf,11:NaN:Inf,12:NaN:Inf>
                mov o4.xy, r5.xyxx  // VS<13:NaN:Inf,14:NaN:Inf>
                ret 
                // Approximately 25 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4
                //   float gFogRange;                   // Offset:  208 Size:     4
                //   float4 gFogColor;                  // Offset:  224 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //   float gHeightScale;                // Offset:  320 Size:     4
                //   int gMinSampleCount;               // Offset:  324 Size:     4
                //   int gMaxSampleCount;               // Offset:  328 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gNormalMap                        texture  float4          2d    1        1
                // gCubeMap                          texture  float4        cube    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[15], immediateIndexed
                dcl_constantbuffer cb1[21], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texturecube (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_output o0.xyzw
                dcl_temps 14
                
                #line 85 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 88
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 91
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 94
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                mov r2.xyz, -r1.xyzx  // viewDirW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 103
                mov r3.xyz, r0.zxyz  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r1.w, v3.zxyz, r3.xyzx
                mul r4.xyz, r3.yzxy, r1.wwww
                mov r4.xyz, -r4.xyzx
                add r4.xyz, r4.xyzx, v3.xyzx
                dp3 r1.w, r4.xyzx, r4.xyzx
                rsq r1.w, r1.w
                mul r4.xyz, r1.wwww, r4.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r4.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r6.xyz, r3.zxyz, r5.yzxy
                mul r5.xyz, r3.xyzx, r5.xyzx
                mov r5.xyz, -r5.xyzx
                add r5.xyz, r5.xyzx, r6.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 109
                dp3 r4.x, r2.xyzx, r4.xyzx  // viewDirTS<0:NaN:Inf>
                dp3 r4.y, r2.xyzx, r5.xyzx  // viewDirTS<1:NaN:Inf>
                dp3 r1.w, r2.xyzx, r0.xyzx  // viewDirTS<2:NaN:Inf>
                mov r4.xy, -r4.xyxx
                mul r4.xy, r4.xyxx, cb1[20].xxxx
                div r4.xy, r4.xyxx, r1.wwww  // maxParallaxOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 116
                itof r1.w, cb1[20].z
                itof r2.w, cb1[20].y
                dp3 r3.w, r1.xyzx, r0.xyzx
                mov r4.z, -r1.w
                add r2.w, r2.w, r4.z
                mul r2.w, r2.w, r3.w
                add r1.w, r1.w, r2.w
                ftoi r1.w, r1.w  // sampleCount<0>
                itof r2.w, r1.w
                div r2.w, l(1.000000), r2.w  // yStep<0:Inf>
                mul r4.xy, r2.wwww, r4.xyxx  // texStep<0:NaN:Inf,1:NaN:Inf>
                
                #line 125
                deriv_rtx_coarse r4.zw, v4.xxxy  // dx<0:Inf,1:Inf>
                deriv_rty_coarse r5.xy, v4.xyxx  // dy<0:Inf,1:Inf>
                
                #line 138
                mov r5.zw, l(0,0,0,0)  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r6.xy, l(0,0,0,0)  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r6.zw, l(0,0,0,0)  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r3.w, l(0)  // sampleIndex<0>
                mov r7.x, l(1.000000)  // currRayY<0:NaN:Inf>
                mov r7.y, l(1.000000)  // prevRayY<0:NaN:Inf>
                mov r7.z, l(0)  // prevHeight<0:Inf>
                loop 
                  iadd r7.w, r1.w, l(1)
                  ilt r8.x, r3.w, r7.w
                  breakc_z r8.x
                  add r8.xy, r5.zwzz, v4.xyxx
                  sample_d_indexable(texture2d)(float,float,float,float) r8.x, r8.xyxx, t1.wxyz, s0, r4.zwzz, r5.xyxx  // currHeight<0:Inf>
                
                #line 143
                  lt r8.y, r7.x, r8.x
                  if_nz r8.y
                
                #line 147
                    mov r8.y, -r7.y
                    add r8.z, r7.z, r8.y
                    mov r8.w, -r8.x
                    add r8.w, r7.z, r8.w
                    add r8.w, r7.x, r8.w
                    add r8.y, r8.y, r8.w
                    div r8.y, r8.z, r8.y  // t<0:NaN:Inf>
                    mul r8.yz, r4.xxyx, r8.yyyy
                    add r6.zw, r6.xxxy, r8.yyyz  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r3.w, r7.w  // sampleIndex<0>
                
                #line 143
                  else 
                
                #line 156
                    iadd r3.w, r3.w, l(1)  // sampleIndex<0>
                    mov r6.xy, r5.zwzz  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r7.y, r7.x  // prevRayY<0:NaN:Inf>
                    mov r7.z, r8.x  // prevHeight<0:Inf>
                    add r5.zw, r4.xxxy, r5.zzzw  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                    mov r8.x, -r2.w
                    add r7.x, r7.x, r8.x  // currRayY<0:NaN:Inf>
                
                #line 143
                  endif 
                
                #line 138
                endloop 
                
                #line 170
                add r4.xy, r6.zwzz, v4.xyxx  // parallaxTex<0:NaN:Inf,1:NaN:Inf>
                
                #line 181
                sample_indexable(texture2d)(float,float,float,float) r5.xyzw, r4.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 196
                sample_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xyxx, t1.xyzw, s0
                mov r4.xyz, r4.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                nop 
                mov r4.xyz, r4.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                mov r6.xyz, v3.xyzx  // tangentW<0,1,2>
                
                #line 206 "LightHelper.fx"
                mul r4.xyz, r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
                add r4.xyz, r4.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // normalT<0:Inf,1:Inf,2:Inf>
                
                #line 209
                mov r3.xyz, r3.xyzx  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r1.w, r6.zxyz, r3.xyzx
                mul r7.xyz, r3.yzxy, r1.wwww
                mov r7.xyz, -r7.xyzx
                add r6.xyz, r6.xyzx, r7.xyzx
                dp3 r1.w, r6.xyzx, r6.xyzx
                rsq r1.w, r1.w
                mul r6.xyz, r1.wwww, r6.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.xyz, r6.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r8.xyz, r3.zxyz, r7.yzxy
                mul r3.xyz, r3.xyzx, r7.xyzx
                mov r3.xyz, -r3.xyzx
                add r3.xyz, r3.xyzx, r8.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                mul r6.xyz, r4.xxxx, r6.xyzx
                mul r3.xyz, r3.xyzx, r4.yyyy
                add r3.xyz, r3.xyzx, r6.xyzx
                mul r0.xyz, r0.xyzx, r4.zzzz
                add r0.xyz, r0.xyzx, r3.xyzx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // NormalSampleToWorldSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 197 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, r0.xyzx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r3.xyz, cb1[16].xyzx  // mat<0,1,2>
                mov r4.xyz, cb1[17].xyzx  // mat<4,5,6>
                mov r6.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r7.xyz, r3.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r10.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r10.xyz, -r10.xyzx
                dp3 r3.w, r10.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r11.xyz, r0.xyzx, r3.wwww
                add r10.xyz, r10.xyzx, r11.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r3.w, r10.xyzx, r1.xyzx
                max r3.w, r3.w, l(0.000000)
                log r3.w, r3.w
                mul r3.w, r3.w, r6.w
                exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                mul r10.xyz, r4.xyzx, r1.wwww
                mul r8.xyz, r8.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r10.xyz, r6.xyzx, r3.wwww
                mul r9.xyz, r9.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r8.xyz, r2.wwww, r8.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r9.xyz, r2.wwww, r9.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r7.xyz, r7.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r8.xyz, r8.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r9.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                add r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r9.xyz, r9.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r10.xyz, cb0[4].xyzx  // L<0,1,2>
                mov r11.xyz, cb0[5].xyzx  // L<4,5,6>
                mov r12.xyz, cb0[6].xyzx  // L<8,9,10>
                mov r13.xyz, cb0[7].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r13.xyz, -r13.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r3.xyz, r3.xyzx, r10.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r13.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r10.xyz, -r13.xyzx
                dp3 r3.w, r10.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r13.xyz, r0.xyzx, r3.wwww
                add r10.xyz, r10.xyzx, r13.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r1.x, r10.xyzx, r1.xyzx
                max r1.x, r1.x, l(0.000000)
                log r1.x, r1.x
                mul r1.x, r1.x, r6.w
                exp r1.x, r1.x  // specFactor<0:NaN:Inf>
                mul r1.yzw, r4.xxyz, r1.wwww
                mul r1.yzw, r11.xxyz, r1.yyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r4.xyz, r6.xyzx, r1.xxxx
                mul r4.xyz, r12.xyzx, r4.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r1.xyz, r2.wwww, r1.yzwy, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r4.xyz, r2.wwww, r4.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r1.xyz, r1.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r4.xyz, r4.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r3.xyz, r3.xyzx, r7.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r1.xyz, r1.xyzx, r8.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r4.xyz, r4.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 224
                add r1.xyz, r1.xyzx, r3.xyzx
                mul r1.xyz, r1.xyzx, r5.xyzx
                add r1.xyz, r4.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 229
                dp3 r1.w, r2.xyzx, r0.xyzx
                add r1.w, r1.w, r1.w
                mov r1.w, -r1.w
                mul r0.xyz, r0.xyzx, r1.wwww
                add r0.xyz, r2.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t2.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[19].xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 242
                mov r1.x, -cb0[12].w
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[13].x
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 245
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[14].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 249
                mul r0.w, r5.w, cb1[17].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 199 instruction slots used
                            
            };
        }

    }

    technique11 Light3TexFogReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //   float gHeightScale;                // Offset:  320 Size:     4 [unused]
                //   int gMinSampleCount;               // Offset:  324 Size:     4 [unused]
                //   int gMaxSampleCount;               // Offset:  328 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_temps 6
                
                #line 64 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                dp3 r3.x, v3.xyzx, cb0[0].xyzx  // vout<10:NaN:Inf>
                dp3 r3.y, v3.xyzx, cb0[1].xyzx  // vout<11:NaN:Inf>
                dp3 r3.z, v3.xyzx, cb0[2].xyzx  // vout<12:NaN:Inf>
                
                #line 69
                dp4 r4.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 72
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r5.x, r0.xyzw, cb0[12].xyzw  // vout<13:NaN:Inf>
                dp4 r5.y, r0.xyzw, cb0[13].xyzw  // vout<14:NaN:Inf>
                mov o0.xyzw, r4.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xyz, r3.xyzx  // VS<10:NaN:Inf,11:NaN:Inf,12:NaN:Inf>
                mov o4.xy, r5.xyxx  // VS<13:NaN:Inf,14:NaN:Inf>
                ret 
                // Approximately 25 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4
                //   float gFogRange;                   // Offset:  208 Size:     4
                //   float4 gFogColor;                  // Offset:  224 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //   float gHeightScale;                // Offset:  320 Size:     4
                //   int gMinSampleCount;               // Offset:  324 Size:     4
                //   int gMaxSampleCount;               // Offset:  328 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gNormalMap                        texture  float4          2d    1        1
                // gCubeMap                          texture  float4        cube    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[15], immediateIndexed
                dcl_constantbuffer cb1[21], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texturecube (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_output o0.xyzw
                dcl_temps 15
                
                #line 85 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 88
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 91
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 94
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                mov r2.xyz, -r1.xyzx  // viewDirW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 103
                mov r3.xyz, r0.zxyz  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r1.w, v3.zxyz, r3.xyzx
                mul r4.xyz, r3.yzxy, r1.wwww
                mov r4.xyz, -r4.xyzx
                add r4.xyz, r4.xyzx, v3.xyzx
                dp3 r1.w, r4.xyzx, r4.xyzx
                rsq r1.w, r1.w
                mul r4.xyz, r1.wwww, r4.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r4.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r6.xyz, r3.zxyz, r5.yzxy
                mul r5.xyz, r3.xyzx, r5.xyzx
                mov r5.xyz, -r5.xyzx
                add r5.xyz, r5.xyzx, r6.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 109
                dp3 r4.x, r2.xyzx, r4.xyzx  // viewDirTS<0:NaN:Inf>
                dp3 r4.y, r2.xyzx, r5.xyzx  // viewDirTS<1:NaN:Inf>
                dp3 r1.w, r2.xyzx, r0.xyzx  // viewDirTS<2:NaN:Inf>
                mov r4.xy, -r4.xyxx
                mul r4.xy, r4.xyxx, cb1[20].xxxx
                div r4.xy, r4.xyxx, r1.wwww  // maxParallaxOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 116
                itof r1.w, cb1[20].z
                itof r2.w, cb1[20].y
                dp3 r3.w, r1.xyzx, r0.xyzx
                mov r4.z, -r1.w
                add r2.w, r2.w, r4.z
                mul r2.w, r2.w, r3.w
                add r1.w, r1.w, r2.w
                ftoi r1.w, r1.w  // sampleCount<0>
                itof r2.w, r1.w
                div r2.w, l(1.000000), r2.w  // yStep<0:Inf>
                mul r4.xy, r2.wwww, r4.xyxx  // texStep<0:NaN:Inf,1:NaN:Inf>
                
                #line 125
                deriv_rtx_coarse r4.zw, v4.xxxy  // dx<0:Inf,1:Inf>
                deriv_rty_coarse r5.xy, v4.xyxx  // dy<0:Inf,1:Inf>
                
                #line 138
                mov r5.zw, l(0,0,0,0)  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r6.xy, l(0,0,0,0)  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r6.zw, l(0,0,0,0)  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r3.w, l(0)  // sampleIndex<0>
                mov r7.x, l(1.000000)  // currRayY<0:NaN:Inf>
                mov r7.y, l(1.000000)  // prevRayY<0:NaN:Inf>
                mov r7.z, l(0)  // prevHeight<0:Inf>
                loop 
                  iadd r7.w, r1.w, l(1)
                  ilt r8.x, r3.w, r7.w
                  breakc_z r8.x
                  add r8.xy, r5.zwzz, v4.xyxx
                  sample_d_indexable(texture2d)(float,float,float,float) r8.x, r8.xyxx, t1.wxyz, s0, r4.zwzz, r5.xyxx  // currHeight<0:Inf>
                
                #line 143
                  lt r8.y, r7.x, r8.x
                  if_nz r8.y
                
                #line 147
                    mov r8.y, -r7.y
                    add r8.z, r7.z, r8.y
                    mov r8.w, -r8.x
                    add r8.w, r7.z, r8.w
                    add r8.w, r7.x, r8.w
                    add r8.y, r8.y, r8.w
                    div r8.y, r8.z, r8.y  // t<0:NaN:Inf>
                    mul r8.yz, r4.xxyx, r8.yyyy
                    add r6.zw, r6.xxxy, r8.yyyz  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r3.w, r7.w  // sampleIndex<0>
                
                #line 143
                  else 
                
                #line 156
                    iadd r3.w, r3.w, l(1)  // sampleIndex<0>
                    mov r6.xy, r5.zwzz  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r7.y, r7.x  // prevRayY<0:NaN:Inf>
                    mov r7.z, r8.x  // prevHeight<0:Inf>
                    add r5.zw, r4.xxxy, r5.zzzw  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                    mov r8.x, -r2.w
                    add r7.x, r7.x, r8.x  // currRayY<0:NaN:Inf>
                
                #line 143
                  endif 
                
                #line 138
                endloop 
                
                #line 170
                add r4.xy, r6.zwzz, v4.xyxx  // parallaxTex<0:NaN:Inf,1:NaN:Inf>
                
                #line 181
                sample_indexable(texture2d)(float,float,float,float) r5.xyzw, r4.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 196
                sample_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xyxx, t1.xyzw, s0
                mov r4.xyz, r4.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                nop 
                mov r4.xyz, r4.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                mov r6.xyz, v3.xyzx  // tangentW<0,1,2>
                
                #line 206 "LightHelper.fx"
                mul r4.xyz, r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
                add r4.xyz, r4.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // normalT<0:Inf,1:Inf,2:Inf>
                
                #line 209
                mov r3.xyz, r3.xyzx  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r1.w, r6.zxyz, r3.xyzx
                mul r7.xyz, r3.yzxy, r1.wwww
                mov r7.xyz, -r7.xyzx
                add r6.xyz, r6.xyzx, r7.xyzx
                dp3 r1.w, r6.xyzx, r6.xyzx
                rsq r1.w, r1.w
                mul r6.xyz, r1.wwww, r6.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.xyz, r6.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r8.xyz, r3.zxyz, r7.yzxy
                mul r3.xyz, r3.xyzx, r7.xyzx
                mov r3.xyz, -r3.xyzx
                add r3.xyz, r3.xyzx, r8.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                mul r6.xyz, r4.xxxx, r6.xyzx
                mul r3.xyz, r3.xyzx, r4.yyyy
                add r3.xyz, r3.xyzx, r6.xyzx
                mul r0.xyz, r0.xyzx, r4.zzzz
                add r0.xyz, r0.xyzx, r3.xyzx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // NormalSampleToWorldSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 197 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, r0.xyzx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r3.xyz, cb1[16].xyzx  // mat<0,1,2>
                mov r4.xyz, cb1[17].xyzx  // mat<4,5,6>
                mov r6.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r7.xyz, r3.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r10.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r10.xyz, -r10.xyzx
                dp3 r3.w, r10.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r11.xyz, r0.xyzx, r3.wwww
                add r10.xyz, r10.xyzx, r11.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r3.w, r10.xyzx, r1.xyzx
                max r3.w, r3.w, l(0.000000)
                log r3.w, r3.w
                mul r3.w, r3.w, r6.w
                exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                mul r10.xyz, r4.xyzx, r1.wwww
                mul r8.xyz, r8.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r10.xyz, r6.xyzx, r3.wwww
                mul r9.xyz, r9.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r8.xyz, r2.wwww, r8.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r9.xyz, r2.wwww, r9.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r7.xyz, r7.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r8.xyz, r8.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r9.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                add r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r9.xyz, r9.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r10.xyz, cb0[4].xyzx  // L<0,1,2>
                mov r11.xyz, cb0[5].xyzx  // L<4,5,6>
                mov r12.xyz, cb0[6].xyzx  // L<8,9,10>
                mov r13.xyz, cb0[7].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r13.xyz, -r13.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r10.xyz, r3.xyzx, r10.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r13.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r13.xyz, -r13.xyzx
                dp3 r3.w, r13.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r14.xyz, r0.xyzx, r3.wwww
                add r13.xyz, r13.xyzx, r14.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r3.w, r13.xyzx, r1.xyzx
                max r3.w, r3.w, l(0.000000)
                log r3.w, r3.w
                mul r3.w, r3.w, r6.w
                exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                mul r13.xyz, r4.xyzx, r1.wwww
                mul r11.xyz, r11.xyzx, r13.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r13.xyz, r6.xyzx, r3.wwww
                mul r12.xyz, r12.xyzx, r13.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r11.xyz, r2.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r12.xyz, r2.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r10.xyz, r10.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r7.xyz, r7.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r8.xyz, r8.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r9.xyz, r9.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r10.xyz, cb0[8].xyzx  // L<0,1,2>
                mov r11.xyz, cb0[9].xyzx  // L<4,5,6>
                mov r12.xyz, cb0[10].xyzx  // L<8,9,10>
                mov r13.xyz, cb0[11].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r13.xyz, -r13.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r3.xyz, r3.xyzx, r10.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r13.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r10.xyz, -r13.xyzx
                dp3 r3.w, r10.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r13.xyz, r0.xyzx, r3.wwww
                add r10.xyz, r10.xyzx, r13.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r1.x, r10.xyzx, r1.xyzx
                max r1.x, r1.x, l(0.000000)
                log r1.x, r1.x
                mul r1.x, r1.x, r6.w
                exp r1.x, r1.x  // specFactor<0:NaN:Inf>
                mul r1.yzw, r4.xxyz, r1.wwww
                mul r1.yzw, r11.xxyz, r1.yyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r4.xyz, r6.xyzx, r1.xxxx
                mul r4.xyz, r12.xyzx, r4.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r1.xyz, r2.wwww, r1.yzwy, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r4.xyz, r2.wwww, r4.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r1.xyz, r1.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r4.xyz, r4.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r3.xyz, r3.xyzx, r7.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r1.xyz, r1.xyzx, r8.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r4.xyz, r4.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 224
                add r1.xyz, r1.xyzx, r3.xyzx
                mul r1.xyz, r1.xyzx, r5.xyzx
                add r1.xyz, r4.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 229
                dp3 r1.w, r2.xyzx, r0.xyzx
                add r1.w, r1.w, r1.w
                mov r1.w, -r1.w
                mul r0.xyz, r0.xyzx, r1.wwww
                add r0.xyz, r2.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t2.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[19].xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 242
                mov r1.x, -cb0[12].w
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[13].x
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 245
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[14].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 249
                mul r0.w, r5.w, cb1[17].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 231 instruction slots used
                            
            };
        }

    }

    technique11 Light0TexAlphaClipFogReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //   float gHeightScale;                // Offset:  320 Size:     4 [unused]
                //   int gMinSampleCount;               // Offset:  324 Size:     4 [unused]
                //   int gMaxSampleCount;               // Offset:  328 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_temps 6
                
                #line 64 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                dp3 r3.x, v3.xyzx, cb0[0].xyzx  // vout<10:NaN:Inf>
                dp3 r3.y, v3.xyzx, cb0[1].xyzx  // vout<11:NaN:Inf>
                dp3 r3.z, v3.xyzx, cb0[2].xyzx  // vout<12:NaN:Inf>
                
                #line 69
                dp4 r4.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 72
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r5.x, r0.xyzw, cb0[12].xyzw  // vout<13:NaN:Inf>
                dp4 r5.y, r0.xyzw, cb0[13].xyzw  // vout<14:NaN:Inf>
                mov o0.xyzw, r4.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xyz, r3.xyzx  // VS<10:NaN:Inf,11:NaN:Inf,12:NaN:Inf>
                mov o4.xy, r5.xyxx  // VS<13:NaN:Inf,14:NaN:Inf>
                ret 
                // Approximately 25 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192 [unused]
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4
                //   float gFogRange;                   // Offset:  208 Size:     4
                //   float4 gFogColor;                  // Offset:  224 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //   float gHeightScale;                // Offset:  320 Size:     4
                //   int gMinSampleCount;               // Offset:  324 Size:     4
                //   int gMaxSampleCount;               // Offset:  328 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gNormalMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[15], immediateIndexed
                dcl_constantbuffer cb1[21], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_output o0.xyzw
                dcl_temps 7
                
                #line 85 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 88
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 91
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 94
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                mov r2.xyz, -r1.xyzx  // viewDirW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 103
                mov r3.xyz, r0.zxyz  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r1.w, v3.zxyz, r3.xyzx
                mul r4.xyz, r3.yzxy, r1.wwww
                mov r4.xyz, -r4.xyzx
                add r4.xyz, r4.xyzx, v3.xyzx
                dp3 r1.w, r4.xyzx, r4.xyzx
                rsq r1.w, r1.w
                mul r4.xyz, r1.wwww, r4.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r4.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r6.xyz, r3.zxyz, r5.yzxy
                mul r3.xyz, r3.xyzx, r5.xyzx
                mov r3.xyz, -r3.xyzx
                add r3.xyz, r3.xyzx, r6.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 109
                dp3 r4.x, r2.xyzx, r4.xyzx  // viewDirTS<0:NaN:Inf>
                dp3 r4.y, r2.xyzx, r3.xyzx  // viewDirTS<1:NaN:Inf>
                dp3 r1.w, r2.xyzx, r0.xyzx  // viewDirTS<2:NaN:Inf>
                mov r2.xy, -r4.xyxx
                mul r2.xy, r2.xyxx, cb1[20].xxxx
                div r2.xy, r2.xyxx, r1.wwww  // maxParallaxOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 116
                itof r1.w, cb1[20].z
                itof r2.z, cb1[20].y
                dp3 r0.x, r1.xyzx, r0.xyzx
                mov r0.y, -r1.w
                add r0.y, r0.y, r2.z
                mul r0.x, r0.y, r0.x
                add r0.x, r0.x, r1.w
                ftoi r0.x, r0.x  // sampleCount<0>
                itof r0.y, r0.x
                div r0.y, l(1.000000), r0.y  // yStep<0:Inf>
                mul r1.xy, r0.yyyy, r2.xyxx  // texStep<0:NaN:Inf,1:NaN:Inf>
                
                #line 125
                deriv_rtx_coarse r1.zw, v4.xxxy  // dx<0:Inf,1:Inf>
                deriv_rty_coarse r2.xy, v4.xyxx  // dy<0:Inf,1:Inf>
                
                #line 138
                mov r2.zw, l(0,0,0,0)  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r3.xy, l(0,0,0,0)  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r3.zw, l(0,0,0,0)  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r0.z, l(0)  // sampleIndex<0>
                mov r4.x, l(1.000000)  // currRayY<0:NaN:Inf>
                mov r4.y, l(1.000000)  // prevRayY<0:NaN:Inf>
                mov r4.z, l(0)  // prevHeight<0:Inf>
                loop 
                  iadd r4.w, r0.x, l(1)
                  ilt r5.x, r0.z, r4.w
                  breakc_z r5.x
                  add r5.xy, r2.zwzz, v4.xyxx
                  sample_d_indexable(texture2d)(float,float,float,float) r5.x, r5.xyxx, t1.wxyz, s0, r1.zwzz, r2.xyxx  // currHeight<0:Inf>
                
                #line 143
                  lt r5.y, r4.x, r5.x
                  if_nz r5.y
                
                #line 147
                    mov r5.y, -r4.y
                    add r5.z, r4.z, r5.y
                    mov r5.w, -r5.x
                    add r5.w, r4.z, r5.w
                    add r5.w, r4.x, r5.w
                    add r5.y, r5.y, r5.w
                    div r5.y, r5.z, r5.y  // t<0:NaN:Inf>
                    mul r5.yz, r1.xxyx, r5.yyyy
                    add r3.zw, r3.xxxy, r5.yyyz  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r0.z, r4.w  // sampleIndex<0>
                
                #line 143
                  else 
                
                #line 156
                    iadd r0.z, r0.z, l(1)  // sampleIndex<0>
                    mov r3.xy, r2.zwzz  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r4.y, r4.x  // prevRayY<0:NaN:Inf>
                    mov r4.z, r5.x  // prevHeight<0:Inf>
                    add r2.zw, r1.xxxy, r2.zzzw  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                    mov r5.x, -r0.y
                    add r4.x, r4.x, r5.x  // currRayY<0:NaN:Inf>
                
                #line 143
                  endif 
                
                #line 138
                endloop 
                
                #line 170
                add r0.xy, r3.zwzz, v4.xyxx  // parallaxTex<0:NaN:Inf,1:NaN:Inf>
                
                #line 181
                sample_indexable(texture2d)(float,float,float,float) r1.xyzw, r0.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 188
                add r0.x, r1.w, l(-0.100000)
                lt r0.x, r0.x, l(0.000000)
                and r0.x, r0.x, l(-1)
                discard r0.x
                
                #line 197
                nop 
                
                #line 203
                mov r1.xyz, r1.xyzx  // litColor<0:Inf,1:Inf,2:Inf>
                
                #line 242
                mov r0.x, -cb0[12].w
                add r0.x, r0.x, r0.w
                div r0.x, r0.x, cb0[13].x
                max r0.x, r0.x, l(0.000000)
                min r0.x, r0.x, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 245
                mov r0.yzw, -r1.xxyz
                add r0.yzw, r0.yyzw, cb0[14].xxyz
                mul r0.xyz, r0.yzwy, r0.xxxx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 249
                mul r0.w, r1.w, cb1[17].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 97 instruction slots used
                            
            };
        }

    }

    technique11 Light1TexAlphaClipFogReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //   float gHeightScale;                // Offset:  320 Size:     4 [unused]
                //   int gMinSampleCount;               // Offset:  324 Size:     4 [unused]
                //   int gMaxSampleCount;               // Offset:  328 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_temps 6
                
                #line 64 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                dp3 r3.x, v3.xyzx, cb0[0].xyzx  // vout<10:NaN:Inf>
                dp3 r3.y, v3.xyzx, cb0[1].xyzx  // vout<11:NaN:Inf>
                dp3 r3.z, v3.xyzx, cb0[2].xyzx  // vout<12:NaN:Inf>
                
                #line 69
                dp4 r4.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 72
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r5.x, r0.xyzw, cb0[12].xyzw  // vout<13:NaN:Inf>
                dp4 r5.y, r0.xyzw, cb0[13].xyzw  // vout<14:NaN:Inf>
                mov o0.xyzw, r4.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xyz, r3.xyzx  // VS<10:NaN:Inf,11:NaN:Inf,12:NaN:Inf>
                mov o4.xy, r5.xyxx  // VS<13:NaN:Inf,14:NaN:Inf>
                ret 
                // Approximately 25 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4
                //   float gFogRange;                   // Offset:  208 Size:     4
                //   float4 gFogColor;                  // Offset:  224 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //   float gHeightScale;                // Offset:  320 Size:     4
                //   int gMinSampleCount;               // Offset:  324 Size:     4
                //   int gMaxSampleCount;               // Offset:  328 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gNormalMap                        texture  float4          2d    1        1
                // gCubeMap                          texture  float4        cube    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[15], immediateIndexed
                dcl_constantbuffer cb1[21], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texturecube (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_output o0.xyzw
                dcl_temps 11
                
                #line 85 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 88
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 91
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 94
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                mov r2.xyz, -r1.xyzx  // viewDirW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 103
                mov r3.xyz, r0.zxyz  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r1.w, v3.zxyz, r3.xyzx
                mul r4.xyz, r3.yzxy, r1.wwww
                mov r4.xyz, -r4.xyzx
                add r4.xyz, r4.xyzx, v3.xyzx
                dp3 r1.w, r4.xyzx, r4.xyzx
                rsq r1.w, r1.w
                mul r4.xyz, r1.wwww, r4.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r4.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r6.xyz, r3.zxyz, r5.yzxy
                mul r5.xyz, r3.xyzx, r5.xyzx
                mov r5.xyz, -r5.xyzx
                add r5.xyz, r5.xyzx, r6.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 109
                dp3 r4.x, r2.xyzx, r4.xyzx  // viewDirTS<0:NaN:Inf>
                dp3 r4.y, r2.xyzx, r5.xyzx  // viewDirTS<1:NaN:Inf>
                dp3 r1.w, r2.xyzx, r0.xyzx  // viewDirTS<2:NaN:Inf>
                mov r4.xy, -r4.xyxx
                mul r4.xy, r4.xyxx, cb1[20].xxxx
                div r4.xy, r4.xyxx, r1.wwww  // maxParallaxOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 116
                itof r1.w, cb1[20].z
                itof r2.w, cb1[20].y
                dp3 r3.w, r1.xyzx, r0.xyzx
                mov r4.z, -r1.w
                add r2.w, r2.w, r4.z
                mul r2.w, r2.w, r3.w
                add r1.w, r1.w, r2.w
                ftoi r1.w, r1.w  // sampleCount<0>
                itof r2.w, r1.w
                div r2.w, l(1.000000), r2.w  // yStep<0:Inf>
                mul r4.xy, r2.wwww, r4.xyxx  // texStep<0:NaN:Inf,1:NaN:Inf>
                
                #line 125
                deriv_rtx_coarse r4.zw, v4.xxxy  // dx<0:Inf,1:Inf>
                deriv_rty_coarse r5.xy, v4.xyxx  // dy<0:Inf,1:Inf>
                
                #line 138
                mov r5.zw, l(0,0,0,0)  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r6.xy, l(0,0,0,0)  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r6.zw, l(0,0,0,0)  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r3.w, l(0)  // sampleIndex<0>
                mov r7.x, l(1.000000)  // currRayY<0:NaN:Inf>
                mov r7.y, l(1.000000)  // prevRayY<0:NaN:Inf>
                mov r7.z, l(0)  // prevHeight<0:Inf>
                loop 
                  iadd r7.w, r1.w, l(1)
                  ilt r8.x, r3.w, r7.w
                  breakc_z r8.x
                  add r8.xy, r5.zwzz, v4.xyxx
                  sample_d_indexable(texture2d)(float,float,float,float) r8.x, r8.xyxx, t1.wxyz, s0, r4.zwzz, r5.xyxx  // currHeight<0:Inf>
                
                #line 143
                  lt r8.y, r7.x, r8.x
                  if_nz r8.y
                
                #line 147
                    mov r8.y, -r7.y
                    add r8.z, r7.z, r8.y
                    mov r8.w, -r8.x
                    add r8.w, r7.z, r8.w
                    add r8.w, r7.x, r8.w
                    add r8.y, r8.y, r8.w
                    div r8.y, r8.z, r8.y  // t<0:NaN:Inf>
                    mul r8.yz, r4.xxyx, r8.yyyy
                    add r6.zw, r6.xxxy, r8.yyyz  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r3.w, r7.w  // sampleIndex<0>
                
                #line 143
                  else 
                
                #line 156
                    iadd r3.w, r3.w, l(1)  // sampleIndex<0>
                    mov r6.xy, r5.zwzz  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r7.y, r7.x  // prevRayY<0:NaN:Inf>
                    mov r7.z, r8.x  // prevHeight<0:Inf>
                    add r5.zw, r4.xxxy, r5.zzzw  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                    mov r8.x, -r2.w
                    add r7.x, r7.x, r8.x  // currRayY<0:NaN:Inf>
                
                #line 143
                  endif 
                
                #line 138
                endloop 
                
                #line 170
                add r4.xy, r6.zwzz, v4.xyxx  // parallaxTex<0:NaN:Inf,1:NaN:Inf>
                
                #line 181
                sample_indexable(texture2d)(float,float,float,float) r5.xyzw, r4.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 188
                add r1.w, r5.w, l(-0.100000)
                lt r1.w, r1.w, l(0.000000)
                and r1.w, r1.w, l(-1)
                discard r1.w
                
                #line 196
                sample_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xyxx, t1.xyzw, s0
                mov r4.xyz, r4.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                nop 
                mov r4.xyz, r4.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                mov r6.xyz, v3.xyzx  // tangentW<0,1,2>
                
                #line 206 "LightHelper.fx"
                mul r4.xyz, r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
                add r4.xyz, r4.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // normalT<0:Inf,1:Inf,2:Inf>
                
                #line 209
                mov r3.xyz, r3.xyzx  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r1.w, r6.zxyz, r3.xyzx
                mul r7.xyz, r3.yzxy, r1.wwww
                mov r7.xyz, -r7.xyzx
                add r6.xyz, r6.xyzx, r7.xyzx
                dp3 r1.w, r6.xyzx, r6.xyzx
                rsq r1.w, r1.w
                mul r6.xyz, r1.wwww, r6.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.xyz, r6.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r8.xyz, r3.zxyz, r7.yzxy
                mul r3.xyz, r3.xyzx, r7.xyzx
                mov r3.xyz, -r3.xyzx
                add r3.xyz, r3.xyzx, r8.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                mul r6.xyz, r4.xxxx, r6.xyzx
                mul r3.xyz, r3.xyzx, r4.yyyy
                add r3.xyz, r3.xyzx, r6.xyzx
                mul r0.xyz, r0.xyzx, r4.zzzz
                add r0.xyz, r0.xyzx, r3.xyzx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // NormalSampleToWorldSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 197 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, r0.xyzx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r3.xyz, cb1[16].xyzx  // mat<0,1,2>
                mov r4.xyz, cb1[17].xyzx  // mat<4,5,6>
                mov r6.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r3.xyz, r3.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r10.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r7.xyz, -r10.xyzx
                dp3 r3.w, r7.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r10.xyz, r0.xyzx, r3.wwww
                add r7.xyz, r7.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r1.x, r7.xyzx, r1.xyzx
                max r1.x, r1.x, l(0.000000)
                log r1.x, r1.x
                mul r1.x, r1.x, r6.w
                exp r1.x, r1.x  // specFactor<0:NaN:Inf>
                mul r1.yzw, r4.xxyz, r1.wwww
                mul r1.yzw, r8.xxyz, r1.yyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r4.xyz, r6.xyzx, r1.xxxx
                mul r4.xyz, r9.xyzx, r4.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r1.xyz, r2.wwww, r1.yzwy, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r4.xyz, r2.wwww, r4.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r1.xyz, r1.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r4.xyz, r4.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                add r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 224
                add r1.xyz, r1.xyzx, r3.xyzx
                mul r1.xyz, r1.xyzx, r5.xyzx
                add r1.xyz, r4.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 229
                dp3 r1.w, r2.xyzx, r0.xyzx
                add r1.w, r1.w, r1.w
                mov r1.w, -r1.w
                mul r0.xyz, r0.xyzx, r1.wwww
                add r0.xyz, r2.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t2.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[19].xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 242
                mov r1.x, -cb0[12].w
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[13].x
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 245
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[14].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 249
                mul r0.w, r5.w, cb1[17].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 171 instruction slots used
                            
            };
        }

    }

    technique11 Light2TexAlphaClipFogReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //   float gHeightScale;                // Offset:  320 Size:     4 [unused]
                //   int gMinSampleCount;               // Offset:  324 Size:     4 [unused]
                //   int gMaxSampleCount;               // Offset:  328 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_temps 6
                
                #line 64 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                dp3 r3.x, v3.xyzx, cb0[0].xyzx  // vout<10:NaN:Inf>
                dp3 r3.y, v3.xyzx, cb0[1].xyzx  // vout<11:NaN:Inf>
                dp3 r3.z, v3.xyzx, cb0[2].xyzx  // vout<12:NaN:Inf>
                
                #line 69
                dp4 r4.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 72
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r5.x, r0.xyzw, cb0[12].xyzw  // vout<13:NaN:Inf>
                dp4 r5.y, r0.xyzw, cb0[13].xyzw  // vout<14:NaN:Inf>
                mov o0.xyzw, r4.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xyz, r3.xyzx  // VS<10:NaN:Inf,11:NaN:Inf,12:NaN:Inf>
                mov o4.xy, r5.xyxx  // VS<13:NaN:Inf,14:NaN:Inf>
                ret 
                // Approximately 25 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4
                //   float gFogRange;                   // Offset:  208 Size:     4
                //   float4 gFogColor;                  // Offset:  224 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //   float gHeightScale;                // Offset:  320 Size:     4
                //   int gMinSampleCount;               // Offset:  324 Size:     4
                //   int gMaxSampleCount;               // Offset:  328 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gNormalMap                        texture  float4          2d    1        1
                // gCubeMap                          texture  float4        cube    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[15], immediateIndexed
                dcl_constantbuffer cb1[21], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texturecube (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_output o0.xyzw
                dcl_temps 14
                
                #line 85 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 88
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 91
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 94
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                mov r2.xyz, -r1.xyzx  // viewDirW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 103
                mov r3.xyz, r0.zxyz  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r1.w, v3.zxyz, r3.xyzx
                mul r4.xyz, r3.yzxy, r1.wwww
                mov r4.xyz, -r4.xyzx
                add r4.xyz, r4.xyzx, v3.xyzx
                dp3 r1.w, r4.xyzx, r4.xyzx
                rsq r1.w, r1.w
                mul r4.xyz, r1.wwww, r4.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r4.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r6.xyz, r3.zxyz, r5.yzxy
                mul r5.xyz, r3.xyzx, r5.xyzx
                mov r5.xyz, -r5.xyzx
                add r5.xyz, r5.xyzx, r6.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 109
                dp3 r4.x, r2.xyzx, r4.xyzx  // viewDirTS<0:NaN:Inf>
                dp3 r4.y, r2.xyzx, r5.xyzx  // viewDirTS<1:NaN:Inf>
                dp3 r1.w, r2.xyzx, r0.xyzx  // viewDirTS<2:NaN:Inf>
                mov r4.xy, -r4.xyxx
                mul r4.xy, r4.xyxx, cb1[20].xxxx
                div r4.xy, r4.xyxx, r1.wwww  // maxParallaxOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 116
                itof r1.w, cb1[20].z
                itof r2.w, cb1[20].y
                dp3 r3.w, r1.xyzx, r0.xyzx
                mov r4.z, -r1.w
                add r2.w, r2.w, r4.z
                mul r2.w, r2.w, r3.w
                add r1.w, r1.w, r2.w
                ftoi r1.w, r1.w  // sampleCount<0>
                itof r2.w, r1.w
                div r2.w, l(1.000000), r2.w  // yStep<0:Inf>
                mul r4.xy, r2.wwww, r4.xyxx  // texStep<0:NaN:Inf,1:NaN:Inf>
                
                #line 125
                deriv_rtx_coarse r4.zw, v4.xxxy  // dx<0:Inf,1:Inf>
                deriv_rty_coarse r5.xy, v4.xyxx  // dy<0:Inf,1:Inf>
                
                #line 138
                mov r5.zw, l(0,0,0,0)  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r6.xy, l(0,0,0,0)  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r6.zw, l(0,0,0,0)  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r3.w, l(0)  // sampleIndex<0>
                mov r7.x, l(1.000000)  // currRayY<0:NaN:Inf>
                mov r7.y, l(1.000000)  // prevRayY<0:NaN:Inf>
                mov r7.z, l(0)  // prevHeight<0:Inf>
                loop 
                  iadd r7.w, r1.w, l(1)
                  ilt r8.x, r3.w, r7.w
                  breakc_z r8.x
                  add r8.xy, r5.zwzz, v4.xyxx
                  sample_d_indexable(texture2d)(float,float,float,float) r8.x, r8.xyxx, t1.wxyz, s0, r4.zwzz, r5.xyxx  // currHeight<0:Inf>
                
                #line 143
                  lt r8.y, r7.x, r8.x
                  if_nz r8.y
                
                #line 147
                    mov r8.y, -r7.y
                    add r8.z, r7.z, r8.y
                    mov r8.w, -r8.x
                    add r8.w, r7.z, r8.w
                    add r8.w, r7.x, r8.w
                    add r8.y, r8.y, r8.w
                    div r8.y, r8.z, r8.y  // t<0:NaN:Inf>
                    mul r8.yz, r4.xxyx, r8.yyyy
                    add r6.zw, r6.xxxy, r8.yyyz  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r3.w, r7.w  // sampleIndex<0>
                
                #line 143
                  else 
                
                #line 156
                    iadd r3.w, r3.w, l(1)  // sampleIndex<0>
                    mov r6.xy, r5.zwzz  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r7.y, r7.x  // prevRayY<0:NaN:Inf>
                    mov r7.z, r8.x  // prevHeight<0:Inf>
                    add r5.zw, r4.xxxy, r5.zzzw  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                    mov r8.x, -r2.w
                    add r7.x, r7.x, r8.x  // currRayY<0:NaN:Inf>
                
                #line 143
                  endif 
                
                #line 138
                endloop 
                
                #line 170
                add r4.xy, r6.zwzz, v4.xyxx  // parallaxTex<0:NaN:Inf,1:NaN:Inf>
                
                #line 181
                sample_indexable(texture2d)(float,float,float,float) r5.xyzw, r4.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 188
                add r1.w, r5.w, l(-0.100000)
                lt r1.w, r1.w, l(0.000000)
                and r1.w, r1.w, l(-1)
                discard r1.w
                
                #line 196
                sample_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xyxx, t1.xyzw, s0
                mov r4.xyz, r4.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                nop 
                mov r4.xyz, r4.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                mov r6.xyz, v3.xyzx  // tangentW<0,1,2>
                
                #line 206 "LightHelper.fx"
                mul r4.xyz, r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
                add r4.xyz, r4.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // normalT<0:Inf,1:Inf,2:Inf>
                
                #line 209
                mov r3.xyz, r3.xyzx  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r1.w, r6.zxyz, r3.xyzx
                mul r7.xyz, r3.yzxy, r1.wwww
                mov r7.xyz, -r7.xyzx
                add r6.xyz, r6.xyzx, r7.xyzx
                dp3 r1.w, r6.xyzx, r6.xyzx
                rsq r1.w, r1.w
                mul r6.xyz, r1.wwww, r6.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.xyz, r6.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r8.xyz, r3.zxyz, r7.yzxy
                mul r3.xyz, r3.xyzx, r7.xyzx
                mov r3.xyz, -r3.xyzx
                add r3.xyz, r3.xyzx, r8.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                mul r6.xyz, r4.xxxx, r6.xyzx
                mul r3.xyz, r3.xyzx, r4.yyyy
                add r3.xyz, r3.xyzx, r6.xyzx
                mul r0.xyz, r0.xyzx, r4.zzzz
                add r0.xyz, r0.xyzx, r3.xyzx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // NormalSampleToWorldSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 197 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, r0.xyzx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r3.xyz, cb1[16].xyzx  // mat<0,1,2>
                mov r4.xyz, cb1[17].xyzx  // mat<4,5,6>
                mov r6.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r7.xyz, r3.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r10.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r10.xyz, -r10.xyzx
                dp3 r3.w, r10.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r11.xyz, r0.xyzx, r3.wwww
                add r10.xyz, r10.xyzx, r11.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r3.w, r10.xyzx, r1.xyzx
                max r3.w, r3.w, l(0.000000)
                log r3.w, r3.w
                mul r3.w, r3.w, r6.w
                exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                mul r10.xyz, r4.xyzx, r1.wwww
                mul r8.xyz, r8.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r10.xyz, r6.xyzx, r3.wwww
                mul r9.xyz, r9.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r8.xyz, r2.wwww, r8.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r9.xyz, r2.wwww, r9.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r7.xyz, r7.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r8.xyz, r8.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r9.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                add r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r9.xyz, r9.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r10.xyz, cb0[4].xyzx  // L<0,1,2>
                mov r11.xyz, cb0[5].xyzx  // L<4,5,6>
                mov r12.xyz, cb0[6].xyzx  // L<8,9,10>
                mov r13.xyz, cb0[7].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r13.xyz, -r13.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r3.xyz, r3.xyzx, r10.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r13.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r10.xyz, -r13.xyzx
                dp3 r3.w, r10.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r13.xyz, r0.xyzx, r3.wwww
                add r10.xyz, r10.xyzx, r13.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r1.x, r10.xyzx, r1.xyzx
                max r1.x, r1.x, l(0.000000)
                log r1.x, r1.x
                mul r1.x, r1.x, r6.w
                exp r1.x, r1.x  // specFactor<0:NaN:Inf>
                mul r1.yzw, r4.xxyz, r1.wwww
                mul r1.yzw, r11.xxyz, r1.yyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r4.xyz, r6.xyzx, r1.xxxx
                mul r4.xyz, r12.xyzx, r4.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r1.xyz, r2.wwww, r1.yzwy, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r4.xyz, r2.wwww, r4.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r1.xyz, r1.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r4.xyz, r4.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r3.xyz, r3.xyzx, r7.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r1.xyz, r1.xyzx, r8.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r4.xyz, r4.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 224
                add r1.xyz, r1.xyzx, r3.xyzx
                mul r1.xyz, r1.xyzx, r5.xyzx
                add r1.xyz, r4.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 229
                dp3 r1.w, r2.xyzx, r0.xyzx
                add r1.w, r1.w, r1.w
                mov r1.w, -r1.w
                mul r0.xyz, r0.xyzx, r1.wwww
                add r0.xyz, r2.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t2.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[19].xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 242
                mov r1.x, -cb0[12].w
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[13].x
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 245
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[14].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 249
                mul r0.w, r5.w, cb1[17].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 203 instruction slots used
                            
            };
        }

    }

    technique11 Light3TexAlphaClipFogReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //   float gHeightScale;                // Offset:  320 Size:     4 [unused]
                //   int gMinSampleCount;               // Offset:  324 Size:     4 [unused]
                //   int gMaxSampleCount;               // Offset:  328 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_temps 6
                
                #line 64 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                dp3 r3.x, v3.xyzx, cb0[0].xyzx  // vout<10:NaN:Inf>
                dp3 r3.y, v3.xyzx, cb0[1].xyzx  // vout<11:NaN:Inf>
                dp3 r3.z, v3.xyzx, cb0[2].xyzx  // vout<12:NaN:Inf>
                
                #line 69
                dp4 r4.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 72
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r5.x, r0.xyzw, cb0[12].xyzw  // vout<13:NaN:Inf>
                dp4 r5.y, r0.xyzw, cb0[13].xyzw  // vout<14:NaN:Inf>
                mov o0.xyzw, r4.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xyz, r3.xyzx  // VS<10:NaN:Inf,11:NaN:Inf,12:NaN:Inf>
                mov o4.xy, r5.xyxx  // VS<13:NaN:Inf,14:NaN:Inf>
                ret 
                // Approximately 25 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4
                //   float gFogRange;                   // Offset:  208 Size:     4
                //   float4 gFogColor;                  // Offset:  224 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //   float gHeightScale;                // Offset:  320 Size:     4
                //   int gMinSampleCount;               // Offset:  324 Size:     4
                //   int gMaxSampleCount;               // Offset:  328 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gNormalMap                        texture  float4          2d    1        1
                // gCubeMap                          texture  float4        cube    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[15], immediateIndexed
                dcl_constantbuffer cb1[21], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texturecube (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_output o0.xyzw
                dcl_temps 15
                
                #line 85 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 88
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 91
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 94
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                mov r2.xyz, -r1.xyzx  // viewDirW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 103
                mov r3.xyz, r0.zxyz  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r1.w, v3.zxyz, r3.xyzx
                mul r4.xyz, r3.yzxy, r1.wwww
                mov r4.xyz, -r4.xyzx
                add r4.xyz, r4.xyzx, v3.xyzx
                dp3 r1.w, r4.xyzx, r4.xyzx
                rsq r1.w, r1.w
                mul r4.xyz, r1.wwww, r4.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r4.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r6.xyz, r3.zxyz, r5.yzxy
                mul r5.xyz, r3.xyzx, r5.xyzx
                mov r5.xyz, -r5.xyzx
                add r5.xyz, r5.xyzx, r6.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 109
                dp3 r4.x, r2.xyzx, r4.xyzx  // viewDirTS<0:NaN:Inf>
                dp3 r4.y, r2.xyzx, r5.xyzx  // viewDirTS<1:NaN:Inf>
                dp3 r1.w, r2.xyzx, r0.xyzx  // viewDirTS<2:NaN:Inf>
                mov r4.xy, -r4.xyxx
                mul r4.xy, r4.xyxx, cb1[20].xxxx
                div r4.xy, r4.xyxx, r1.wwww  // maxParallaxOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 116
                itof r1.w, cb1[20].z
                itof r2.w, cb1[20].y
                dp3 r3.w, r1.xyzx, r0.xyzx
                mov r4.z, -r1.w
                add r2.w, r2.w, r4.z
                mul r2.w, r2.w, r3.w
                add r1.w, r1.w, r2.w
                ftoi r1.w, r1.w  // sampleCount<0>
                itof r2.w, r1.w
                div r2.w, l(1.000000), r2.w  // yStep<0:Inf>
                mul r4.xy, r2.wwww, r4.xyxx  // texStep<0:NaN:Inf,1:NaN:Inf>
                
                #line 125
                deriv_rtx_coarse r4.zw, v4.xxxy  // dx<0:Inf,1:Inf>
                deriv_rty_coarse r5.xy, v4.xyxx  // dy<0:Inf,1:Inf>
                
                #line 138
                mov r5.zw, l(0,0,0,0)  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r6.xy, l(0,0,0,0)  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r6.zw, l(0,0,0,0)  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                mov r3.w, l(0)  // sampleIndex<0>
                mov r7.x, l(1.000000)  // currRayY<0:NaN:Inf>
                mov r7.y, l(1.000000)  // prevRayY<0:NaN:Inf>
                mov r7.z, l(0)  // prevHeight<0:Inf>
                loop 
                  iadd r7.w, r1.w, l(1)
                  ilt r8.x, r3.w, r7.w
                  breakc_z r8.x
                  add r8.xy, r5.zwzz, v4.xyxx
                  sample_d_indexable(texture2d)(float,float,float,float) r8.x, r8.xyxx, t1.wxyz, s0, r4.zwzz, r5.xyxx  // currHeight<0:Inf>
                
                #line 143
                  lt r8.y, r7.x, r8.x
                  if_nz r8.y
                
                #line 147
                    mov r8.y, -r7.y
                    add r8.z, r7.z, r8.y
                    mov r8.w, -r8.x
                    add r8.w, r7.z, r8.w
                    add r8.w, r7.x, r8.w
                    add r8.y, r8.y, r8.w
                    div r8.y, r8.z, r8.y  // t<0:NaN:Inf>
                    mul r8.yz, r4.xxyx, r8.yyyy
                    add r6.zw, r6.xxxy, r8.yyyz  // finalTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r3.w, r7.w  // sampleIndex<0>
                
                #line 143
                  else 
                
                #line 156
                    iadd r3.w, r3.w, l(1)  // sampleIndex<0>
                    mov r6.xy, r5.zwzz  // prevTexOffset<0:NaN:Inf,1:NaN:Inf>
                    mov r7.y, r7.x  // prevRayY<0:NaN:Inf>
                    mov r7.z, r8.x  // prevHeight<0:Inf>
                    add r5.zw, r4.xxxy, r5.zzzw  // currTexOffset<0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                    mov r8.x, -r2.w
                    add r7.x, r7.x, r8.x  // currRayY<0:NaN:Inf>
                
                #line 143
                  endif 
                
                #line 138
                endloop 
                
                #line 170
                add r4.xy, r6.zwzz, v4.xyxx  // parallaxTex<0:NaN:Inf,1:NaN:Inf>
                
                #line 181
                sample_indexable(texture2d)(float,float,float,float) r5.xyzw, r4.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 188
                add r1.w, r5.w, l(-0.100000)
                lt r1.w, r1.w, l(0.000000)
                and r1.w, r1.w, l(-1)
                discard r1.w
                
                #line 196
                sample_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xyxx, t1.xyzw, s0
                mov r4.xyz, r4.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                nop 
                mov r4.xyz, r4.xyzx  // normalMapSample<0:Inf,1:Inf,2:Inf>
                mov r6.xyz, v3.xyzx  // tangentW<0,1,2>
                
                #line 206 "LightHelper.fx"
                mul r4.xyz, r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
                add r4.xyz, r4.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // normalT<0:Inf,1:Inf,2:Inf>
                
                #line 209
                mov r3.xyz, r3.xyzx  // N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                dp3 r1.w, r6.zxyz, r3.xyzx
                mul r7.xyz, r3.yzxy, r1.wwww
                mov r7.xyz, -r7.xyzx
                add r6.xyz, r6.xyzx, r7.xyzx
                dp3 r1.w, r6.xyzx, r6.xyzx
                rsq r1.w, r1.w
                mul r6.xyz, r1.wwww, r6.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.xyz, r6.yzxy  // T<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                mul r8.xyz, r3.zxyz, r7.yzxy
                mul r3.xyz, r3.xyzx, r7.xyzx
                mov r3.xyz, -r3.xyzx
                add r3.xyz, r3.xyzx, r8.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                mul r6.xyz, r4.xxxx, r6.xyzx
                mul r3.xyz, r3.xyzx, r4.yyyy
                add r3.xyz, r3.xyzx, r6.xyzx
                mul r0.xyz, r0.xyzx, r4.zzzz
                add r0.xyz, r0.xyzx, r3.xyzx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // NormalSampleToWorldSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 197 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r0.xyz, r0.xyzx  // bumpedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r3.xyz, cb1[16].xyzx  // mat<0,1,2>
                mov r4.xyz, cb1[17].xyzx  // mat<4,5,6>
                mov r6.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r7.xyz, r3.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r10.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r10.xyz, -r10.xyzx
                dp3 r3.w, r10.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r11.xyz, r0.xyzx, r3.wwww
                add r10.xyz, r10.xyzx, r11.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r3.w, r10.xyzx, r1.xyzx
                max r3.w, r3.w, l(0.000000)
                log r3.w, r3.w
                mul r3.w, r3.w, r6.w
                exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                mul r10.xyz, r4.xyzx, r1.wwww
                mul r8.xyz, r8.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r10.xyz, r6.xyzx, r3.wwww
                mul r9.xyz, r9.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r8.xyz, r2.wwww, r8.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r9.xyz, r2.wwww, r9.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r7.xyz, r7.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r8.xyz, r8.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r9.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                add r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r9.xyz, r9.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r10.xyz, cb0[4].xyzx  // L<0,1,2>
                mov r11.xyz, cb0[5].xyzx  // L<4,5,6>
                mov r12.xyz, cb0[6].xyzx  // L<8,9,10>
                mov r13.xyz, cb0[7].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r13.xyz, -r13.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r10.xyz, r3.xyzx, r10.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r13.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r13.xyz, -r13.xyzx
                dp3 r3.w, r13.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r14.xyz, r0.xyzx, r3.wwww
                add r13.xyz, r13.xyzx, r14.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r3.w, r13.xyzx, r1.xyzx
                max r3.w, r3.w, l(0.000000)
                log r3.w, r3.w
                mul r3.w, r3.w, r6.w
                exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                mul r13.xyz, r4.xyzx, r1.wwww
                mul r11.xyz, r11.xyzx, r13.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r13.xyz, r6.xyzx, r3.wwww
                mul r12.xyz, r12.xyzx, r13.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r11.xyz, r2.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r12.xyz, r2.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r10.xyz, r10.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r7.xyz, r7.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r8.xyz, r8.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r9.xyz, r9.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                nop 
                mov r10.xyz, cb0[8].xyzx  // L<0,1,2>
                mov r11.xyz, cb0[9].xyzx  // L<4,5,6>
                mov r12.xyz, cb0[10].xyzx  // L<8,9,10>
                mov r13.xyz, cb0[11].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r13.xyz, -r13.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r3.xyz, r3.xyzx, r10.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r13.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r10.xyz, -r13.xyzx
                dp3 r3.w, r10.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r13.xyz, r0.xyzx, r3.wwww
                add r10.xyz, r10.xyzx, r13.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r1.x, r10.xyzx, r1.xyzx
                max r1.x, r1.x, l(0.000000)
                log r1.x, r1.x
                mul r1.x, r1.x, r6.w
                exp r1.x, r1.x  // specFactor<0:NaN:Inf>
                mul r1.yzw, r4.xxyz, r1.wwww
                mul r1.yzw, r11.xxyz, r1.yyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r4.xyz, r6.xyzx, r1.xxxx
                mul r4.xyz, r12.xyzx, r4.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r1.xyz, r2.wwww, r1.yzwy, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r4.xyz, r2.wwww, r4.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216 "D:\Data\Books\d3d11WebSamples\ParallaxOcclusion\FX\ParallaxOcclusion.fx"
                mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r1.xyz, r1.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r4.xyz, r4.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 219
                add r3.xyz, r3.xyzx, r7.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r1.xyz, r1.xyzx, r8.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r4.xyz, r4.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 224
                add r1.xyz, r1.xyzx, r3.xyzx
                mul r1.xyz, r1.xyzx, r5.xyzx
                add r1.xyz, r4.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 229
                dp3 r1.w, r2.xyzx, r0.xyzx
                add r1.w, r1.w, r1.w
                mov r1.w, -r1.w
                mul r0.xyz, r0.xyzx, r1.wwww
                add r0.xyz, r2.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t2.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[19].xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 242
                mov r1.x, -cb0[12].w
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[13].x
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 245
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[14].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 249
                mul r0.w, r5.w, cb1[17].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 235 instruction slots used
                            
            };
        }

    }

}

