// 공통성과 가변성의 분리 개념

// 변하지 않은 전체 알고리즘내의 변하는 부분(정책)은 분리 되어야 한다.

// 변하는 것을 분리하는 2가지 기술

// A. 가상함수로 분리 -> 자식 클래스에서 가상함수 재정의를 통한 정책 수정
//						"Template Method"
//						실행시간 교체 안됨, 정책 재사용 안됨.

// B. 변하는 것을 클래스로 분리 - 정책 클래스 => 정책의 재사용 가능
//		정책 클래스를 교체하는 2가지 기술
//		1. 인터페이스를 사용한 교체 => "Strategy"(전략) 패턴

//		2. 템플릿 인자로 교체 => "Policy Base Design" (C++ 에서만 의미있음)
//								실생시간 교체 안됨. 하지만 빠르다.(인라인 치환)
//
